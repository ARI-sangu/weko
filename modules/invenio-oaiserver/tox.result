GLOB sdist-make: /code/modules/invenio-oaiserver/setup.py
c1 inst-nodeps: /code/modules/invenio-oaiserver/.tox/.tmp/package/1/invenio-oaiserver-1.0.0.zip
c1 installed: alabaster==0.7.13,alembic==0.9.6,amqp==2.6.0,angular-gettext-babel==0.3,aniso8601==8.0.0,arrow==0.12.1,asn1crypto==0.23.0,atomicwrites==1.4.1,attrs==17.4.0,b2handle==1.1.2,Babel==2.5.1,bagit==1.7.0,beautifulsoup4==4.9.3,bibtexparser==1.0.1,billiard==3.6.3.0,binaryornot==0.4.4,bleach==3.1.0,blinker==1.4,boto3==1.7.84,botocore==1.10.84,cachelib==0.1,cachetools==4.2.4,cchardet==2.1.1,celery==4.4.4,certifi==2017.11.5,cffi==1.11.2,chardet==3.0.4,citeproc-py==0.5.1,citeproc-py-styles==0.1.2,click==6.7,cookiecutter==1.6.0,counter-robots==2018.6,coverage==6.2,cryptography==2.1.4,datacite==1.0.1,DateTime==4.9,decorator==4.1.2,defusedxml==0.5.0,dictdiffer==0.7.0,distlib==0.3.6,dnspython==2.2.1,docutils==0.18.1,dojson==1.3.2,elasticsearch==6.1.1,elasticsearch-dsl==6.4.0,elementpath==1.0.6,email-validator==1.0.5,entrypoints==0.2.3,feedgen==0.7.0,filelock==3.4.1,Flask==1.1.0,Flask-Admin==1.5.3,Flask-Alembic==2.0.1,Flask-Assets==0.12,Flask-BabelEx==0.9.4,Flask-Breadcrumbs==0.5.0,Flask-Caching==1.10.1,Flask-CeleryExt==0.3.4,Flask-Collect==1.2.2,Flask-Cors==3.0.3,Flask-DebugToolbar==0.13.1,Flask-IIIF==0.6.1,Flask-KVSession==0.6.2,Flask-Limiter==1.1.0,Flask-Login==0.4.1,Flask-Mail==0.9.1,flask-marshmallow==0.14.0,Flask-Menu==0.6.0,-e git+https://github.com/RCOSDP/flask-oauthlib.git@83148ee01e9da37a8a1134febe83bc32b95bac6e#egg=Flask_OAuthlib,Flask-Plugins==1.6.1,Flask-Principal==0.4.0,Flask-RESTful==0.3.8,Flask-Security==3.0.0,flask-shell-ipython==0.4.1,Flask-Sitemap==0.4.0,Flask-SQLAlchemy==2.3.2,flask-talisman==0.4.1,Flask-WTF==0.14.3,-e git+https://github.com/RCOSDP/pyfpdf.git@f9b032148283d535cabc7789858081c80de36fef#egg=fpdf,frozendict==2.3.8,fs==0.5.4,ftfy==4.4.3,future==0.16.0,github3.py==1.1.0,html5lib==1.0.1,idna==2.6,iiif-prezi==0.3.0,imagesize==1.4.1,importlib-metadata==4.8.3,importlib-resources==5.4.0,infinity==1.4,intervals==0.8.0,invenio-access==1.1.0,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@b6d063b45722b12bcf7ec0a937354cb7fbdc71f5#egg=invenio_accounts&subdirectory=modules/invenio-accounts,invenio-admin==1.1.2,invenio-app==1.1.0,invenio-assets==1.0.0,invenio-base==1.0.2,invenio-cache==1.0.0,invenio-celery==1.1.3,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@b6d063b45722b12bcf7ec0a937354cb7fbdc71f5#egg=invenio_communities&subdirectory=modules/invenio-communities,invenio-config==1.0.0,invenio-csl-rest==1.0.0a1,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@b6d063b45722b12bcf7ec0a937354cb7fbdc71f5#egg=invenio_db&subdirectory=modules/invenio-db,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@b6d063b45722b12bcf7ec0a937354cb7fbdc71f5#egg=invenio_deposit&subdirectory=modules/invenio-deposit,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@b6d063b45722b12bcf7ec0a937354cb7fbdc71f5#egg=invenio_files_rest&subdirectory=modules/invenio-files-rest,invenio-formatter==1.0.0b3,invenio-i18n==1.0.0,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@b6d063b45722b12bcf7ec0a937354cb7fbdc71f5#egg=invenio_iiif&subdirectory=modules/invenio-iiif,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@b6d063b45722b12bcf7ec0a937354cb7fbdc71f5#egg=invenio_indexer&subdirectory=modules/invenio-indexer,invenio-jsonschemas==1.0.0,invenio-logging==1.0.0b3,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@b6d063b45722b12bcf7ec0a937354cb7fbdc71f5#egg=invenio_mail&subdirectory=modules/invenio-mail,invenio-marc21==1.0.0a8,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@b6d063b45722b12bcf7ec0a937354cb7fbdc71f5#egg=invenio_oaiharvester&subdirectory=modules/invenio-oaiharvester,invenio-oaiserver @ file:///code/modules/invenio-oaiserver/.tox/.tmp/package/1/invenio-oaiserver-1.0.0.zip,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@b6d063b45722b12bcf7ec0a937354cb7fbdc71f5#egg=invenio_oauth2server&subdirectory=modules/invenio-oauth2server,invenio-oauthclient==1.0.0,invenio-pidrelations==1.0.0a4,invenio-pidstore==1.0.0,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@b6d063b45722b12bcf7ec0a937354cb7fbdc71f5#egg=invenio_previewer&subdirectory=modules/invenio-previewer,invenio-query-parser==0.6.0,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@b6d063b45722b12bcf7ec0a937354cb7fbdc71f5#egg=invenio_queues&subdirectory=modules/invenio-queues,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@b6d063b45722b12bcf7ec0a937354cb7fbdc71f5#egg=invenio_records&subdirectory=modules/invenio-records,invenio-records-files==1.0.0a10,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@b6d063b45722b12bcf7ec0a937354cb7fbdc71f5#egg=invenio_records_rest&subdirectory=modules/invenio-records-rest,invenio-records-ui==1.0.0,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@b6d063b45722b12bcf7ec0a937354cb7fbdc71f5#egg=invenio_resourcesyncclient&subdirectory=modules/invenio-resourcesyncclient,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@b6d063b45722b12bcf7ec0a937354cb7fbdc71f5#egg=invenio_resourcesyncserver&subdirectory=modules/invenio-resourcesyncserver,invenio-rest==1.1.2,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@b6d063b45722b12bcf7ec0a937354cb7fbdc71f5#egg=invenio_s3&subdirectory=modules/invenio-s3,-e git+https://github.com/RCOSDP/invenio-search.git@cff9744c5dc651893a9c51672c5b8da9adc21e16#egg=invenio_search,-e git+https://github.com/RCOSDP/invenio-search-ui.git@74bd3b2990ff27b39e01b6b31be9a0b5fda3dd0f#egg=invenio_search_ui,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@b6d063b45722b12bcf7ec0a937354cb7fbdc71f5#egg=invenio_stats&subdirectory=modules/invenio-stats,invenio-theme==1.0.0b4,ipaddress==1.0.19,ipython==6.2.1,ipython-genutils==0.2.0,itsdangerous==0.24,jedi==0.11.0,Jinja2==2.10.1,jinja2-cli==0.6.0,jinja2-time==0.2.0,jmespath==0.10.0,jsmin==2.2.2,jsonpatch==1.21,jsonpath-ng==1.5.2,jsonpointer==1.14,jsonref==0.1,jsonresolver==0.2.1,jsonschema==2.6.0,jupyter-client==5.2.2,jupyter-core==4.4.0,-e git+https://github.com/RCOSDP/kombu.git@f204fdf078d5e94393c86693f545e2d011f620f5#egg=kombu,limits==1.2.1,lxml==4.1.1,Mako==1.0.7,MarkupSafe==1.1.1,marshmallow==2.20.1,marshmallow-sqlalchemy==0.23.1,maxminddb==1.5.2,maxminddb-geolite2==2017.803,mistune==0.8.3,mock==5.0.2,more-itertools==8.10.0,msgpack==0.6.2,nbconvert==5.3.1,nbformat==4.4.0,netaddr==0.8.0,node-semver==0.1.1,numpy==1.16.1,oauthlib==2.1.0,ordereddict==1.1,packaging==21.3,pandocfilters==1.4.2,parso==0.1.0,passlib==1.7.1,pbr==5.11.1,pexpect==4.3.0,pickleshare==0.7.4,Pillow==5.4.1,platformdirs==2.4.0,pluggy==0.13.1,ply==3.11,poyo==0.4.1,prompt-toolkit==1.0.15,psycopg2==2.7.3.2,ptyprocess==0.5.2,py==1.11.0,pycparser==2.18,Pygments==2.2.0,PyJWT==1.5.3,PyLD==2.0.3,pyparsing==3.1.0,-e git+https://github.com/RCOSDP/PyPDF2.git@fefc684a3a74aff6f99e5dff24f9b4dd1c95169d#egg=PyPDF2,pyPEG2==2.15.2,pytest==4.2.0,pytest-cov==2.9.0,python-dateutil==2.6.1,python-editor==1.0.3,python-geoip==1.2,pytz==2017.3,pyzmq==17.0.0,redis==2.10.6,requests==2.18.4,requests-oauthlib==1.1.0,resync==1.0.9,s3fs==0.1.6,s3transfer==0.1.13,selenium==3.141.0,Sickle==0.6.4,simplegeneric==0.8.1,simplejson==3.12.0,simplekv==0.11.2,six==1.16.0,snowballstemmer==2.2.0,soupsieve==2.3.2.post1,speaklater==1.3,Sphinx==1.8.4,sphinxcontrib-serializinghtml==1.1.5,sphinxcontrib-websupport==1.2.4,SQLAlchemy==1.2.19,SQLAlchemy-Continuum==1.3.6,SQLAlchemy-Utils==0.35.0,stevedore==3.5.2,sword3common==0.1.1,testpath==0.3.1,toml==0.10.2,tornado==4.5.3,tox==3.28.0,traitlets==4.3.2,typing_extensions==4.1.1,ua-parser==0.7.3,uritemplate==4.1.1,uritools==2.1.0,urllib3==1.22,uWSGI==2.0.21,uwsgitop==0.11,validators==0.12.0,vine==1.3.0,virtualenv==20.17.1,virtualenv-clone==0.5.7,virtualenvwrapper==4.8.4,Wand==0.6.1,wcwidth==0.1.7,webargs==5.5.2,webassets==0.12.1,webencodings==0.5.1,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@b6d063b45722b12bcf7ec0a937354cb7fbdc71f5#egg=weko_accounts&subdirectory=modules/weko-accounts,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@b6d063b45722b12bcf7ec0a937354cb7fbdc71f5#egg=weko_admin&subdirectory=modules/weko-admin,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@b6d063b45722b12bcf7ec0a937354cb7fbdc71f5#egg=weko_authors&subdirectory=modules/weko-authors,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@b6d063b45722b12bcf7ec0a937354cb7fbdc71f5#egg=weko_bulkupdate&subdirectory=modules/weko-bulkupdate,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@b6d063b45722b12bcf7ec0a937354cb7fbdc71f5#egg=weko_deposit&subdirectory=modules/weko-deposit,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@b6d063b45722b12bcf7ec0a937354cb7fbdc71f5#egg=weko_gridlayout&subdirectory=modules/weko-gridlayout,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@b6d063b45722b12bcf7ec0a937354cb7fbdc71f5#egg=weko_groups&subdirectory=modules/weko-groups,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@b6d063b45722b12bcf7ec0a937354cb7fbdc71f5#egg=weko_handle&subdirectory=modules/weko-handle,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@b6d063b45722b12bcf7ec0a937354cb7fbdc71f5#egg=weko_index_tree&subdirectory=modules/weko-index-tree,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@b6d063b45722b12bcf7ec0a937354cb7fbdc71f5#egg=weko_indextree_journal&subdirectory=modules/weko-indextree-journal,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@b6d063b45722b12bcf7ec0a937354cb7fbdc71f5#egg=weko_items_autofill&subdirectory=modules/weko-items-autofill,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@b6d063b45722b12bcf7ec0a937354cb7fbdc71f5#egg=weko_items_ui&subdirectory=modules/weko-items-ui,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@b6d063b45722b12bcf7ec0a937354cb7fbdc71f5#egg=weko_itemtypes_ui&subdirectory=modules/weko-itemtypes-ui,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@b6d063b45722b12bcf7ec0a937354cb7fbdc71f5#egg=weko_logging&subdirectory=modules/weko-logging,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@b6d063b45722b12bcf7ec0a937354cb7fbdc71f5#egg=weko_records&subdirectory=modules/weko-records,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@b6d063b45722b12bcf7ec0a937354cb7fbdc71f5#egg=weko_records_ui&subdirectory=modules/weko-records-ui,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@b6d063b45722b12bcf7ec0a937354cb7fbdc71f5#egg=weko_redis&subdirectory=modules/weko-redis,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@b6d063b45722b12bcf7ec0a937354cb7fbdc71f5#egg=weko_schema_ui&subdirectory=modules/weko-schema-ui,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@b6d063b45722b12bcf7ec0a937354cb7fbdc71f5#egg=weko_search_ui&subdirectory=modules/weko-search-ui,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@b6d063b45722b12bcf7ec0a937354cb7fbdc71f5#egg=weko_sitemap&subdirectory=modules/weko-sitemap,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@b6d063b45722b12bcf7ec0a937354cb7fbdc71f5#egg=weko_swordserver&subdirectory=modules/weko-swordserver,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@b6d063b45722b12bcf7ec0a937354cb7fbdc71f5#egg=weko_theme&subdirectory=modules/weko-theme,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@b6d063b45722b12bcf7ec0a937354cb7fbdc71f5#egg=weko_user_profiles&subdirectory=modules/weko-user-profiles,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@b6d063b45722b12bcf7ec0a937354cb7fbdc71f5#egg=weko_workflow&subdirectory=modules/weko-workflow,Werkzeug==0.15.2,whichcraft==0.4.1,WTForms==2.1,WTForms-Alchemy==0.16.5,WTForms-Components==0.10.3,xmlschema==0.9.30,xmltodict==0.12.0,zipp==3.6.0,zope.interface==5.5.2
c1 run-test-pre: PYTHONHASHSEED='2760615681'
c1 run-test: commands[0] | pytest --cov=invenio_oaiserver tests -v -vv -s --cov-branch --cov-report=term --basetemp=/code/modules/invenio-oaiserver/.tox/c1/tmp
============================= test session starts ==============================
platform linux -- Python 3.6.15, pytest-4.2.0, py-1.11.0, pluggy-0.13.1 -- /code/modules/invenio-oaiserver/.tox/c1/bin/python
cachedir: .tox/c1/.pytest_cache
rootdir: /code/modules/invenio-oaiserver, inifile:
plugins: celery-4.4.4, cov-2.9.0
collecting ... collected 91 items

tests/test_admin.py::test_admin PASSED
tests/test_admin.py::test_OAISetModelView PASSED
tests/test_admin.py::test_IdentifyModelView PASSED
tests/test_api.py::TestOaiIdentify::test_get_all PASSED
tests/test_api.py::TestOaiIdentify::test_get_count PASSED
tests/test_app.py::test_version PASSED
tests/test_app.py::test_init PASSED
tests/test_fetcher.py::test_oaiid_fetcher PASSED
tests/test_invenio_oaiserver.py::test_version PASSED
tests/test_invenio_oaiserver.py::test_init PASSED
tests/test_invenio_oaiserver.py::test_view PASSED
tests/test_invenio_oaiserver.py::test_view_with_xsl PASSED
tests/test_invenio_oaiserver.py::test_alembic FAILED
tests/test_invenio_oaiserver.py::test_AppState PASSED
tests/test_minters.py::test_oaiid_minter PASSED
tests/test_models.py::TestOAISet::test_get_set_by_spec PASSED
tests/test_models.py::test_oaiset_attribute_changed ERROR
tests/test_percolator.py::test_search_pattern_change SKIPPED
tests/test_percolator.py::test_populate_oaisets SKIPPED
tests/test_percolator.py::test_oaiset_add_remove_record PASSED
tests/test_percolator.py::test_create_percolator_mapping PASSED
tests/test_percolator.py::test_percolate_query PASSED
tests/test_percolator.py::test_get_percolator_doc_type PASSED
tests/test_percolator.py::test_new_percolator ERROR
tests/test_percolator.py::test_delete_percolator ERROR
tests/test_percolator.py::test_build_cache PASSED
tests/test_percolator.py::test_get_record_sets ERROR
tests/test_provider.py::test_create ERROR
tests/test_query.py::test_query_string_parser PASSED
tests/test_query.py::test_get_affected_records PASSED
tests/test_query.py::test_get_records ERROR
tests/test_receivers.py::test_OAIServerUpdater ERROR
tests/test_receivers.py::test_after_insert_oai_set ERROR
tests/test_receivers.py::test_after_update_oai_set ERROR
tests/test_receivers.py::test_after_delete_oai_set ERROR
tests/test_response.py::test_getrecord ERROR
tests/test_response.py::test_getrecord_future_item ERROR
tests/test_response.py::test_listidentifiers ERROR
tests/test_response.py::test_listrecords ERROR
tests/test_response.py::test_envelope PASSED
tests/test_response.py::test_identify ERROR
tests/test_response.py::test_resumption_token ERROR
tests/test_response.py::test_listsets ERROR
tests/test_response.py::test_listmetadataformats ERROR
tests/test_response.py::test_header ERROR
tests/test_response.py::test_extract_paths_from_sets ERROR
tests/test_response.py::test_is_pubdate_in_future PASSED
tests/test_response.py::test_is_private_index ERROR
tests/test_response.py::test_is_private_index_by_public_list PASSED
tests/test_response.py::test_get_error_code_msg PASSED
tests/test_response.py::test_create_identifier_index PASSED
tests/test_response.py::test_check_correct_system_props_mapping ERROR
tests/test_response.py::test_combine_record_file_urls ERROR
tests/test_response.py::test_create_files_url PASSED
tests/test_response.py::test_get_identifier ERROR
tests/test_response.py::test_issue34851_listrecords ERROR
tests/test_response.py::test_issue34851_listidentifiers ERROR
tests/test_resumption_token.py::test_schema_from_verb PASSED
tests/test_resumption_token.py::test_serialize ERROR
tests/test_resumption_token.py::test_ResumptionTokenSchema ERROR
tests/test_tasks.py::test_records_commit ERROR
tests/test_tasks.py::test_update_records_sets ERROR
tests/test_tasks.py::test_update_affected_records ERROR
tests/test_utils.py::test_serializer ERROR
tests/test_utils.py::test_dumps_etree ERROR
tests/test_utils.py::test_datetime_to_datestamp PASSED
tests/test_utils.py::test_eprints_description PASSED
tests/test_utils.py::test_handle_license_free PASSED
tests/test_utils.py::test_get_index_state ERROR
tests/test_utils.py::test_is_output_harvest PASSED
tests/test_verbs.py::test_no_verb PASSED
tests/test_verbs.py::test_wrong_verb PASSED
tests/test_verbs.py::test_identify ERROR
tests/test_verbs.py::test_getrecord_fail ERROR
tests/test_verbs.py::test_identify_with_additional_args PASSED
tests/test_verbs.py::test_listmetadataformats PASSED
tests/test_verbs.py::test_listmetadataformats_record ERROR
tests/test_verbs.py::test_listmetadataformats_record_fail ERROR
tests/test_verbs.py::test_listsets ERROR
tests/test_verbs.py::test_fail_missing_metadataPrefix PASSED
tests/test_verbs.py::test_fail_not_exist_metadataPrefix PASSED
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix PASSED
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args PASSED
tests/test_verbs.py::test_validate_metadata_prefix ERROR
tests/test_verbs.py::test_validate_duplicate_argument PASSED
tests/test_verbs.py::test_DateTime_from_iso_permissive PASSED
tests/test_verbs.py::test_OAIScheme_validate PASSED
tests/test_views_server.py::test_validation_error PASSED
tests/test_views_server.py::test_pid_error PASSED
tests/test_views_server.py::test_resumptiontoken_error PASSED
tests/test_views_server.py::test_dbsession_clean ERROR

==================================== ERRORS ====================================
_______________ ERROR at setup of test_oaiset_attribute_changed ________________
file /code/modules/invenio-oaiserver/tests/test_models.py, line 14
  def test_oaiset_attribute_changed(app,db,mocker):
E       fixture 'mocker' not found
>       available fixtures: app, authority_data, base_app, bibliographic_data, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, celery_app, celery_config, celery_enable_logging, celery_includes, celery_parameters, celery_session_app, celery_session_worker, celery_worker, celery_worker_parameters, celery_worker_pool, client, cov, db, depends_on_current_app, doctest_namespace, es_app, identify, indexes, instance_path, item_type, mock_execute, monkeypatch, no_cover, oaiset, pytestconfig, record_property, record_xml_attribute, records, recwarn, schema, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, use_celery_app_trap, users, without_oaiset_signals
>       use 'pytest --fixtures [testpath]' for help on them.

/code/modules/invenio-oaiserver/tests/test_models.py:14
____________________ ERROR at setup of test_new_percolator _____________________
file /code/modules/invenio-oaiserver/tests/test_percolator.py, line 351
  def test_new_percolator(es_app,db,without_oaiset_signals,mocker):
E       fixture 'mocker' not found
>       available fixtures: app, authority_data, base_app, bibliographic_data, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, celery_app, celery_config, celery_enable_logging, celery_includes, celery_parameters, celery_session_app, celery_session_worker, celery_worker, celery_worker_parameters, celery_worker_pool, client, cov, db, depends_on_current_app, doctest_namespace, es_app, identify, indexes, instance_path, item_type, mock_execute, monkeypatch, no_cover, oaiset, pytestconfig, record_property, record_xml_attribute, records, recwarn, schema, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, use_celery_app_trap, users, without_oaiset_signals
>       use 'pytest --fixtures [testpath]' for help on them.

/code/modules/invenio-oaiserver/tests/test_percolator.py:351
___________________ ERROR at setup of test_delete_percolator ___________________
file /code/modules/invenio-oaiserver/tests/test_percolator.py, line 365
  def test_delete_percolator(es_app,mocker):
E       fixture 'mocker' not found
>       available fixtures: app, authority_data, base_app, bibliographic_data, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, celery_app, celery_config, celery_enable_logging, celery_includes, celery_parameters, celery_session_app, celery_session_worker, celery_worker, celery_worker_parameters, celery_worker_pool, client, cov, db, depends_on_current_app, doctest_namespace, es_app, identify, indexes, instance_path, item_type, mock_execute, monkeypatch, no_cover, oaiset, pytestconfig, record_property, record_xml_attribute, records, recwarn, schema, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, use_celery_app_trap, users, without_oaiset_signals
>       use 'pytest --fixtures [testpath]' for help on them.

/code/modules/invenio-oaiserver/tests/test_percolator.py:365
____________________ ERROR at setup of test_get_record_sets ____________________

self = Engine(postgresql+psycopg2://invenio:***@postgresql:5432/postgres)
fn = <bound method Pool.connect of <sqlalchemy.pool.QueuePool object at 0x7fd8d03f6208>>
connection = None

    def _wrap_pool_connect(self, fn, connection):
        dialect = self.dialect
        try:
>           return fn()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d03f6208>

    def connect(self):
        """Return a DBAPI connection from the pool.
    
        The connection is instrumented such that when its
        ``close()`` method is called, the connection will be returned to
        the pool.
    
        """
        if not self._use_threadlocal:
>           return _ConnectionFairy._checkout(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionFairy'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d03f6208>, threadconns = None
fairy = None

    @classmethod
    def _checkout(cls, pool, threadconns=None, fairy=None):
        if not fairy:
>           fairy = _ConnectionRecord.checkout(pool)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionRecord'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d03f6208>

    @classmethod
    def checkout(cls, pool):
>       rec = pool._do_get()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d03f6208>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
                return self._create_connection()
            except:
                with util.safe_reraise():
>                   self._dec_overflow()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.util.langhelpers.safe_reraise object at 0x7fd8d03f6780>
type_ = None, value = None, traceback = None

    def __exit__(self, type_, value, traceback):
        # see #2703 for notes
        if type_ is None:
            exc_type, exc_value, exc_tb = self._exc_info
            self._exc_info = None  # remove potential circular references
            if not self.warn_only:
>               compat.reraise(exc_type, exc_value, exc_tb)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

tp = <class 'psycopg2.ProgrammingError'>
value = ProgrammingError('syntax error at or near "PRAGMA"\nLINE 1: PRAGMA foreign_keys=ON\n        ^\n',)
tb = <traceback object at 0x7fd8d03fb548>, cause = None

    def reraise(tp, value, tb=None, cause=None):
        if cause is not None:
            assert cause is not value, "Same cause emitted"
            value.__cause__ = cause
        if value.__traceback__ is not tb:
            raise value.with_traceback(tb)
>       raise value

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d03f6208>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
>               return self._create_connection()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d03f6208>

    def _create_connection(self):
        """Called by subclasses to create a new ConnectionRecord."""
    
>       return _ConnectionRecord(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d03f6320>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d03f6208>, connect = True

    def __init__(self, pool, connect=True):
        self.__pool = pool
        if connect:
>           self.__connect(first_connect_check=True)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d03f6320>
first_connect_check = True

    def __connect(self, first_connect_check=False):
        pool = self.__pool
    
        # ensure any existing connection is removed, so that if
        # creator fails, this attribute stays None
        self.connection = None
        try:
            self.starttime = time.time()
            connection = pool._invoke_creator(self)
            pool.logger.debug("Created new connection %r", connection)
            self.connection = connection
        except Exception as e:
            pool.logger.debug("Error on connect(): %s", e)
            raise
        else:
            if first_connect_check:
                pool.dispatch.first_connect.for_modify(
                    pool.dispatch
                ).exec_once(self.connection, self)
            if pool.dispatch.connect:
>               pool.dispatch.connect(self.connection, self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.event.attr._ListenerCollection object at 0x7fd8d04aa898>
args = (<connection object at 0x7fd8d1409e88; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>, <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d03f6320>)
kw = {}, fn = <function do_sqlite_connect at 0x7fd8fe856d08>

    def __call__(self, *args, **kw):
        """Execute this event."""
    
        for fn in self.parent_listeners:
>           fn(*args, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8d1409e88; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d03f6320>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       psycopg2.ProgrammingError: syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^

../invenio-db/invenio_db/shared.py:116: ProgrammingError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.yield_fixture()
    def db(app):
        """Database fixture."""
>       if not database_exists(str(db_.engine.url)):

tests/conftest.py:136: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:484: in database_exists
    return bool(get_scalar_result(engine, text))
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:458: in get_scalar_result
    result_proxy = engine.execute(sql)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2143: in execute
    connection = self.contextual_connect(close_with_result=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2192: in contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2232: in _wrap_pool_connect
    e, dialect, self
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1528: in _handle_dbapi_exception_noconnection
    util.raise_from_cause(sqlalchemy_exception, exc_info)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: in _wrap_pool_connect
    return fn()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: in connect
    return _ConnectionFairy._checkout(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: in _checkout
    fairy = _ConnectionRecord.checkout(pool)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: in checkout
    rec = pool._do_get()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: in _do_get
    self._dec_overflow()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: in _do_get
    return self._create_connection()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: in _create_connection
    return _ConnectionRecord(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: in __init__
    self.__connect(first_connect_check=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: in __connect
    pool.dispatch.connect(self.connection, self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: in __call__
    fn(*args, **kw)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8d1409e88; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d03f6320>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       sqlalchemy.exc.ProgrammingError: (psycopg2.ProgrammingError) syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^
E        (Background on this error at: http://sqlalche.me/e/f405)

../invenio-db/invenio_db/shared.py:116: ProgrammingError
________________________ ERROR at setup of test_create _________________________

self = Engine(postgresql+psycopg2://invenio:***@postgresql:5432/postgres)
fn = <bound method Pool.connect of <sqlalchemy.pool.QueuePool object at 0x7fd8d09dde80>>
connection = None

    def _wrap_pool_connect(self, fn, connection):
        dialect = self.dialect
        try:
>           return fn()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d09dde80>

    def connect(self):
        """Return a DBAPI connection from the pool.
    
        The connection is instrumented such that when its
        ``close()`` method is called, the connection will be returned to
        the pool.
    
        """
        if not self._use_threadlocal:
>           return _ConnectionFairy._checkout(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionFairy'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d09dde80>, threadconns = None
fairy = None

    @classmethod
    def _checkout(cls, pool, threadconns=None, fairy=None):
        if not fairy:
>           fairy = _ConnectionRecord.checkout(pool)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionRecord'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d09dde80>

    @classmethod
    def checkout(cls, pool):
>       rec = pool._do_get()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d09dde80>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
                return self._create_connection()
            except:
                with util.safe_reraise():
>                   self._dec_overflow()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.util.langhelpers.safe_reraise object at 0x7fd8d09dd940>
type_ = None, value = None, traceback = None

    def __exit__(self, type_, value, traceback):
        # see #2703 for notes
        if type_ is None:
            exc_type, exc_value, exc_tb = self._exc_info
            self._exc_info = None  # remove potential circular references
            if not self.warn_only:
>               compat.reraise(exc_type, exc_value, exc_tb)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

tp = <class 'psycopg2.ProgrammingError'>
value = ProgrammingError('syntax error at or near "PRAGMA"\nLINE 1: PRAGMA foreign_keys=ON\n        ^\n',)
tb = <traceback object at 0x7fd8d0e759c8>, cause = None

    def reraise(tp, value, tb=None, cause=None):
        if cause is not None:
            assert cause is not value, "Same cause emitted"
            value.__cause__ = cause
        if value.__traceback__ is not tb:
            raise value.with_traceback(tb)
>       raise value

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d09dde80>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
>               return self._create_connection()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d09dde80>

    def _create_connection(self):
        """Called by subclasses to create a new ConnectionRecord."""
    
>       return _ConnectionRecord(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d09dd278>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d09dde80>, connect = True

    def __init__(self, pool, connect=True):
        self.__pool = pool
        if connect:
>           self.__connect(first_connect_check=True)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d09dd278>
first_connect_check = True

    def __connect(self, first_connect_check=False):
        pool = self.__pool
    
        # ensure any existing connection is removed, so that if
        # creator fails, this attribute stays None
        self.connection = None
        try:
            self.starttime = time.time()
            connection = pool._invoke_creator(self)
            pool.logger.debug("Created new connection %r", connection)
            self.connection = connection
        except Exception as e:
            pool.logger.debug("Error on connect(): %s", e)
            raise
        else:
            if first_connect_check:
                pool.dispatch.first_connect.for_modify(
                    pool.dispatch
                ).exec_once(self.connection, self)
            if pool.dispatch.connect:
>               pool.dispatch.connect(self.connection, self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.event.attr._ListenerCollection object at 0x7fd8d0de7668>
args = (<connection object at 0x7fd8d1936e88; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>, <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d09dd278>)
kw = {}, fn = <function do_sqlite_connect at 0x7fd8fe856d08>

    def __call__(self, *args, **kw):
        """Execute this event."""
    
        for fn in self.parent_listeners:
>           fn(*args, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8d1936e88; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d09dd278>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       psycopg2.ProgrammingError: syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^

../invenio-db/invenio_db/shared.py:116: ProgrammingError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.yield_fixture()
    def db(app):
        """Database fixture."""
>       if not database_exists(str(db_.engine.url)):

tests/conftest.py:136: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:484: in database_exists
    return bool(get_scalar_result(engine, text))
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:458: in get_scalar_result
    result_proxy = engine.execute(sql)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2143: in execute
    connection = self.contextual_connect(close_with_result=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2192: in contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2232: in _wrap_pool_connect
    e, dialect, self
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1528: in _handle_dbapi_exception_noconnection
    util.raise_from_cause(sqlalchemy_exception, exc_info)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: in _wrap_pool_connect
    return fn()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: in connect
    return _ConnectionFairy._checkout(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: in _checkout
    fairy = _ConnectionRecord.checkout(pool)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: in checkout
    rec = pool._do_get()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: in _do_get
    self._dec_overflow()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: in _do_get
    return self._create_connection()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: in _create_connection
    return _ConnectionRecord(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: in __init__
    self.__connect(first_connect_check=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: in __connect
    pool.dispatch.connect(self.connection, self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: in __call__
    fn(*args, **kw)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8d1936e88; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d09dd278>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       sqlalchemy.exc.ProgrammingError: (psycopg2.ProgrammingError) syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^
E        (Background on this error at: http://sqlalche.me/e/f405)

../invenio-db/invenio_db/shared.py:116: ProgrammingError
______________________ ERROR at setup of test_get_records ______________________

self = Engine(postgresql+psycopg2://invenio:***@postgresql:5432/postgres)
fn = <bound method Pool.connect of <sqlalchemy.pool.QueuePool object at 0x7fd8d11ed9b0>>
connection = None

    def _wrap_pool_connect(self, fn, connection):
        dialect = self.dialect
        try:
>           return fn()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d11ed9b0>

    def connect(self):
        """Return a DBAPI connection from the pool.
    
        The connection is instrumented such that when its
        ``close()`` method is called, the connection will be returned to
        the pool.
    
        """
        if not self._use_threadlocal:
>           return _ConnectionFairy._checkout(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionFairy'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d11ed9b0>, threadconns = None
fairy = None

    @classmethod
    def _checkout(cls, pool, threadconns=None, fairy=None):
        if not fairy:
>           fairy = _ConnectionRecord.checkout(pool)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionRecord'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d11ed9b0>

    @classmethod
    def checkout(cls, pool):
>       rec = pool._do_get()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d11ed9b0>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
                return self._create_connection()
            except:
                with util.safe_reraise():
>                   self._dec_overflow()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.util.langhelpers.safe_reraise object at 0x7fd8d058d550>
type_ = None, value = None, traceback = None

    def __exit__(self, type_, value, traceback):
        # see #2703 for notes
        if type_ is None:
            exc_type, exc_value, exc_tb = self._exc_info
            self._exc_info = None  # remove potential circular references
            if not self.warn_only:
>               compat.reraise(exc_type, exc_value, exc_tb)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

tp = <class 'psycopg2.ProgrammingError'>
value = ProgrammingError('syntax error at or near "PRAGMA"\nLINE 1: PRAGMA foreign_keys=ON\n        ^\n',)
tb = <traceback object at 0x7fd8d1274688>, cause = None

    def reraise(tp, value, tb=None, cause=None):
        if cause is not None:
            assert cause is not value, "Same cause emitted"
            value.__cause__ = cause
        if value.__traceback__ is not tb:
            raise value.with_traceback(tb)
>       raise value

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d11ed9b0>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
>               return self._create_connection()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d11ed9b0>

    def _create_connection(self):
        """Called by subclasses to create a new ConnectionRecord."""
    
>       return _ConnectionRecord(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d058d3c8>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d11ed9b0>, connect = True

    def __init__(self, pool, connect=True):
        self.__pool = pool
        if connect:
>           self.__connect(first_connect_check=True)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d058d3c8>
first_connect_check = True

    def __connect(self, first_connect_check=False):
        pool = self.__pool
    
        # ensure any existing connection is removed, so that if
        # creator fails, this attribute stays None
        self.connection = None
        try:
            self.starttime = time.time()
            connection = pool._invoke_creator(self)
            pool.logger.debug("Created new connection %r", connection)
            self.connection = connection
        except Exception as e:
            pool.logger.debug("Error on connect(): %s", e)
            raise
        else:
            if first_connect_check:
                pool.dispatch.first_connect.for_modify(
                    pool.dispatch
                ).exec_once(self.connection, self)
            if pool.dispatch.connect:
>               pool.dispatch.connect(self.connection, self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.event.attr._ListenerCollection object at 0x7fd8d082d358>
args = (<connection object at 0x7fd8d14099c8; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>, <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d058d3c8>)
kw = {}, fn = <function do_sqlite_connect at 0x7fd8fe856d08>

    def __call__(self, *args, **kw):
        """Execute this event."""
    
        for fn in self.parent_listeners:
>           fn(*args, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8d14099c8; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d058d3c8>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       psycopg2.ProgrammingError: syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^

../invenio-db/invenio_db/shared.py:116: ProgrammingError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.yield_fixture()
    def db(app):
        """Database fixture."""
>       if not database_exists(str(db_.engine.url)):

tests/conftest.py:136: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:484: in database_exists
    return bool(get_scalar_result(engine, text))
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:458: in get_scalar_result
    result_proxy = engine.execute(sql)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2143: in execute
    connection = self.contextual_connect(close_with_result=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2192: in contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2232: in _wrap_pool_connect
    e, dialect, self
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1528: in _handle_dbapi_exception_noconnection
    util.raise_from_cause(sqlalchemy_exception, exc_info)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: in _wrap_pool_connect
    return fn()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: in connect
    return _ConnectionFairy._checkout(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: in _checkout
    fairy = _ConnectionRecord.checkout(pool)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: in checkout
    rec = pool._do_get()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: in _do_get
    self._dec_overflow()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: in _do_get
    return self._create_connection()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: in _create_connection
    return _ConnectionRecord(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: in __init__
    self.__connect(first_connect_check=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: in __connect
    pool.dispatch.connect(self.connection, self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: in __call__
    fn(*args, **kw)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8d14099c8; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d058d3c8>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       sqlalchemy.exc.ProgrammingError: (psycopg2.ProgrammingError) syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^
E        (Background on this error at: http://sqlalche.me/e/f405)

../invenio-db/invenio_db/shared.py:116: ProgrammingError
___________________ ERROR at setup of test_OAIServerUpdater ____________________

self = Engine(postgresql+psycopg2://invenio:***@postgresql:5432/postgres)
fn = <bound method Pool.connect of <sqlalchemy.pool.QueuePool object at 0x7fd8d0bed710>>
connection = None

    def _wrap_pool_connect(self, fn, connection):
        dialect = self.dialect
        try:
>           return fn()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d0bed710>

    def connect(self):
        """Return a DBAPI connection from the pool.
    
        The connection is instrumented such that when its
        ``close()`` method is called, the connection will be returned to
        the pool.
    
        """
        if not self._use_threadlocal:
>           return _ConnectionFairy._checkout(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionFairy'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d0bed710>, threadconns = None
fairy = None

    @classmethod
    def _checkout(cls, pool, threadconns=None, fairy=None):
        if not fairy:
>           fairy = _ConnectionRecord.checkout(pool)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionRecord'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d0bed710>

    @classmethod
    def checkout(cls, pool):
>       rec = pool._do_get()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d0bed710>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
                return self._create_connection()
            except:
                with util.safe_reraise():
>                   self._dec_overflow()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.util.langhelpers.safe_reraise object at 0x7fd8d0bed358>
type_ = None, value = None, traceback = None

    def __exit__(self, type_, value, traceback):
        # see #2703 for notes
        if type_ is None:
            exc_type, exc_value, exc_tb = self._exc_info
            self._exc_info = None  # remove potential circular references
            if not self.warn_only:
>               compat.reraise(exc_type, exc_value, exc_tb)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

tp = <class 'psycopg2.ProgrammingError'>
value = ProgrammingError('syntax error at or near "PRAGMA"\nLINE 1: PRAGMA foreign_keys=ON\n        ^\n',)
tb = <traceback object at 0x7fd8d09bedc8>, cause = None

    def reraise(tp, value, tb=None, cause=None):
        if cause is not None:
            assert cause is not value, "Same cause emitted"
            value.__cause__ = cause
        if value.__traceback__ is not tb:
            raise value.with_traceback(tb)
>       raise value

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d0bed710>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
>               return self._create_connection()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d0bed710>

    def _create_connection(self):
        """Called by subclasses to create a new ConnectionRecord."""
    
>       return _ConnectionRecord(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0bed860>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d0bed710>, connect = True

    def __init__(self, pool, connect=True):
        self.__pool = pool
        if connect:
>           self.__connect(first_connect_check=True)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0bed860>
first_connect_check = True

    def __connect(self, first_connect_check=False):
        pool = self.__pool
    
        # ensure any existing connection is removed, so that if
        # creator fails, this attribute stays None
        self.connection = None
        try:
            self.starttime = time.time()
            connection = pool._invoke_creator(self)
            pool.logger.debug("Created new connection %r", connection)
            self.connection = connection
        except Exception as e:
            pool.logger.debug("Error on connect(): %s", e)
            raise
        else:
            if first_connect_check:
                pool.dispatch.first_connect.for_modify(
                    pool.dispatch
                ).exec_once(self.connection, self)
            if pool.dispatch.connect:
>               pool.dispatch.connect(self.connection, self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.event.attr._ListenerCollection object at 0x7fd8d0d14c88>
args = (<connection object at 0x7fd8d14093d8; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>, <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0bed860>)
kw = {}, fn = <function do_sqlite_connect at 0x7fd8fe856d08>

    def __call__(self, *args, **kw):
        """Execute this event."""
    
        for fn in self.parent_listeners:
>           fn(*args, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8d14093d8; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0bed860>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       psycopg2.ProgrammingError: syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^

../invenio-db/invenio_db/shared.py:116: ProgrammingError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.yield_fixture()
    def db(app):
        """Database fixture."""
>       if not database_exists(str(db_.engine.url)):

tests/conftest.py:136: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:484: in database_exists
    return bool(get_scalar_result(engine, text))
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:458: in get_scalar_result
    result_proxy = engine.execute(sql)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2143: in execute
    connection = self.contextual_connect(close_with_result=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2192: in contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2232: in _wrap_pool_connect
    e, dialect, self
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1528: in _handle_dbapi_exception_noconnection
    util.raise_from_cause(sqlalchemy_exception, exc_info)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: in _wrap_pool_connect
    return fn()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: in connect
    return _ConnectionFairy._checkout(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: in _checkout
    fairy = _ConnectionRecord.checkout(pool)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: in checkout
    rec = pool._do_get()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: in _do_get
    self._dec_overflow()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: in _do_get
    return self._create_connection()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: in _create_connection
    return _ConnectionRecord(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: in __init__
    self.__connect(first_connect_check=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: in __connect
    pool.dispatch.connect(self.connection, self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: in __call__
    fn(*args, **kw)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8d14093d8; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0bed860>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       sqlalchemy.exc.ProgrammingError: (psycopg2.ProgrammingError) syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^
E        (Background on this error at: http://sqlalche.me/e/f405)

../invenio-db/invenio_db/shared.py:116: ProgrammingError
_________________ ERROR at setup of test_after_insert_oai_set __________________

self = Engine(postgresql+psycopg2://invenio:***@postgresql:5432/postgres)
fn = <bound method Pool.connect of <sqlalchemy.pool.QueuePool object at 0x7fd8d0977be0>>
connection = None

    def _wrap_pool_connect(self, fn, connection):
        dialect = self.dialect
        try:
>           return fn()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d0977be0>

    def connect(self):
        """Return a DBAPI connection from the pool.
    
        The connection is instrumented such that when its
        ``close()`` method is called, the connection will be returned to
        the pool.
    
        """
        if not self._use_threadlocal:
>           return _ConnectionFairy._checkout(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionFairy'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d0977be0>, threadconns = None
fairy = None

    @classmethod
    def _checkout(cls, pool, threadconns=None, fairy=None):
        if not fairy:
>           fairy = _ConnectionRecord.checkout(pool)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionRecord'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d0977be0>

    @classmethod
    def checkout(cls, pool):
>       rec = pool._do_get()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d0977be0>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
                return self._create_connection()
            except:
                with util.safe_reraise():
>                   self._dec_overflow()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.util.langhelpers.safe_reraise object at 0x7fd8d15dcb70>
type_ = None, value = None, traceback = None

    def __exit__(self, type_, value, traceback):
        # see #2703 for notes
        if type_ is None:
            exc_type, exc_value, exc_tb = self._exc_info
            self._exc_info = None  # remove potential circular references
            if not self.warn_only:
>               compat.reraise(exc_type, exc_value, exc_tb)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

tp = <class 'psycopg2.ProgrammingError'>
value = ProgrammingError('syntax error at or near "PRAGMA"\nLINE 1: PRAGMA foreign_keys=ON\n        ^\n',)
tb = <traceback object at 0x7fd8d11c5348>, cause = None

    def reraise(tp, value, tb=None, cause=None):
        if cause is not None:
            assert cause is not value, "Same cause emitted"
            value.__cause__ = cause
        if value.__traceback__ is not tb:
            raise value.with_traceback(tb)
>       raise value

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d0977be0>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
>               return self._create_connection()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d0977be0>

    def _create_connection(self):
        """Called by subclasses to create a new ConnectionRecord."""
    
>       return _ConnectionRecord(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d09772e8>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d0977be0>, connect = True

    def __init__(self, pool, connect=True):
        self.__pool = pool
        if connect:
>           self.__connect(first_connect_check=True)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d09772e8>
first_connect_check = True

    def __connect(self, first_connect_check=False):
        pool = self.__pool
    
        # ensure any existing connection is removed, so that if
        # creator fails, this attribute stays None
        self.connection = None
        try:
            self.starttime = time.time()
            connection = pool._invoke_creator(self)
            pool.logger.debug("Created new connection %r", connection)
            self.connection = connection
        except Exception as e:
            pool.logger.debug("Error on connect(): %s", e)
            raise
        else:
            if first_connect_check:
                pool.dispatch.first_connect.for_modify(
                    pool.dispatch
                ).exec_once(self.connection, self)
            if pool.dispatch.connect:
>               pool.dispatch.connect(self.connection, self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.event.attr._ListenerCollection object at 0x7fd8d0c24208>
args = (<connection object at 0x7fd8d1409af8; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>, <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d09772e8>)
kw = {}, fn = <function do_sqlite_connect at 0x7fd8fe856d08>

    def __call__(self, *args, **kw):
        """Execute this event."""
    
        for fn in self.parent_listeners:
>           fn(*args, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8d1409af8; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d09772e8>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       psycopg2.ProgrammingError: syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^

../invenio-db/invenio_db/shared.py:116: ProgrammingError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.yield_fixture()
    def db(app):
        """Database fixture."""
>       if not database_exists(str(db_.engine.url)):

tests/conftest.py:136: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:484: in database_exists
    return bool(get_scalar_result(engine, text))
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:458: in get_scalar_result
    result_proxy = engine.execute(sql)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2143: in execute
    connection = self.contextual_connect(close_with_result=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2192: in contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2232: in _wrap_pool_connect
    e, dialect, self
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1528: in _handle_dbapi_exception_noconnection
    util.raise_from_cause(sqlalchemy_exception, exc_info)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: in _wrap_pool_connect
    return fn()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: in connect
    return _ConnectionFairy._checkout(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: in _checkout
    fairy = _ConnectionRecord.checkout(pool)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: in checkout
    rec = pool._do_get()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: in _do_get
    self._dec_overflow()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: in _do_get
    return self._create_connection()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: in _create_connection
    return _ConnectionRecord(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: in __init__
    self.__connect(first_connect_check=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: in __connect
    pool.dispatch.connect(self.connection, self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: in __call__
    fn(*args, **kw)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8d1409af8; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d09772e8>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       sqlalchemy.exc.ProgrammingError: (psycopg2.ProgrammingError) syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^
E        (Background on this error at: http://sqlalche.me/e/f405)

../invenio-db/invenio_db/shared.py:116: ProgrammingError
_________________ ERROR at setup of test_after_update_oai_set __________________

self = Engine(postgresql+psycopg2://invenio:***@postgresql:5432/postgres)
fn = <bound method Pool.connect of <sqlalchemy.pool.QueuePool object at 0x7fd8d0b734e0>>
connection = None

    def _wrap_pool_connect(self, fn, connection):
        dialect = self.dialect
        try:
>           return fn()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d0b734e0>

    def connect(self):
        """Return a DBAPI connection from the pool.
    
        The connection is instrumented such that when its
        ``close()`` method is called, the connection will be returned to
        the pool.
    
        """
        if not self._use_threadlocal:
>           return _ConnectionFairy._checkout(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionFairy'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d0b734e0>, threadconns = None
fairy = None

    @classmethod
    def _checkout(cls, pool, threadconns=None, fairy=None):
        if not fairy:
>           fairy = _ConnectionRecord.checkout(pool)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionRecord'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d0b734e0>

    @classmethod
    def checkout(cls, pool):
>       rec = pool._do_get()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d0b734e0>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
                return self._create_connection()
            except:
                with util.safe_reraise():
>                   self._dec_overflow()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.util.langhelpers.safe_reraise object at 0x7fd8d0b73128>
type_ = None, value = None, traceback = None

    def __exit__(self, type_, value, traceback):
        # see #2703 for notes
        if type_ is None:
            exc_type, exc_value, exc_tb = self._exc_info
            self._exc_info = None  # remove potential circular references
            if not self.warn_only:
>               compat.reraise(exc_type, exc_value, exc_tb)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

tp = <class 'psycopg2.ProgrammingError'>
value = ProgrammingError('syntax error at or near "PRAGMA"\nLINE 1: PRAGMA foreign_keys=ON\n        ^\n',)
tb = <traceback object at 0x7fd8d0319188>, cause = None

    def reraise(tp, value, tb=None, cause=None):
        if cause is not None:
            assert cause is not value, "Same cause emitted"
            value.__cause__ = cause
        if value.__traceback__ is not tb:
            raise value.with_traceback(tb)
>       raise value

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d0b734e0>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
>               return self._create_connection()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d0b734e0>

    def _create_connection(self):
        """Called by subclasses to create a new ConnectionRecord."""
    
>       return _ConnectionRecord(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0b73358>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d0b734e0>, connect = True

    def __init__(self, pool, connect=True):
        self.__pool = pool
        if connect:
>           self.__connect(first_connect_check=True)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0b73358>
first_connect_check = True

    def __connect(self, first_connect_check=False):
        pool = self.__pool
    
        # ensure any existing connection is removed, so that if
        # creator fails, this attribute stays None
        self.connection = None
        try:
            self.starttime = time.time()
            connection = pool._invoke_creator(self)
            pool.logger.debug("Created new connection %r", connection)
            self.connection = connection
        except Exception as e:
            pool.logger.debug("Error on connect(): %s", e)
            raise
        else:
            if first_connect_check:
                pool.dispatch.first_connect.for_modify(
                    pool.dispatch
                ).exec_once(self.connection, self)
            if pool.dispatch.connect:
>               pool.dispatch.connect(self.connection, self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.event.attr._ListenerCollection object at 0x7fd8d04642e8>
args = (<connection object at 0x7fd8d14092a8; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>, <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0b73358>)
kw = {}, fn = <function do_sqlite_connect at 0x7fd8fe856d08>

    def __call__(self, *args, **kw):
        """Execute this event."""
    
        for fn in self.parent_listeners:
>           fn(*args, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8d14092a8; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0b73358>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       psycopg2.ProgrammingError: syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^

../invenio-db/invenio_db/shared.py:116: ProgrammingError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.yield_fixture()
    def db(app):
        """Database fixture."""
>       if not database_exists(str(db_.engine.url)):

tests/conftest.py:136: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:484: in database_exists
    return bool(get_scalar_result(engine, text))
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:458: in get_scalar_result
    result_proxy = engine.execute(sql)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2143: in execute
    connection = self.contextual_connect(close_with_result=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2192: in contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2232: in _wrap_pool_connect
    e, dialect, self
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1528: in _handle_dbapi_exception_noconnection
    util.raise_from_cause(sqlalchemy_exception, exc_info)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: in _wrap_pool_connect
    return fn()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: in connect
    return _ConnectionFairy._checkout(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: in _checkout
    fairy = _ConnectionRecord.checkout(pool)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: in checkout
    rec = pool._do_get()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: in _do_get
    self._dec_overflow()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: in _do_get
    return self._create_connection()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: in _create_connection
    return _ConnectionRecord(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: in __init__
    self.__connect(first_connect_check=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: in __connect
    pool.dispatch.connect(self.connection, self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: in __call__
    fn(*args, **kw)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8d14092a8; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0b73358>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       sqlalchemy.exc.ProgrammingError: (psycopg2.ProgrammingError) syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^
E        (Background on this error at: http://sqlalche.me/e/f405)

../invenio-db/invenio_db/shared.py:116: ProgrammingError
_________________ ERROR at setup of test_after_delete_oai_set __________________

self = Engine(postgresql+psycopg2://invenio:***@postgresql:5432/postgres)
fn = <bound method Pool.connect of <sqlalchemy.pool.QueuePool object at 0x7fd8d0a7d0b8>>
connection = None

    def _wrap_pool_connect(self, fn, connection):
        dialect = self.dialect
        try:
>           return fn()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d0a7d0b8>

    def connect(self):
        """Return a DBAPI connection from the pool.
    
        The connection is instrumented such that when its
        ``close()`` method is called, the connection will be returned to
        the pool.
    
        """
        if not self._use_threadlocal:
>           return _ConnectionFairy._checkout(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionFairy'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d0a7d0b8>, threadconns = None
fairy = None

    @classmethod
    def _checkout(cls, pool, threadconns=None, fairy=None):
        if not fairy:
>           fairy = _ConnectionRecord.checkout(pool)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionRecord'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d0a7d0b8>

    @classmethod
    def checkout(cls, pool):
>       rec = pool._do_get()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d0a7d0b8>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
                return self._create_connection()
            except:
                with util.safe_reraise():
>                   self._dec_overflow()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.util.langhelpers.safe_reraise object at 0x7fd8d12f2860>
type_ = None, value = None, traceback = None

    def __exit__(self, type_, value, traceback):
        # see #2703 for notes
        if type_ is None:
            exc_type, exc_value, exc_tb = self._exc_info
            self._exc_info = None  # remove potential circular references
            if not self.warn_only:
>               compat.reraise(exc_type, exc_value, exc_tb)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

tp = <class 'psycopg2.ProgrammingError'>
value = ProgrammingError('syntax error at or near "PRAGMA"\nLINE 1: PRAGMA foreign_keys=ON\n        ^\n',)
tb = <traceback object at 0x7fd8d0b8a608>, cause = None

    def reraise(tp, value, tb=None, cause=None):
        if cause is not None:
            assert cause is not value, "Same cause emitted"
            value.__cause__ = cause
        if value.__traceback__ is not tb:
            raise value.with_traceback(tb)
>       raise value

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d0a7d0b8>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
>               return self._create_connection()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d0a7d0b8>

    def _create_connection(self):
        """Called by subclasses to create a new ConnectionRecord."""
    
>       return _ConnectionRecord(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0a7d710>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d0a7d0b8>, connect = True

    def __init__(self, pool, connect=True):
        self.__pool = pool
        if connect:
>           self.__connect(first_connect_check=True)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0a7d710>
first_connect_check = True

    def __connect(self, first_connect_check=False):
        pool = self.__pool
    
        # ensure any existing connection is removed, so that if
        # creator fails, this attribute stays None
        self.connection = None
        try:
            self.starttime = time.time()
            connection = pool._invoke_creator(self)
            pool.logger.debug("Created new connection %r", connection)
            self.connection = connection
        except Exception as e:
            pool.logger.debug("Error on connect(): %s", e)
            raise
        else:
            if first_connect_check:
                pool.dispatch.first_connect.for_modify(
                    pool.dispatch
                ).exec_once(self.connection, self)
            if pool.dispatch.connect:
>               pool.dispatch.connect(self.connection, self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.event.attr._ListenerCollection object at 0x7fd8d0b40898>
args = (<connection object at 0x7fd8d1409638; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>, <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0a7d710>)
kw = {}, fn = <function do_sqlite_connect at 0x7fd8fe856d08>

    def __call__(self, *args, **kw):
        """Execute this event."""
    
        for fn in self.parent_listeners:
>           fn(*args, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8d1409638; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0a7d710>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       psycopg2.ProgrammingError: syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^

../invenio-db/invenio_db/shared.py:116: ProgrammingError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.yield_fixture()
    def db(app):
        """Database fixture."""
>       if not database_exists(str(db_.engine.url)):

tests/conftest.py:136: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:484: in database_exists
    return bool(get_scalar_result(engine, text))
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:458: in get_scalar_result
    result_proxy = engine.execute(sql)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2143: in execute
    connection = self.contextual_connect(close_with_result=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2192: in contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2232: in _wrap_pool_connect
    e, dialect, self
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1528: in _handle_dbapi_exception_noconnection
    util.raise_from_cause(sqlalchemy_exception, exc_info)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: in _wrap_pool_connect
    return fn()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: in connect
    return _ConnectionFairy._checkout(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: in _checkout
    fairy = _ConnectionRecord.checkout(pool)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: in checkout
    rec = pool._do_get()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: in _do_get
    self._dec_overflow()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: in _do_get
    return self._create_connection()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: in _create_connection
    return _ConnectionRecord(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: in __init__
    self.__connect(first_connect_check=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: in __connect
    pool.dispatch.connect(self.connection, self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: in __call__
    fn(*args, **kw)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8d1409638; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0a7d710>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       sqlalchemy.exc.ProgrammingError: (psycopg2.ProgrammingError) syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^
E        (Background on this error at: http://sqlalche.me/e/f405)

../invenio-db/invenio_db/shared.py:116: ProgrammingError
_______________________ ERROR at setup of test_getrecord _______________________

self = Engine(postgresql+psycopg2://invenio:***@postgresql:5432/postgres)
fn = <bound method Pool.connect of <sqlalchemy.pool.QueuePool object at 0x7fd8d09cb780>>
connection = None

    def _wrap_pool_connect(self, fn, connection):
        dialect = self.dialect
        try:
>           return fn()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d09cb780>

    def connect(self):
        """Return a DBAPI connection from the pool.
    
        The connection is instrumented such that when its
        ``close()`` method is called, the connection will be returned to
        the pool.
    
        """
        if not self._use_threadlocal:
>           return _ConnectionFairy._checkout(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionFairy'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d09cb780>, threadconns = None
fairy = None

    @classmethod
    def _checkout(cls, pool, threadconns=None, fairy=None):
        if not fairy:
>           fairy = _ConnectionRecord.checkout(pool)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionRecord'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d09cb780>

    @classmethod
    def checkout(cls, pool):
>       rec = pool._do_get()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d09cb780>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
                return self._create_connection()
            except:
                with util.safe_reraise():
>                   self._dec_overflow()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.util.langhelpers.safe_reraise object at 0x7fd8d09cb5c0>
type_ = None, value = None, traceback = None

    def __exit__(self, type_, value, traceback):
        # see #2703 for notes
        if type_ is None:
            exc_type, exc_value, exc_tb = self._exc_info
            self._exc_info = None  # remove potential circular references
            if not self.warn_only:
>               compat.reraise(exc_type, exc_value, exc_tb)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

tp = <class 'psycopg2.ProgrammingError'>
value = ProgrammingError('syntax error at or near "PRAGMA"\nLINE 1: PRAGMA foreign_keys=ON\n        ^\n',)
tb = <traceback object at 0x7fd8d0a55b08>, cause = None

    def reraise(tp, value, tb=None, cause=None):
        if cause is not None:
            assert cause is not value, "Same cause emitted"
            value.__cause__ = cause
        if value.__traceback__ is not tb:
            raise value.with_traceback(tb)
>       raise value

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d09cb780>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
>               return self._create_connection()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d09cb780>

    def _create_connection(self):
        """Called by subclasses to create a new ConnectionRecord."""
    
>       return _ConnectionRecord(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d09cb518>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d09cb780>, connect = True

    def __init__(self, pool, connect=True):
        self.__pool = pool
        if connect:
>           self.__connect(first_connect_check=True)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d09cb518>
first_connect_check = True

    def __connect(self, first_connect_check=False):
        pool = self.__pool
    
        # ensure any existing connection is removed, so that if
        # creator fails, this attribute stays None
        self.connection = None
        try:
            self.starttime = time.time()
            connection = pool._invoke_creator(self)
            pool.logger.debug("Created new connection %r", connection)
            self.connection = connection
        except Exception as e:
            pool.logger.debug("Error on connect(): %s", e)
            raise
        else:
            if first_connect_check:
                pool.dispatch.first_connect.for_modify(
                    pool.dispatch
                ).exec_once(self.connection, self)
            if pool.dispatch.connect:
>               pool.dispatch.connect(self.connection, self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.event.attr._ListenerCollection object at 0x7fd8d0b42c88>
args = (<connection object at 0x7fd8d1409898; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>, <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d09cb518>)
kw = {}, fn = <function do_sqlite_connect at 0x7fd8fe856d08>

    def __call__(self, *args, **kw):
        """Execute this event."""
    
        for fn in self.parent_listeners:
>           fn(*args, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8d1409898; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d09cb518>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       psycopg2.ProgrammingError: syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^

../invenio-db/invenio_db/shared.py:116: ProgrammingError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.yield_fixture()
    def db(app):
        """Database fixture."""
>       if not database_exists(str(db_.engine.url)):

tests/conftest.py:136: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:484: in database_exists
    return bool(get_scalar_result(engine, text))
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:458: in get_scalar_result
    result_proxy = engine.execute(sql)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2143: in execute
    connection = self.contextual_connect(close_with_result=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2192: in contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2232: in _wrap_pool_connect
    e, dialect, self
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1528: in _handle_dbapi_exception_noconnection
    util.raise_from_cause(sqlalchemy_exception, exc_info)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: in _wrap_pool_connect
    return fn()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: in connect
    return _ConnectionFairy._checkout(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: in _checkout
    fairy = _ConnectionRecord.checkout(pool)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: in checkout
    rec = pool._do_get()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: in _do_get
    self._dec_overflow()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: in _do_get
    return self._create_connection()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: in _create_connection
    return _ConnectionRecord(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: in __init__
    self.__connect(first_connect_check=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: in __connect
    pool.dispatch.connect(self.connection, self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: in __call__
    fn(*args, **kw)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8d1409898; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d09cb518>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       sqlalchemy.exc.ProgrammingError: (psycopg2.ProgrammingError) syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^
E        (Background on this error at: http://sqlalche.me/e/f405)

../invenio-db/invenio_db/shared.py:116: ProgrammingError
_________________ ERROR at setup of test_getrecord_future_item _________________

self = Engine(postgresql+psycopg2://invenio:***@postgresql:5432/postgres)
fn = <bound method Pool.connect of <sqlalchemy.pool.QueuePool object at 0x7fd8d07f36a0>>
connection = None

    def _wrap_pool_connect(self, fn, connection):
        dialect = self.dialect
        try:
>           return fn()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d07f36a0>

    def connect(self):
        """Return a DBAPI connection from the pool.
    
        The connection is instrumented such that when its
        ``close()`` method is called, the connection will be returned to
        the pool.
    
        """
        if not self._use_threadlocal:
>           return _ConnectionFairy._checkout(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionFairy'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d07f36a0>, threadconns = None
fairy = None

    @classmethod
    def _checkout(cls, pool, threadconns=None, fairy=None):
        if not fairy:
>           fairy = _ConnectionRecord.checkout(pool)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionRecord'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d07f36a0>

    @classmethod
    def checkout(cls, pool):
>       rec = pool._do_get()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d07f36a0>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
                return self._create_connection()
            except:
                with util.safe_reraise():
>                   self._dec_overflow()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.util.langhelpers.safe_reraise object at 0x7fd8d08b9400>
type_ = None, value = None, traceback = None

    def __exit__(self, type_, value, traceback):
        # see #2703 for notes
        if type_ is None:
            exc_type, exc_value, exc_tb = self._exc_info
            self._exc_info = None  # remove potential circular references
            if not self.warn_only:
>               compat.reraise(exc_type, exc_value, exc_tb)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

tp = <class 'psycopg2.ProgrammingError'>
value = ProgrammingError('syntax error at or near "PRAGMA"\nLINE 1: PRAGMA foreign_keys=ON\n        ^\n',)
tb = <traceback object at 0x7fd8d0a89b48>, cause = None

    def reraise(tp, value, tb=None, cause=None):
        if cause is not None:
            assert cause is not value, "Same cause emitted"
            value.__cause__ = cause
        if value.__traceback__ is not tb:
            raise value.with_traceback(tb)
>       raise value

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d07f36a0>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
>               return self._create_connection()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d07f36a0>

    def _create_connection(self):
        """Called by subclasses to create a new ConnectionRecord."""
    
>       return _ConnectionRecord(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d057feb8>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d07f36a0>, connect = True

    def __init__(self, pool, connect=True):
        self.__pool = pool
        if connect:
>           self.__connect(first_connect_check=True)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d057feb8>
first_connect_check = True

    def __connect(self, first_connect_check=False):
        pool = self.__pool
    
        # ensure any existing connection is removed, so that if
        # creator fails, this attribute stays None
        self.connection = None
        try:
            self.starttime = time.time()
            connection = pool._invoke_creator(self)
            pool.logger.debug("Created new connection %r", connection)
            self.connection = connection
        except Exception as e:
            pool.logger.debug("Error on connect(): %s", e)
            raise
        else:
            if first_connect_check:
                pool.dispatch.first_connect.for_modify(
                    pool.dispatch
                ).exec_once(self.connection, self)
            if pool.dispatch.connect:
>               pool.dispatch.connect(self.connection, self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.event.attr._ListenerCollection object at 0x7fd8d0a8d3c8>
args = (<connection object at 0x7fd8d0a81048; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>, <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d057feb8>)
kw = {}, fn = <function do_sqlite_connect at 0x7fd8fe856d08>

    def __call__(self, *args, **kw):
        """Execute this event."""
    
        for fn in self.parent_listeners:
>           fn(*args, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8d0a81048; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d057feb8>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       psycopg2.ProgrammingError: syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^

../invenio-db/invenio_db/shared.py:116: ProgrammingError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.yield_fixture()
    def db(app):
        """Database fixture."""
>       if not database_exists(str(db_.engine.url)):

tests/conftest.py:136: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:484: in database_exists
    return bool(get_scalar_result(engine, text))
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:458: in get_scalar_result
    result_proxy = engine.execute(sql)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2143: in execute
    connection = self.contextual_connect(close_with_result=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2192: in contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2232: in _wrap_pool_connect
    e, dialect, self
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1528: in _handle_dbapi_exception_noconnection
    util.raise_from_cause(sqlalchemy_exception, exc_info)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: in _wrap_pool_connect
    return fn()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: in connect
    return _ConnectionFairy._checkout(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: in _checkout
    fairy = _ConnectionRecord.checkout(pool)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: in checkout
    rec = pool._do_get()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: in _do_get
    self._dec_overflow()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: in _do_get
    return self._create_connection()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: in _create_connection
    return _ConnectionRecord(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: in __init__
    self.__connect(first_connect_check=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: in __connect
    pool.dispatch.connect(self.connection, self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: in __call__
    fn(*args, **kw)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8d0a81048; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d057feb8>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       sqlalchemy.exc.ProgrammingError: (psycopg2.ProgrammingError) syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^
E        (Background on this error at: http://sqlalche.me/e/f405)

../invenio-db/invenio_db/shared.py:116: ProgrammingError
____________________ ERROR at setup of test_listidentifiers ____________________

self = Engine(postgresql+psycopg2://invenio:***@postgresql:5432/postgres)
fn = <bound method Pool.connect of <sqlalchemy.pool.QueuePool object at 0x7fd8d0a5a940>>
connection = None

    def _wrap_pool_connect(self, fn, connection):
        dialect = self.dialect
        try:
>           return fn()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d0a5a940>

    def connect(self):
        """Return a DBAPI connection from the pool.
    
        The connection is instrumented such that when its
        ``close()`` method is called, the connection will be returned to
        the pool.
    
        """
        if not self._use_threadlocal:
>           return _ConnectionFairy._checkout(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionFairy'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d0a5a940>, threadconns = None
fairy = None

    @classmethod
    def _checkout(cls, pool, threadconns=None, fairy=None):
        if not fairy:
>           fairy = _ConnectionRecord.checkout(pool)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionRecord'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d0a5a940>

    @classmethod
    def checkout(cls, pool):
>       rec = pool._do_get()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d0a5a940>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
                return self._create_connection()
            except:
                with util.safe_reraise():
>                   self._dec_overflow()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.util.langhelpers.safe_reraise object at 0x7fd8d0ac2b00>
type_ = None, value = None, traceback = None

    def __exit__(self, type_, value, traceback):
        # see #2703 for notes
        if type_ is None:
            exc_type, exc_value, exc_tb = self._exc_info
            self._exc_info = None  # remove potential circular references
            if not self.warn_only:
>               compat.reraise(exc_type, exc_value, exc_tb)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

tp = <class 'psycopg2.ProgrammingError'>
value = ProgrammingError('syntax error at or near "PRAGMA"\nLINE 1: PRAGMA foreign_keys=ON\n        ^\n',)
tb = <traceback object at 0x7fd8d0334a48>, cause = None

    def reraise(tp, value, tb=None, cause=None):
        if cause is not None:
            assert cause is not value, "Same cause emitted"
            value.__cause__ = cause
        if value.__traceback__ is not tb:
            raise value.with_traceback(tb)
>       raise value

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d0a5a940>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
>               return self._create_connection()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d0a5a940>

    def _create_connection(self):
        """Called by subclasses to create a new ConnectionRecord."""
    
>       return _ConnectionRecord(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0a5a160>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d0a5a940>, connect = True

    def __init__(self, pool, connect=True):
        self.__pool = pool
        if connect:
>           self.__connect(first_connect_check=True)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0a5a160>
first_connect_check = True

    def __connect(self, first_connect_check=False):
        pool = self.__pool
    
        # ensure any existing connection is removed, so that if
        # creator fails, this attribute stays None
        self.connection = None
        try:
            self.starttime = time.time()
            connection = pool._invoke_creator(self)
            pool.logger.debug("Created new connection %r", connection)
            self.connection = connection
        except Exception as e:
            pool.logger.debug("Error on connect(): %s", e)
            raise
        else:
            if first_connect_check:
                pool.dispatch.first_connect.for_modify(
                    pool.dispatch
                ).exec_once(self.connection, self)
            if pool.dispatch.connect:
>               pool.dispatch.connect(self.connection, self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.event.attr._ListenerCollection object at 0x7fd8d035e828>
args = (<connection object at 0x7fd8d0a81508; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>, <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0a5a160>)
kw = {}, fn = <function do_sqlite_connect at 0x7fd8fe856d08>

    def __call__(self, *args, **kw):
        """Execute this event."""
    
        for fn in self.parent_listeners:
>           fn(*args, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8d0a81508; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0a5a160>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       psycopg2.ProgrammingError: syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^

../invenio-db/invenio_db/shared.py:116: ProgrammingError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.yield_fixture()
    def db(app):
        """Database fixture."""
>       if not database_exists(str(db_.engine.url)):

tests/conftest.py:136: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:484: in database_exists
    return bool(get_scalar_result(engine, text))
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:458: in get_scalar_result
    result_proxy = engine.execute(sql)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2143: in execute
    connection = self.contextual_connect(close_with_result=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2192: in contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2232: in _wrap_pool_connect
    e, dialect, self
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1528: in _handle_dbapi_exception_noconnection
    util.raise_from_cause(sqlalchemy_exception, exc_info)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: in _wrap_pool_connect
    return fn()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: in connect
    return _ConnectionFairy._checkout(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: in _checkout
    fairy = _ConnectionRecord.checkout(pool)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: in checkout
    rec = pool._do_get()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: in _do_get
    self._dec_overflow()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: in _do_get
    return self._create_connection()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: in _create_connection
    return _ConnectionRecord(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: in __init__
    self.__connect(first_connect_check=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: in __connect
    pool.dispatch.connect(self.connection, self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: in __call__
    fn(*args, **kw)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8d0a81508; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0a5a160>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       sqlalchemy.exc.ProgrammingError: (psycopg2.ProgrammingError) syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^
E        (Background on this error at: http://sqlalche.me/e/f405)

../invenio-db/invenio_db/shared.py:116: ProgrammingError
______________________ ERROR at setup of test_listrecords ______________________

self = Engine(postgresql+psycopg2://invenio:***@postgresql:5432/postgres)
fn = <bound method Pool.connect of <sqlalchemy.pool.QueuePool object at 0x7fd8d056f208>>
connection = None

    def _wrap_pool_connect(self, fn, connection):
        dialect = self.dialect
        try:
>           return fn()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d056f208>

    def connect(self):
        """Return a DBAPI connection from the pool.
    
        The connection is instrumented such that when its
        ``close()`` method is called, the connection will be returned to
        the pool.
    
        """
        if not self._use_threadlocal:
>           return _ConnectionFairy._checkout(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionFairy'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d056f208>, threadconns = None
fairy = None

    @classmethod
    def _checkout(cls, pool, threadconns=None, fairy=None):
        if not fairy:
>           fairy = _ConnectionRecord.checkout(pool)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionRecord'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d056f208>

    @classmethod
    def checkout(cls, pool):
>       rec = pool._do_get()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d056f208>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
                return self._create_connection()
            except:
                with util.safe_reraise():
>                   self._dec_overflow()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.util.langhelpers.safe_reraise object at 0x7fd8d0269ac8>
type_ = None, value = None, traceback = None

    def __exit__(self, type_, value, traceback):
        # see #2703 for notes
        if type_ is None:
            exc_type, exc_value, exc_tb = self._exc_info
            self._exc_info = None  # remove potential circular references
            if not self.warn_only:
>               compat.reraise(exc_type, exc_value, exc_tb)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

tp = <class 'psycopg2.ProgrammingError'>
value = ProgrammingError('syntax error at or near "PRAGMA"\nLINE 1: PRAGMA foreign_keys=ON\n        ^\n',)
tb = <traceback object at 0x7fd8d0ae2cc8>, cause = None

    def reraise(tp, value, tb=None, cause=None):
        if cause is not None:
            assert cause is not value, "Same cause emitted"
            value.__cause__ = cause
        if value.__traceback__ is not tb:
            raise value.with_traceback(tb)
>       raise value

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d056f208>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
>               return self._create_connection()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d056f208>

    def _create_connection(self):
        """Called by subclasses to create a new ConnectionRecord."""
    
>       return _ConnectionRecord(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0977208>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d056f208>, connect = True

    def __init__(self, pool, connect=True):
        self.__pool = pool
        if connect:
>           self.__connect(first_connect_check=True)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0977208>
first_connect_check = True

    def __connect(self, first_connect_check=False):
        pool = self.__pool
    
        # ensure any existing connection is removed, so that if
        # creator fails, this attribute stays None
        self.connection = None
        try:
            self.starttime = time.time()
            connection = pool._invoke_creator(self)
            pool.logger.debug("Created new connection %r", connection)
            self.connection = connection
        except Exception as e:
            pool.logger.debug("Error on connect(): %s", e)
            raise
        else:
            if first_connect_check:
                pool.dispatch.first_connect.for_modify(
                    pool.dispatch
                ).exec_once(self.connection, self)
            if pool.dispatch.connect:
>               pool.dispatch.connect(self.connection, self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.event.attr._ListenerCollection object at 0x7fd8d036ed68>
args = (<connection object at 0x7fd8d0a81638; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>, <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0977208>)
kw = {}, fn = <function do_sqlite_connect at 0x7fd8fe856d08>

    def __call__(self, *args, **kw):
        """Execute this event."""
    
        for fn in self.parent_listeners:
>           fn(*args, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8d0a81638; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0977208>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       psycopg2.ProgrammingError: syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^

../invenio-db/invenio_db/shared.py:116: ProgrammingError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.yield_fixture()
    def db(app):
        """Database fixture."""
>       if not database_exists(str(db_.engine.url)):

tests/conftest.py:136: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:484: in database_exists
    return bool(get_scalar_result(engine, text))
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:458: in get_scalar_result
    result_proxy = engine.execute(sql)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2143: in execute
    connection = self.contextual_connect(close_with_result=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2192: in contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2232: in _wrap_pool_connect
    e, dialect, self
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1528: in _handle_dbapi_exception_noconnection
    util.raise_from_cause(sqlalchemy_exception, exc_info)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: in _wrap_pool_connect
    return fn()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: in connect
    return _ConnectionFairy._checkout(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: in _checkout
    fairy = _ConnectionRecord.checkout(pool)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: in checkout
    rec = pool._do_get()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: in _do_get
    self._dec_overflow()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: in _do_get
    return self._create_connection()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: in _create_connection
    return _ConnectionRecord(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: in __init__
    self.__connect(first_connect_check=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: in __connect
    pool.dispatch.connect(self.connection, self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: in __call__
    fn(*args, **kw)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8d0a81638; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0977208>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       sqlalchemy.exc.ProgrammingError: (psycopg2.ProgrammingError) syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^
E        (Background on this error at: http://sqlalche.me/e/f405)

../invenio-db/invenio_db/shared.py:116: ProgrammingError
_______________________ ERROR at setup of test_identify ________________________

self = Engine(postgresql+psycopg2://invenio:***@postgresql:5432/postgres)
fn = <bound method Pool.connect of <sqlalchemy.pool.QueuePool object at 0x7fd8d0e204a8>>
connection = None

    def _wrap_pool_connect(self, fn, connection):
        dialect = self.dialect
        try:
>           return fn()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d0e204a8>

    def connect(self):
        """Return a DBAPI connection from the pool.
    
        The connection is instrumented such that when its
        ``close()`` method is called, the connection will be returned to
        the pool.
    
        """
        if not self._use_threadlocal:
>           return _ConnectionFairy._checkout(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionFairy'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d0e204a8>, threadconns = None
fairy = None

    @classmethod
    def _checkout(cls, pool, threadconns=None, fairy=None):
        if not fairy:
>           fairy = _ConnectionRecord.checkout(pool)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionRecord'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d0e204a8>

    @classmethod
    def checkout(cls, pool):
>       rec = pool._do_get()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d0e204a8>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
                return self._create_connection()
            except:
                with util.safe_reraise():
>                   self._dec_overflow()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.util.langhelpers.safe_reraise object at 0x7fd8d0b7c828>
type_ = None, value = None, traceback = None

    def __exit__(self, type_, value, traceback):
        # see #2703 for notes
        if type_ is None:
            exc_type, exc_value, exc_tb = self._exc_info
            self._exc_info = None  # remove potential circular references
            if not self.warn_only:
>               compat.reraise(exc_type, exc_value, exc_tb)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

tp = <class 'psycopg2.ProgrammingError'>
value = ProgrammingError('syntax error at or near "PRAGMA"\nLINE 1: PRAGMA foreign_keys=ON\n        ^\n',)
tb = <traceback object at 0x7fd8d02e4a88>, cause = None

    def reraise(tp, value, tb=None, cause=None):
        if cause is not None:
            assert cause is not value, "Same cause emitted"
            value.__cause__ = cause
        if value.__traceback__ is not tb:
            raise value.with_traceback(tb)
>       raise value

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d0e204a8>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
>               return self._create_connection()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d0e204a8>

    def _create_connection(self):
        """Called by subclasses to create a new ConnectionRecord."""
    
>       return _ConnectionRecord(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0e20f60>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d0e204a8>, connect = True

    def __init__(self, pool, connect=True):
        self.__pool = pool
        if connect:
>           self.__connect(first_connect_check=True)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0e20f60>
first_connect_check = True

    def __connect(self, first_connect_check=False):
        pool = self.__pool
    
        # ensure any existing connection is removed, so that if
        # creator fails, this attribute stays None
        self.connection = None
        try:
            self.starttime = time.time()
            connection = pool._invoke_creator(self)
            pool.logger.debug("Created new connection %r", connection)
            self.connection = connection
        except Exception as e:
            pool.logger.debug("Error on connect(): %s", e)
            raise
        else:
            if first_connect_check:
                pool.dispatch.first_connect.for_modify(
                    pool.dispatch
                ).exec_once(self.connection, self)
            if pool.dispatch.connect:
>               pool.dispatch.connect(self.connection, self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.event.attr._ListenerCollection object at 0x7fd8d02cf3c8>
args = (<connection object at 0x7fd8d0a81768; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>, <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0e20f60>)
kw = {}, fn = <function do_sqlite_connect at 0x7fd8fe856d08>

    def __call__(self, *args, **kw):
        """Execute this event."""
    
        for fn in self.parent_listeners:
>           fn(*args, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8d0a81768; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0e20f60>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       psycopg2.ProgrammingError: syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^

../invenio-db/invenio_db/shared.py:116: ProgrammingError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.yield_fixture()
    def db(app):
        """Database fixture."""
>       if not database_exists(str(db_.engine.url)):

tests/conftest.py:136: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:484: in database_exists
    return bool(get_scalar_result(engine, text))
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:458: in get_scalar_result
    result_proxy = engine.execute(sql)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2143: in execute
    connection = self.contextual_connect(close_with_result=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2192: in contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2232: in _wrap_pool_connect
    e, dialect, self
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1528: in _handle_dbapi_exception_noconnection
    util.raise_from_cause(sqlalchemy_exception, exc_info)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: in _wrap_pool_connect
    return fn()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: in connect
    return _ConnectionFairy._checkout(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: in _checkout
    fairy = _ConnectionRecord.checkout(pool)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: in checkout
    rec = pool._do_get()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: in _do_get
    self._dec_overflow()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: in _do_get
    return self._create_connection()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: in _create_connection
    return _ConnectionRecord(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: in __init__
    self.__connect(first_connect_check=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: in __connect
    pool.dispatch.connect(self.connection, self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: in __call__
    fn(*args, **kw)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8d0a81768; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0e20f60>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       sqlalchemy.exc.ProgrammingError: (psycopg2.ProgrammingError) syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^
E        (Background on this error at: http://sqlalche.me/e/f405)

../invenio-db/invenio_db/shared.py:116: ProgrammingError
___________________ ERROR at setup of test_resumption_token ____________________

self = Engine(postgresql+psycopg2://invenio:***@postgresql:5432/postgres)
fn = <bound method Pool.connect of <sqlalchemy.pool.QueuePool object at 0x7fd8d0a096d8>>
connection = None

    def _wrap_pool_connect(self, fn, connection):
        dialect = self.dialect
        try:
>           return fn()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d0a096d8>

    def connect(self):
        """Return a DBAPI connection from the pool.
    
        The connection is instrumented such that when its
        ``close()`` method is called, the connection will be returned to
        the pool.
    
        """
        if not self._use_threadlocal:
>           return _ConnectionFairy._checkout(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionFairy'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d0a096d8>, threadconns = None
fairy = None

    @classmethod
    def _checkout(cls, pool, threadconns=None, fairy=None):
        if not fairy:
>           fairy = _ConnectionRecord.checkout(pool)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionRecord'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d0a096d8>

    @classmethod
    def checkout(cls, pool):
>       rec = pool._do_get()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d0a096d8>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
                return self._create_connection()
            except:
                with util.safe_reraise():
>                   self._dec_overflow()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.util.langhelpers.safe_reraise object at 0x7fd8d0e44ac8>
type_ = None, value = None, traceback = None

    def __exit__(self, type_, value, traceback):
        # see #2703 for notes
        if type_ is None:
            exc_type, exc_value, exc_tb = self._exc_info
            self._exc_info = None  # remove potential circular references
            if not self.warn_only:
>               compat.reraise(exc_type, exc_value, exc_tb)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

tp = <class 'psycopg2.ProgrammingError'>
value = ProgrammingError('syntax error at or near "PRAGMA"\nLINE 1: PRAGMA foreign_keys=ON\n        ^\n',)
tb = <traceback object at 0x7fd8d026aa48>, cause = None

    def reraise(tp, value, tb=None, cause=None):
        if cause is not None:
            assert cause is not value, "Same cause emitted"
            value.__cause__ = cause
        if value.__traceback__ is not tb:
            raise value.with_traceback(tb)
>       raise value

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d0a096d8>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
>               return self._create_connection()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d0a096d8>

    def _create_connection(self):
        """Called by subclasses to create a new ConnectionRecord."""
    
>       return _ConnectionRecord(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0a09b70>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d0a096d8>, connect = True

    def __init__(self, pool, connect=True):
        self.__pool = pool
        if connect:
>           self.__connect(first_connect_check=True)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0a09b70>
first_connect_check = True

    def __connect(self, first_connect_check=False):
        pool = self.__pool
    
        # ensure any existing connection is removed, so that if
        # creator fails, this attribute stays None
        self.connection = None
        try:
            self.starttime = time.time()
            connection = pool._invoke_creator(self)
            pool.logger.debug("Created new connection %r", connection)
            self.connection = connection
        except Exception as e:
            pool.logger.debug("Error on connect(): %s", e)
            raise
        else:
            if first_connect_check:
                pool.dispatch.first_connect.for_modify(
                    pool.dispatch
                ).exec_once(self.connection, self)
            if pool.dispatch.connect:
>               pool.dispatch.connect(self.connection, self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.event.attr._ListenerCollection object at 0x7fd8d021d748>
args = (<connection object at 0x7fd8d0a81898; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>, <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0a09b70>)
kw = {}, fn = <function do_sqlite_connect at 0x7fd8fe856d08>

    def __call__(self, *args, **kw):
        """Execute this event."""
    
        for fn in self.parent_listeners:
>           fn(*args, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8d0a81898; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0a09b70>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       psycopg2.ProgrammingError: syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^

../invenio-db/invenio_db/shared.py:116: ProgrammingError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.yield_fixture()
    def db(app):
        """Database fixture."""
>       if not database_exists(str(db_.engine.url)):

tests/conftest.py:136: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:484: in database_exists
    return bool(get_scalar_result(engine, text))
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:458: in get_scalar_result
    result_proxy = engine.execute(sql)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2143: in execute
    connection = self.contextual_connect(close_with_result=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2192: in contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2232: in _wrap_pool_connect
    e, dialect, self
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1528: in _handle_dbapi_exception_noconnection
    util.raise_from_cause(sqlalchemy_exception, exc_info)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: in _wrap_pool_connect
    return fn()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: in connect
    return _ConnectionFairy._checkout(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: in _checkout
    fairy = _ConnectionRecord.checkout(pool)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: in checkout
    rec = pool._do_get()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: in _do_get
    self._dec_overflow()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: in _do_get
    return self._create_connection()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: in _create_connection
    return _ConnectionRecord(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: in __init__
    self.__connect(first_connect_check=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: in __connect
    pool.dispatch.connect(self.connection, self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: in __call__
    fn(*args, **kw)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8d0a81898; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0a09b70>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       sqlalchemy.exc.ProgrammingError: (psycopg2.ProgrammingError) syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^
E        (Background on this error at: http://sqlalche.me/e/f405)

../invenio-db/invenio_db/shared.py:116: ProgrammingError
_______________________ ERROR at setup of test_listsets ________________________

self = Engine(postgresql+psycopg2://invenio:***@postgresql:5432/postgres)
fn = <bound method Pool.connect of <sqlalchemy.pool.QueuePool object at 0x7fd8d110d9e8>>
connection = None

    def _wrap_pool_connect(self, fn, connection):
        dialect = self.dialect
        try:
>           return fn()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d110d9e8>

    def connect(self):
        """Return a DBAPI connection from the pool.
    
        The connection is instrumented such that when its
        ``close()`` method is called, the connection will be returned to
        the pool.
    
        """
        if not self._use_threadlocal:
>           return _ConnectionFairy._checkout(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionFairy'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d110d9e8>, threadconns = None
fairy = None

    @classmethod
    def _checkout(cls, pool, threadconns=None, fairy=None):
        if not fairy:
>           fairy = _ConnectionRecord.checkout(pool)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionRecord'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d110d9e8>

    @classmethod
    def checkout(cls, pool):
>       rec = pool._do_get()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d110d9e8>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
                return self._create_connection()
            except:
                with util.safe_reraise():
>                   self._dec_overflow()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.util.langhelpers.safe_reraise object at 0x7fd8d018b908>
type_ = None, value = None, traceback = None

    def __exit__(self, type_, value, traceback):
        # see #2703 for notes
        if type_ is None:
            exc_type, exc_value, exc_tb = self._exc_info
            self._exc_info = None  # remove potential circular references
            if not self.warn_only:
>               compat.reraise(exc_type, exc_value, exc_tb)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

tp = <class 'psycopg2.ProgrammingError'>
value = ProgrammingError('syntax error at or near "PRAGMA"\nLINE 1: PRAGMA foreign_keys=ON\n        ^\n',)
tb = <traceback object at 0x7fd8d03ad548>, cause = None

    def reraise(tp, value, tb=None, cause=None):
        if cause is not None:
            assert cause is not value, "Same cause emitted"
            value.__cause__ = cause
        if value.__traceback__ is not tb:
            raise value.with_traceback(tb)
>       raise value

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d110d9e8>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
>               return self._create_connection()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d110d9e8>

    def _create_connection(self):
        """Called by subclasses to create a new ConnectionRecord."""
    
>       return _ConnectionRecord(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d110d0b8>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d110d9e8>, connect = True

    def __init__(self, pool, connect=True):
        self.__pool = pool
        if connect:
>           self.__connect(first_connect_check=True)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d110d0b8>
first_connect_check = True

    def __connect(self, first_connect_check=False):
        pool = self.__pool
    
        # ensure any existing connection is removed, so that if
        # creator fails, this attribute stays None
        self.connection = None
        try:
            self.starttime = time.time()
            connection = pool._invoke_creator(self)
            pool.logger.debug("Created new connection %r", connection)
            self.connection = connection
        except Exception as e:
            pool.logger.debug("Error on connect(): %s", e)
            raise
        else:
            if first_connect_check:
                pool.dispatch.first_connect.for_modify(
                    pool.dispatch
                ).exec_once(self.connection, self)
            if pool.dispatch.connect:
>               pool.dispatch.connect(self.connection, self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.event.attr._ListenerCollection object at 0x7fd8d021df28>
args = (<connection object at 0x7fd8d0a819c8; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>, <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d110d0b8>)
kw = {}, fn = <function do_sqlite_connect at 0x7fd8fe856d08>

    def __call__(self, *args, **kw):
        """Execute this event."""
    
        for fn in self.parent_listeners:
>           fn(*args, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8d0a819c8; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d110d0b8>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       psycopg2.ProgrammingError: syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^

../invenio-db/invenio_db/shared.py:116: ProgrammingError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.yield_fixture()
    def db(app):
        """Database fixture."""
>       if not database_exists(str(db_.engine.url)):

tests/conftest.py:136: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:484: in database_exists
    return bool(get_scalar_result(engine, text))
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:458: in get_scalar_result
    result_proxy = engine.execute(sql)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2143: in execute
    connection = self.contextual_connect(close_with_result=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2192: in contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2232: in _wrap_pool_connect
    e, dialect, self
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1528: in _handle_dbapi_exception_noconnection
    util.raise_from_cause(sqlalchemy_exception, exc_info)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: in _wrap_pool_connect
    return fn()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: in connect
    return _ConnectionFairy._checkout(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: in _checkout
    fairy = _ConnectionRecord.checkout(pool)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: in checkout
    rec = pool._do_get()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: in _do_get
    self._dec_overflow()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: in _do_get
    return self._create_connection()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: in _create_connection
    return _ConnectionRecord(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: in __init__
    self.__connect(first_connect_check=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: in __connect
    pool.dispatch.connect(self.connection, self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: in __call__
    fn(*args, **kw)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8d0a819c8; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d110d0b8>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       sqlalchemy.exc.ProgrammingError: (psycopg2.ProgrammingError) syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^
E        (Background on this error at: http://sqlalche.me/e/f405)

../invenio-db/invenio_db/shared.py:116: ProgrammingError
__________________ ERROR at setup of test_listmetadataformats __________________

self = Engine(postgresql+psycopg2://invenio:***@postgresql:5432/postgres)
fn = <bound method Pool.connect of <sqlalchemy.pool.QueuePool object at 0x7fd8d080b550>>
connection = None

    def _wrap_pool_connect(self, fn, connection):
        dialect = self.dialect
        try:
>           return fn()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d080b550>

    def connect(self):
        """Return a DBAPI connection from the pool.
    
        The connection is instrumented such that when its
        ``close()`` method is called, the connection will be returned to
        the pool.
    
        """
        if not self._use_threadlocal:
>           return _ConnectionFairy._checkout(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionFairy'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d080b550>, threadconns = None
fairy = None

    @classmethod
    def _checkout(cls, pool, threadconns=None, fairy=None):
        if not fairy:
>           fairy = _ConnectionRecord.checkout(pool)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionRecord'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d080b550>

    @classmethod
    def checkout(cls, pool):
>       rec = pool._do_get()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d080b550>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
                return self._create_connection()
            except:
                with util.safe_reraise():
>                   self._dec_overflow()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.util.langhelpers.safe_reraise object at 0x7fd8d080b7f0>
type_ = None, value = None, traceback = None

    def __exit__(self, type_, value, traceback):
        # see #2703 for notes
        if type_ is None:
            exc_type, exc_value, exc_tb = self._exc_info
            self._exc_info = None  # remove potential circular references
            if not self.warn_only:
>               compat.reraise(exc_type, exc_value, exc_tb)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

tp = <class 'psycopg2.ProgrammingError'>
value = ProgrammingError('syntax error at or near "PRAGMA"\nLINE 1: PRAGMA foreign_keys=ON\n        ^\n',)
tb = <traceback object at 0x7fd8d01a7608>, cause = None

    def reraise(tp, value, tb=None, cause=None):
        if cause is not None:
            assert cause is not value, "Same cause emitted"
            value.__cause__ = cause
        if value.__traceback__ is not tb:
            raise value.with_traceback(tb)
>       raise value

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d080b550>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
>               return self._create_connection()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d080b550>

    def _create_connection(self):
        """Called by subclasses to create a new ConnectionRecord."""
    
>       return _ConnectionRecord(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d080bc18>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d080b550>, connect = True

    def __init__(self, pool, connect=True):
        self.__pool = pool
        if connect:
>           self.__connect(first_connect_check=True)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d080bc18>
first_connect_check = True

    def __connect(self, first_connect_check=False):
        pool = self.__pool
    
        # ensure any existing connection is removed, so that if
        # creator fails, this attribute stays None
        self.connection = None
        try:
            self.starttime = time.time()
            connection = pool._invoke_creator(self)
            pool.logger.debug("Created new connection %r", connection)
            self.connection = connection
        except Exception as e:
            pool.logger.debug("Error on connect(): %s", e)
            raise
        else:
            if first_connect_check:
                pool.dispatch.first_connect.for_modify(
                    pool.dispatch
                ).exec_once(self.connection, self)
            if pool.dispatch.connect:
>               pool.dispatch.connect(self.connection, self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.event.attr._ListenerCollection object at 0x7fd8d019e208>
args = (<connection object at 0x7fd8d0a81af8; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>, <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d080bc18>)
kw = {}, fn = <function do_sqlite_connect at 0x7fd8fe856d08>

    def __call__(self, *args, **kw):
        """Execute this event."""
    
        for fn in self.parent_listeners:
>           fn(*args, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8d0a81af8; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d080bc18>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       psycopg2.ProgrammingError: syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^

../invenio-db/invenio_db/shared.py:116: ProgrammingError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.yield_fixture()
    def db(app):
        """Database fixture."""
>       if not database_exists(str(db_.engine.url)):

tests/conftest.py:136: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:484: in database_exists
    return bool(get_scalar_result(engine, text))
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:458: in get_scalar_result
    result_proxy = engine.execute(sql)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2143: in execute
    connection = self.contextual_connect(close_with_result=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2192: in contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2232: in _wrap_pool_connect
    e, dialect, self
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1528: in _handle_dbapi_exception_noconnection
    util.raise_from_cause(sqlalchemy_exception, exc_info)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: in _wrap_pool_connect
    return fn()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: in connect
    return _ConnectionFairy._checkout(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: in _checkout
    fairy = _ConnectionRecord.checkout(pool)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: in checkout
    rec = pool._do_get()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: in _do_get
    self._dec_overflow()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: in _do_get
    return self._create_connection()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: in _create_connection
    return _ConnectionRecord(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: in __init__
    self.__connect(first_connect_check=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: in __connect
    pool.dispatch.connect(self.connection, self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: in __call__
    fn(*args, **kw)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8d0a81af8; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d080bc18>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       sqlalchemy.exc.ProgrammingError: (psycopg2.ProgrammingError) syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^
E        (Background on this error at: http://sqlalche.me/e/f405)

../invenio-db/invenio_db/shared.py:116: ProgrammingError
________________________ ERROR at setup of test_header _________________________

self = Engine(postgresql+psycopg2://invenio:***@postgresql:5432/postgres)
fn = <bound method Pool.connect of <sqlalchemy.pool.QueuePool object at 0x7fd8d0a45f60>>
connection = None

    def _wrap_pool_connect(self, fn, connection):
        dialect = self.dialect
        try:
>           return fn()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d0a45f60>

    def connect(self):
        """Return a DBAPI connection from the pool.
    
        The connection is instrumented such that when its
        ``close()`` method is called, the connection will be returned to
        the pool.
    
        """
        if not self._use_threadlocal:
>           return _ConnectionFairy._checkout(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionFairy'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d0a45f60>, threadconns = None
fairy = None

    @classmethod
    def _checkout(cls, pool, threadconns=None, fairy=None):
        if not fairy:
>           fairy = _ConnectionRecord.checkout(pool)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionRecord'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d0a45f60>

    @classmethod
    def checkout(cls, pool):
>       rec = pool._do_get()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d0a45f60>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
                return self._create_connection()
            except:
                with util.safe_reraise():
>                   self._dec_overflow()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.util.langhelpers.safe_reraise object at 0x7fd8d0a459e8>
type_ = None, value = None, traceback = None

    def __exit__(self, type_, value, traceback):
        # see #2703 for notes
        if type_ is None:
            exc_type, exc_value, exc_tb = self._exc_info
            self._exc_info = None  # remove potential circular references
            if not self.warn_only:
>               compat.reraise(exc_type, exc_value, exc_tb)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

tp = <class 'psycopg2.ProgrammingError'>
value = ProgrammingError('syntax error at or near "PRAGMA"\nLINE 1: PRAGMA foreign_keys=ON\n        ^\n',)
tb = <traceback object at 0x7fd8d03f37c8>, cause = None

    def reraise(tp, value, tb=None, cause=None):
        if cause is not None:
            assert cause is not value, "Same cause emitted"
            value.__cause__ = cause
        if value.__traceback__ is not tb:
            raise value.with_traceback(tb)
>       raise value

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d0a45f60>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
>               return self._create_connection()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d0a45f60>

    def _create_connection(self):
        """Called by subclasses to create a new ConnectionRecord."""
    
>       return _ConnectionRecord(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0a45470>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d0a45f60>, connect = True

    def __init__(self, pool, connect=True):
        self.__pool = pool
        if connect:
>           self.__connect(first_connect_check=True)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0a45470>
first_connect_check = True

    def __connect(self, first_connect_check=False):
        pool = self.__pool
    
        # ensure any existing connection is removed, so that if
        # creator fails, this attribute stays None
        self.connection = None
        try:
            self.starttime = time.time()
            connection = pool._invoke_creator(self)
            pool.logger.debug("Created new connection %r", connection)
            self.connection = connection
        except Exception as e:
            pool.logger.debug("Error on connect(): %s", e)
            raise
        else:
            if first_connect_check:
                pool.dispatch.first_connect.for_modify(
                    pool.dispatch
                ).exec_once(self.connection, self)
            if pool.dispatch.connect:
>               pool.dispatch.connect(self.connection, self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.event.attr._ListenerCollection object at 0x7fd8d02a22e8>
args = (<connection object at 0x7fd8d0a81c28; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>, <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0a45470>)
kw = {}, fn = <function do_sqlite_connect at 0x7fd8fe856d08>

    def __call__(self, *args, **kw):
        """Execute this event."""
    
        for fn in self.parent_listeners:
>           fn(*args, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8d0a81c28; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0a45470>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       psycopg2.ProgrammingError: syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^

../invenio-db/invenio_db/shared.py:116: ProgrammingError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.yield_fixture()
    def db(app):
        """Database fixture."""
>       if not database_exists(str(db_.engine.url)):

tests/conftest.py:136: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:484: in database_exists
    return bool(get_scalar_result(engine, text))
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:458: in get_scalar_result
    result_proxy = engine.execute(sql)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2143: in execute
    connection = self.contextual_connect(close_with_result=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2192: in contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2232: in _wrap_pool_connect
    e, dialect, self
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1528: in _handle_dbapi_exception_noconnection
    util.raise_from_cause(sqlalchemy_exception, exc_info)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: in _wrap_pool_connect
    return fn()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: in connect
    return _ConnectionFairy._checkout(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: in _checkout
    fairy = _ConnectionRecord.checkout(pool)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: in checkout
    rec = pool._do_get()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: in _do_get
    self._dec_overflow()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: in _do_get
    return self._create_connection()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: in _create_connection
    return _ConnectionRecord(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: in __init__
    self.__connect(first_connect_check=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: in __connect
    pool.dispatch.connect(self.connection, self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: in __call__
    fn(*args, **kw)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8d0a81c28; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0a45470>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       sqlalchemy.exc.ProgrammingError: (psycopg2.ProgrammingError) syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^
E        (Background on this error at: http://sqlalche.me/e/f405)

../invenio-db/invenio_db/shared.py:116: ProgrammingError
________________ ERROR at setup of test_extract_paths_from_sets ________________

self = Engine(postgresql+psycopg2://invenio:***@postgresql:5432/postgres)
fn = <bound method Pool.connect of <sqlalchemy.pool.QueuePool object at 0x7fd8d0bb7ba8>>
connection = None

    def _wrap_pool_connect(self, fn, connection):
        dialect = self.dialect
        try:
>           return fn()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d0bb7ba8>

    def connect(self):
        """Return a DBAPI connection from the pool.
    
        The connection is instrumented such that when its
        ``close()`` method is called, the connection will be returned to
        the pool.
    
        """
        if not self._use_threadlocal:
>           return _ConnectionFairy._checkout(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionFairy'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d0bb7ba8>, threadconns = None
fairy = None

    @classmethod
    def _checkout(cls, pool, threadconns=None, fairy=None):
        if not fairy:
>           fairy = _ConnectionRecord.checkout(pool)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionRecord'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d0bb7ba8>

    @classmethod
    def checkout(cls, pool):
>       rec = pool._do_get()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d0bb7ba8>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
                return self._create_connection()
            except:
                with util.safe_reraise():
>                   self._dec_overflow()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.util.langhelpers.safe_reraise object at 0x7fd8d0bb7748>
type_ = None, value = None, traceback = None

    def __exit__(self, type_, value, traceback):
        # see #2703 for notes
        if type_ is None:
            exc_type, exc_value, exc_tb = self._exc_info
            self._exc_info = None  # remove potential circular references
            if not self.warn_only:
>               compat.reraise(exc_type, exc_value, exc_tb)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

tp = <class 'psycopg2.ProgrammingError'>
value = ProgrammingError('syntax error at or near "PRAGMA"\nLINE 1: PRAGMA foreign_keys=ON\n        ^\n',)
tb = <traceback object at 0x7fd8d02a1348>, cause = None

    def reraise(tp, value, tb=None, cause=None):
        if cause is not None:
            assert cause is not value, "Same cause emitted"
            value.__cause__ = cause
        if value.__traceback__ is not tb:
            raise value.with_traceback(tb)
>       raise value

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d0bb7ba8>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
>               return self._create_connection()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d0bb7ba8>

    def _create_connection(self):
        """Called by subclasses to create a new ConnectionRecord."""
    
>       return _ConnectionRecord(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0bb7a90>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d0bb7ba8>, connect = True

    def __init__(self, pool, connect=True):
        self.__pool = pool
        if connect:
>           self.__connect(first_connect_check=True)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0bb7a90>
first_connect_check = True

    def __connect(self, first_connect_check=False):
        pool = self.__pool
    
        # ensure any existing connection is removed, so that if
        # creator fails, this attribute stays None
        self.connection = None
        try:
            self.starttime = time.time()
            connection = pool._invoke_creator(self)
            pool.logger.debug("Created new connection %r", connection)
            self.connection = connection
        except Exception as e:
            pool.logger.debug("Error on connect(): %s", e)
            raise
        else:
            if first_connect_check:
                pool.dispatch.first_connect.for_modify(
                    pool.dispatch
                ).exec_once(self.connection, self)
            if pool.dispatch.connect:
>               pool.dispatch.connect(self.connection, self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.event.attr._ListenerCollection object at 0x7fd8d02a2cf8>
args = (<connection object at 0x7fd8d0a81d58; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>, <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0bb7a90>)
kw = {}, fn = <function do_sqlite_connect at 0x7fd8fe856d08>

    def __call__(self, *args, **kw):
        """Execute this event."""
    
        for fn in self.parent_listeners:
>           fn(*args, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8d0a81d58; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0bb7a90>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       psycopg2.ProgrammingError: syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^

../invenio-db/invenio_db/shared.py:116: ProgrammingError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.yield_fixture()
    def db(app):
        """Database fixture."""
>       if not database_exists(str(db_.engine.url)):

tests/conftest.py:136: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:484: in database_exists
    return bool(get_scalar_result(engine, text))
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:458: in get_scalar_result
    result_proxy = engine.execute(sql)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2143: in execute
    connection = self.contextual_connect(close_with_result=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2192: in contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2232: in _wrap_pool_connect
    e, dialect, self
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1528: in _handle_dbapi_exception_noconnection
    util.raise_from_cause(sqlalchemy_exception, exc_info)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: in _wrap_pool_connect
    return fn()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: in connect
    return _ConnectionFairy._checkout(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: in _checkout
    fairy = _ConnectionRecord.checkout(pool)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: in checkout
    rec = pool._do_get()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: in _do_get
    self._dec_overflow()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: in _do_get
    return self._create_connection()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: in _create_connection
    return _ConnectionRecord(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: in __init__
    self.__connect(first_connect_check=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: in __connect
    pool.dispatch.connect(self.connection, self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: in __call__
    fn(*args, **kw)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8d0a81d58; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0bb7a90>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       sqlalchemy.exc.ProgrammingError: (psycopg2.ProgrammingError) syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^
E        (Background on this error at: http://sqlalche.me/e/f405)

../invenio-db/invenio_db/shared.py:116: ProgrammingError
___________________ ERROR at setup of test_is_private_index ____________________

self = Engine(postgresql+psycopg2://invenio:***@postgresql:5432/postgres)
fn = <bound method Pool.connect of <sqlalchemy.pool.QueuePool object at 0x7fd8d0a9fc18>>
connection = None

    def _wrap_pool_connect(self, fn, connection):
        dialect = self.dialect
        try:
>           return fn()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d0a9fc18>

    def connect(self):
        """Return a DBAPI connection from the pool.
    
        The connection is instrumented such that when its
        ``close()`` method is called, the connection will be returned to
        the pool.
    
        """
        if not self._use_threadlocal:
>           return _ConnectionFairy._checkout(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionFairy'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d0a9fc18>, threadconns = None
fairy = None

    @classmethod
    def _checkout(cls, pool, threadconns=None, fairy=None):
        if not fairy:
>           fairy = _ConnectionRecord.checkout(pool)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionRecord'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d0a9fc18>

    @classmethod
    def checkout(cls, pool):
>       rec = pool._do_get()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d0a9fc18>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
                return self._create_connection()
            except:
                with util.safe_reraise():
>                   self._dec_overflow()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.util.langhelpers.safe_reraise object at 0x7fd8cfee6128>
type_ = None, value = None, traceback = None

    def __exit__(self, type_, value, traceback):
        # see #2703 for notes
        if type_ is None:
            exc_type, exc_value, exc_tb = self._exc_info
            self._exc_info = None  # remove potential circular references
            if not self.warn_only:
>               compat.reraise(exc_type, exc_value, exc_tb)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

tp = <class 'psycopg2.ProgrammingError'>
value = ProgrammingError('syntax error at or near "PRAGMA"\nLINE 1: PRAGMA foreign_keys=ON\n        ^\n',)
tb = <traceback object at 0x7fd8cffb0a08>, cause = None

    def reraise(tp, value, tb=None, cause=None):
        if cause is not None:
            assert cause is not value, "Same cause emitted"
            value.__cause__ = cause
        if value.__traceback__ is not tb:
            raise value.with_traceback(tb)
>       raise value

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d0a9fc18>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
>               return self._create_connection()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8d0a9fc18>

    def _create_connection(self):
        """Called by subclasses to create a new ConnectionRecord."""
    
>       return _ConnectionRecord(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0a9f278>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8d0a9fc18>, connect = True

    def __init__(self, pool, connect=True):
        self.__pool = pool
        if connect:
>           self.__connect(first_connect_check=True)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0a9f278>
first_connect_check = True

    def __connect(self, first_connect_check=False):
        pool = self.__pool
    
        # ensure any existing connection is removed, so that if
        # creator fails, this attribute stays None
        self.connection = None
        try:
            self.starttime = time.time()
            connection = pool._invoke_creator(self)
            pool.logger.debug("Created new connection %r", connection)
            self.connection = connection
        except Exception as e:
            pool.logger.debug("Error on connect(): %s", e)
            raise
        else:
            if first_connect_check:
                pool.dispatch.first_connect.for_modify(
                    pool.dispatch
                ).exec_once(self.connection, self)
            if pool.dispatch.connect:
>               pool.dispatch.connect(self.connection, self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.event.attr._ListenerCollection object at 0x7fd8cff9e128>
args = (<connection object at 0x7fd8d0a81e88; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>, <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0a9f278>)
kw = {}, fn = <function do_sqlite_connect at 0x7fd8fe856d08>

    def __call__(self, *args, **kw):
        """Execute this event."""
    
        for fn in self.parent_listeners:
>           fn(*args, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8d0a81e88; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0a9f278>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       psycopg2.ProgrammingError: syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^

../invenio-db/invenio_db/shared.py:116: ProgrammingError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.yield_fixture()
    def db(app):
        """Database fixture."""
>       if not database_exists(str(db_.engine.url)):

tests/conftest.py:136: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:484: in database_exists
    return bool(get_scalar_result(engine, text))
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:458: in get_scalar_result
    result_proxy = engine.execute(sql)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2143: in execute
    connection = self.contextual_connect(close_with_result=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2192: in contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2232: in _wrap_pool_connect
    e, dialect, self
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1528: in _handle_dbapi_exception_noconnection
    util.raise_from_cause(sqlalchemy_exception, exc_info)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: in _wrap_pool_connect
    return fn()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: in connect
    return _ConnectionFairy._checkout(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: in _checkout
    fairy = _ConnectionRecord.checkout(pool)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: in checkout
    rec = pool._do_get()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: in _do_get
    self._dec_overflow()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: in _do_get
    return self._create_connection()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: in _create_connection
    return _ConnectionRecord(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: in __init__
    self.__connect(first_connect_check=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: in __connect
    pool.dispatch.connect(self.connection, self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: in __call__
    fn(*args, **kw)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8d0a81e88; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0a9f278>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       sqlalchemy.exc.ProgrammingError: (psycopg2.ProgrammingError) syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^
E        (Background on this error at: http://sqlalche.me/e/f405)

../invenio-db/invenio_db/shared.py:116: ProgrammingError
__________ ERROR at setup of test_check_correct_system_props_mapping ___________

self = Engine(postgresql+psycopg2://invenio:***@postgresql:5432/postgres)
fn = <bound method Pool.connect of <sqlalchemy.pool.QueuePool object at 0x7fd8cfe63978>>
connection = None

    def _wrap_pool_connect(self, fn, connection):
        dialect = self.dialect
        try:
>           return fn()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cfe63978>

    def connect(self):
        """Return a DBAPI connection from the pool.
    
        The connection is instrumented such that when its
        ``close()`` method is called, the connection will be returned to
        the pool.
    
        """
        if not self._use_threadlocal:
>           return _ConnectionFairy._checkout(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionFairy'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cfe63978>, threadconns = None
fairy = None

    @classmethod
    def _checkout(cls, pool, threadconns=None, fairy=None):
        if not fairy:
>           fairy = _ConnectionRecord.checkout(pool)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionRecord'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cfe63978>

    @classmethod
    def checkout(cls, pool):
>       rec = pool._do_get()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cfe63978>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
                return self._create_connection()
            except:
                with util.safe_reraise():
>                   self._dec_overflow()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.util.langhelpers.safe_reraise object at 0x7fd8d01584e0>
type_ = None, value = None, traceback = None

    def __exit__(self, type_, value, traceback):
        # see #2703 for notes
        if type_ is None:
            exc_type, exc_value, exc_tb = self._exc_info
            self._exc_info = None  # remove potential circular references
            if not self.warn_only:
>               compat.reraise(exc_type, exc_value, exc_tb)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

tp = <class 'psycopg2.ProgrammingError'>
value = ProgrammingError('syntax error at or near "PRAGMA"\nLINE 1: PRAGMA foreign_keys=ON\n        ^\n',)
tb = <traceback object at 0x7fd8d0153c08>, cause = None

    def reraise(tp, value, tb=None, cause=None):
        if cause is not None:
            assert cause is not value, "Same cause emitted"
            value.__cause__ = cause
        if value.__traceback__ is not tb:
            raise value.with_traceback(tb)
>       raise value

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cfe63978>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
>               return self._create_connection()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cfe63978>

    def _create_connection(self):
        """Called by subclasses to create a new ConnectionRecord."""
    
>       return _ConnectionRecord(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cfe63b38>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cfe63978>, connect = True

    def __init__(self, pool, connect=True):
        self.__pool = pool
        if connect:
>           self.__connect(first_connect_check=True)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cfe63b38>
first_connect_check = True

    def __connect(self, first_connect_check=False):
        pool = self.__pool
    
        # ensure any existing connection is removed, so that if
        # creator fails, this attribute stays None
        self.connection = None
        try:
            self.starttime = time.time()
            connection = pool._invoke_creator(self)
            pool.logger.debug("Created new connection %r", connection)
            self.connection = connection
        except Exception as e:
            pool.logger.debug("Error on connect(): %s", e)
            raise
        else:
            if first_connect_check:
                pool.dispatch.first_connect.for_modify(
                    pool.dispatch
                ).exec_once(self.connection, self)
            if pool.dispatch.connect:
>               pool.dispatch.connect(self.connection, self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.event.attr._ListenerCollection object at 0x7fd8cff225f8>
args = (<connection object at 0x7fd8d0a812a8; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>, <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cfe63b38>)
kw = {}, fn = <function do_sqlite_connect at 0x7fd8fe856d08>

    def __call__(self, *args, **kw):
        """Execute this event."""
    
        for fn in self.parent_listeners:
>           fn(*args, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8d0a812a8; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cfe63b38>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       psycopg2.ProgrammingError: syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^

../invenio-db/invenio_db/shared.py:116: ProgrammingError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.yield_fixture()
    def db(app):
        """Database fixture."""
>       if not database_exists(str(db_.engine.url)):

tests/conftest.py:136: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:484: in database_exists
    return bool(get_scalar_result(engine, text))
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:458: in get_scalar_result
    result_proxy = engine.execute(sql)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2143: in execute
    connection = self.contextual_connect(close_with_result=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2192: in contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2232: in _wrap_pool_connect
    e, dialect, self
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1528: in _handle_dbapi_exception_noconnection
    util.raise_from_cause(sqlalchemy_exception, exc_info)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: in _wrap_pool_connect
    return fn()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: in connect
    return _ConnectionFairy._checkout(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: in _checkout
    fairy = _ConnectionRecord.checkout(pool)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: in checkout
    rec = pool._do_get()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: in _do_get
    self._dec_overflow()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: in _do_get
    return self._create_connection()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: in _create_connection
    return _ConnectionRecord(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: in __init__
    self.__connect(first_connect_check=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: in __connect
    pool.dispatch.connect(self.connection, self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: in __call__
    fn(*args, **kw)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8d0a812a8; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cfe63b38>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       sqlalchemy.exc.ProgrammingError: (psycopg2.ProgrammingError) syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^
E        (Background on this error at: http://sqlalche.me/e/f405)

../invenio-db/invenio_db/shared.py:116: ProgrammingError
_______________ ERROR at setup of test_combine_record_file_urls ________________

self = Engine(postgresql+psycopg2://invenio:***@postgresql:5432/postgres)
fn = <bound method Pool.connect of <sqlalchemy.pool.QueuePool object at 0x7fd8cfe6de80>>
connection = None

    def _wrap_pool_connect(self, fn, connection):
        dialect = self.dialect
        try:
>           return fn()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cfe6de80>

    def connect(self):
        """Return a DBAPI connection from the pool.
    
        The connection is instrumented such that when its
        ``close()`` method is called, the connection will be returned to
        the pool.
    
        """
        if not self._use_threadlocal:
>           return _ConnectionFairy._checkout(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionFairy'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cfe6de80>, threadconns = None
fairy = None

    @classmethod
    def _checkout(cls, pool, threadconns=None, fairy=None):
        if not fairy:
>           fairy = _ConnectionRecord.checkout(pool)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionRecord'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cfe6de80>

    @classmethod
    def checkout(cls, pool):
>       rec = pool._do_get()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cfe6de80>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
                return self._create_connection()
            except:
                with util.safe_reraise():
>                   self._dec_overflow()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.util.langhelpers.safe_reraise object at 0x7fd8d00479e8>
type_ = None, value = None, traceback = None

    def __exit__(self, type_, value, traceback):
        # see #2703 for notes
        if type_ is None:
            exc_type, exc_value, exc_tb = self._exc_info
            self._exc_info = None  # remove potential circular references
            if not self.warn_only:
>               compat.reraise(exc_type, exc_value, exc_tb)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

tp = <class 'psycopg2.ProgrammingError'>
value = ProgrammingError('syntax error at or near "PRAGMA"\nLINE 1: PRAGMA foreign_keys=ON\n        ^\n',)
tb = <traceback object at 0x7fd8d0054148>, cause = None

    def reraise(tp, value, tb=None, cause=None):
        if cause is not None:
            assert cause is not value, "Same cause emitted"
            value.__cause__ = cause
        if value.__traceback__ is not tb:
            raise value.with_traceback(tb)
>       raise value

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cfe6de80>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
>               return self._create_connection()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cfe6de80>

    def _create_connection(self):
        """Called by subclasses to create a new ConnectionRecord."""
    
>       return _ConnectionRecord(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0047080>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cfe6de80>, connect = True

    def __init__(self, pool, connect=True):
        self.__pool = pool
        if connect:
>           self.__connect(first_connect_check=True)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0047080>
first_connect_check = True

    def __connect(self, first_connect_check=False):
        pool = self.__pool
    
        # ensure any existing connection is removed, so that if
        # creator fails, this attribute stays None
        self.connection = None
        try:
            self.starttime = time.time()
            connection = pool._invoke_creator(self)
            pool.logger.debug("Created new connection %r", connection)
            self.connection = connection
        except Exception as e:
            pool.logger.debug("Error on connect(): %s", e)
            raise
        else:
            if first_connect_check:
                pool.dispatch.first_connect.for_modify(
                    pool.dispatch
                ).exec_once(self.connection, self)
            if pool.dispatch.connect:
>               pool.dispatch.connect(self.connection, self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.event.attr._ListenerCollection object at 0x7fd8cff22ac8>
args = (<connection object at 0x7fd8d0a81178; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>, <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0047080>)
kw = {}, fn = <function do_sqlite_connect at 0x7fd8fe856d08>

    def __call__(self, *args, **kw):
        """Execute this event."""
    
        for fn in self.parent_listeners:
>           fn(*args, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8d0a81178; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0047080>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       psycopg2.ProgrammingError: syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^

../invenio-db/invenio_db/shared.py:116: ProgrammingError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.yield_fixture()
    def db(app):
        """Database fixture."""
>       if not database_exists(str(db_.engine.url)):

tests/conftest.py:136: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:484: in database_exists
    return bool(get_scalar_result(engine, text))
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:458: in get_scalar_result
    result_proxy = engine.execute(sql)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2143: in execute
    connection = self.contextual_connect(close_with_result=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2192: in contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2232: in _wrap_pool_connect
    e, dialect, self
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1528: in _handle_dbapi_exception_noconnection
    util.raise_from_cause(sqlalchemy_exception, exc_info)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: in _wrap_pool_connect
    return fn()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: in connect
    return _ConnectionFairy._checkout(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: in _checkout
    fairy = _ConnectionRecord.checkout(pool)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: in checkout
    rec = pool._do_get()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: in _do_get
    self._dec_overflow()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: in _do_get
    return self._create_connection()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: in _create_connection
    return _ConnectionRecord(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: in __init__
    self.__connect(first_connect_check=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: in __connect
    pool.dispatch.connect(self.connection, self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: in __call__
    fn(*args, **kw)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8d0a81178; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8d0047080>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       sqlalchemy.exc.ProgrammingError: (psycopg2.ProgrammingError) syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^
E        (Background on this error at: http://sqlalche.me/e/f405)

../invenio-db/invenio_db/shared.py:116: ProgrammingError
____________________ ERROR at setup of test_get_identifier _____________________

self = Engine(postgresql+psycopg2://invenio:***@postgresql:5432/postgres)
fn = <bound method Pool.connect of <sqlalchemy.pool.QueuePool object at 0x7fd8cfc615c0>>
connection = None

    def _wrap_pool_connect(self, fn, connection):
        dialect = self.dialect
        try:
>           return fn()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cfc615c0>

    def connect(self):
        """Return a DBAPI connection from the pool.
    
        The connection is instrumented such that when its
        ``close()`` method is called, the connection will be returned to
        the pool.
    
        """
        if not self._use_threadlocal:
>           return _ConnectionFairy._checkout(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionFairy'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cfc615c0>, threadconns = None
fairy = None

    @classmethod
    def _checkout(cls, pool, threadconns=None, fairy=None):
        if not fairy:
>           fairy = _ConnectionRecord.checkout(pool)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionRecord'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cfc615c0>

    @classmethod
    def checkout(cls, pool):
>       rec = pool._do_get()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cfc615c0>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
                return self._create_connection()
            except:
                with util.safe_reraise():
>                   self._dec_overflow()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.util.langhelpers.safe_reraise object at 0x7fd8cfc617b8>
type_ = None, value = None, traceback = None

    def __exit__(self, type_, value, traceback):
        # see #2703 for notes
        if type_ is None:
            exc_type, exc_value, exc_tb = self._exc_info
            self._exc_info = None  # remove potential circular references
            if not self.warn_only:
>               compat.reraise(exc_type, exc_value, exc_tb)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

tp = <class 'psycopg2.ProgrammingError'>
value = ProgrammingError('syntax error at or near "PRAGMA"\nLINE 1: PRAGMA foreign_keys=ON\n        ^\n',)
tb = <traceback object at 0x7fd8cfc60788>, cause = None

    def reraise(tp, value, tb=None, cause=None):
        if cause is not None:
            assert cause is not value, "Same cause emitted"
            value.__cause__ = cause
        if value.__traceback__ is not tb:
            raise value.with_traceback(tb)
>       raise value

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cfc615c0>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
>               return self._create_connection()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cfc615c0>

    def _create_connection(self):
        """Called by subclasses to create a new ConnectionRecord."""
    
>       return _ConnectionRecord(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cfc61780>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cfc615c0>, connect = True

    def __init__(self, pool, connect=True):
        self.__pool = pool
        if connect:
>           self.__connect(first_connect_check=True)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cfc61780>
first_connect_check = True

    def __connect(self, first_connect_check=False):
        pool = self.__pool
    
        # ensure any existing connection is removed, so that if
        # creator fails, this attribute stays None
        self.connection = None
        try:
            self.starttime = time.time()
            connection = pool._invoke_creator(self)
            pool.logger.debug("Created new connection %r", connection)
            self.connection = connection
        except Exception as e:
            pool.logger.debug("Error on connect(): %s", e)
            raise
        else:
            if first_connect_check:
                pool.dispatch.first_connect.for_modify(
                    pool.dispatch
                ).exec_once(self.connection, self)
            if pool.dispatch.connect:
>               pool.dispatch.connect(self.connection, self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.event.attr._ListenerCollection object at 0x7fd8cfc63c18>
args = (<connection object at 0x7fd8d0a813d8; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>, <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cfc61780>)
kw = {}, fn = <function do_sqlite_connect at 0x7fd8fe856d08>

    def __call__(self, *args, **kw):
        """Execute this event."""
    
        for fn in self.parent_listeners:
>           fn(*args, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8d0a813d8; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cfc61780>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       psycopg2.ProgrammingError: syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^

../invenio-db/invenio_db/shared.py:116: ProgrammingError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.yield_fixture()
    def db(app):
        """Database fixture."""
>       if not database_exists(str(db_.engine.url)):

tests/conftest.py:136: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:484: in database_exists
    return bool(get_scalar_result(engine, text))
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:458: in get_scalar_result
    result_proxy = engine.execute(sql)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2143: in execute
    connection = self.contextual_connect(close_with_result=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2192: in contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2232: in _wrap_pool_connect
    e, dialect, self
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1528: in _handle_dbapi_exception_noconnection
    util.raise_from_cause(sqlalchemy_exception, exc_info)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: in _wrap_pool_connect
    return fn()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: in connect
    return _ConnectionFairy._checkout(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: in _checkout
    fairy = _ConnectionRecord.checkout(pool)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: in checkout
    rec = pool._do_get()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: in _do_get
    self._dec_overflow()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: in _do_get
    return self._create_connection()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: in _create_connection
    return _ConnectionRecord(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: in __init__
    self.__connect(first_connect_check=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: in __connect
    pool.dispatch.connect(self.connection, self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: in __call__
    fn(*args, **kw)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8d0a813d8; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cfc61780>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       sqlalchemy.exc.ProgrammingError: (psycopg2.ProgrammingError) syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^
E        (Background on this error at: http://sqlalche.me/e/f405)

../invenio-db/invenio_db/shared.py:116: ProgrammingError
________________ ERROR at setup of test_issue34851_listrecords _________________

self = Engine(postgresql+psycopg2://invenio:***@postgresql:5432/postgres)
fn = <bound method Pool.connect of <sqlalchemy.pool.QueuePool object at 0x7fd8cfc1f6d8>>
connection = None

    def _wrap_pool_connect(self, fn, connection):
        dialect = self.dialect
        try:
>           return fn()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cfc1f6d8>

    def connect(self):
        """Return a DBAPI connection from the pool.
    
        The connection is instrumented such that when its
        ``close()`` method is called, the connection will be returned to
        the pool.
    
        """
        if not self._use_threadlocal:
>           return _ConnectionFairy._checkout(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionFairy'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cfc1f6d8>, threadconns = None
fairy = None

    @classmethod
    def _checkout(cls, pool, threadconns=None, fairy=None):
        if not fairy:
>           fairy = _ConnectionRecord.checkout(pool)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionRecord'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cfc1f6d8>

    @classmethod
    def checkout(cls, pool):
>       rec = pool._do_get()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cfc1f6d8>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
                return self._create_connection()
            except:
                with util.safe_reraise():
>                   self._dec_overflow()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.util.langhelpers.safe_reraise object at 0x7fd8cfeb31d0>
type_ = None, value = None, traceback = None

    def __exit__(self, type_, value, traceback):
        # see #2703 for notes
        if type_ is None:
            exc_type, exc_value, exc_tb = self._exc_info
            self._exc_info = None  # remove potential circular references
            if not self.warn_only:
>               compat.reraise(exc_type, exc_value, exc_tb)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

tp = <class 'psycopg2.ProgrammingError'>
value = ProgrammingError('syntax error at or near "PRAGMA"\nLINE 1: PRAGMA foreign_keys=ON\n        ^\n',)
tb = <traceback object at 0x7fd8cfe2d8c8>, cause = None

    def reraise(tp, value, tb=None, cause=None):
        if cause is not None:
            assert cause is not value, "Same cause emitted"
            value.__cause__ = cause
        if value.__traceback__ is not tb:
            raise value.with_traceback(tb)
>       raise value

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cfc1f6d8>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
>               return self._create_connection()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cfc1f6d8>

    def _create_connection(self):
        """Called by subclasses to create a new ConnectionRecord."""
    
>       return _ConnectionRecord(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cfe0fe48>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cfc1f6d8>, connect = True

    def __init__(self, pool, connect=True):
        self.__pool = pool
        if connect:
>           self.__connect(first_connect_check=True)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cfe0fe48>
first_connect_check = True

    def __connect(self, first_connect_check=False):
        pool = self.__pool
    
        # ensure any existing connection is removed, so that if
        # creator fails, this attribute stays None
        self.connection = None
        try:
            self.starttime = time.time()
            connection = pool._invoke_creator(self)
            pool.logger.debug("Created new connection %r", connection)
            self.connection = connection
        except Exception as e:
            pool.logger.debug("Error on connect(): %s", e)
            raise
        else:
            if first_connect_check:
                pool.dispatch.first_connect.for_modify(
                    pool.dispatch
                ).exec_once(self.connection, self)
            if pool.dispatch.connect:
>               pool.dispatch.connect(self.connection, self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.event.attr._ListenerCollection object at 0x7fd8cfd364a8>
args = (<connection object at 0x7fd8cfeae048; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>, <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cfe0fe48>)
kw = {}, fn = <function do_sqlite_connect at 0x7fd8fe856d08>

    def __call__(self, *args, **kw):
        """Execute this event."""
    
        for fn in self.parent_listeners:
>           fn(*args, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8cfeae048; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cfe0fe48>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       psycopg2.ProgrammingError: syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^

../invenio-db/invenio_db/shared.py:116: ProgrammingError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.yield_fixture()
    def db(app):
        """Database fixture."""
>       if not database_exists(str(db_.engine.url)):

tests/conftest.py:136: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:484: in database_exists
    return bool(get_scalar_result(engine, text))
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:458: in get_scalar_result
    result_proxy = engine.execute(sql)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2143: in execute
    connection = self.contextual_connect(close_with_result=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2192: in contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2232: in _wrap_pool_connect
    e, dialect, self
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1528: in _handle_dbapi_exception_noconnection
    util.raise_from_cause(sqlalchemy_exception, exc_info)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: in _wrap_pool_connect
    return fn()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: in connect
    return _ConnectionFairy._checkout(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: in _checkout
    fairy = _ConnectionRecord.checkout(pool)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: in checkout
    rec = pool._do_get()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: in _do_get
    self._dec_overflow()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: in _do_get
    return self._create_connection()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: in _create_connection
    return _ConnectionRecord(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: in __init__
    self.__connect(first_connect_check=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: in __connect
    pool.dispatch.connect(self.connection, self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: in __call__
    fn(*args, **kw)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8cfeae048; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cfe0fe48>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       sqlalchemy.exc.ProgrammingError: (psycopg2.ProgrammingError) syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^
E        (Background on this error at: http://sqlalche.me/e/f405)

../invenio-db/invenio_db/shared.py:116: ProgrammingError
______________ ERROR at setup of test_issue34851_listidentifiers _______________

self = Engine(postgresql+psycopg2://invenio:***@postgresql:5432/postgres)
fn = <bound method Pool.connect of <sqlalchemy.pool.QueuePool object at 0x7fd8cff6fd68>>
connection = None

    def _wrap_pool_connect(self, fn, connection):
        dialect = self.dialect
        try:
>           return fn()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cff6fd68>

    def connect(self):
        """Return a DBAPI connection from the pool.
    
        The connection is instrumented such that when its
        ``close()`` method is called, the connection will be returned to
        the pool.
    
        """
        if not self._use_threadlocal:
>           return _ConnectionFairy._checkout(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionFairy'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cff6fd68>, threadconns = None
fairy = None

    @classmethod
    def _checkout(cls, pool, threadconns=None, fairy=None):
        if not fairy:
>           fairy = _ConnectionRecord.checkout(pool)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionRecord'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cff6fd68>

    @classmethod
    def checkout(cls, pool):
>       rec = pool._do_get()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cff6fd68>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
                return self._create_connection()
            except:
                with util.safe_reraise():
>                   self._dec_overflow()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.util.langhelpers.safe_reraise object at 0x7fd8cff6c908>
type_ = None, value = None, traceback = None

    def __exit__(self, type_, value, traceback):
        # see #2703 for notes
        if type_ is None:
            exc_type, exc_value, exc_tb = self._exc_info
            self._exc_info = None  # remove potential circular references
            if not self.warn_only:
>               compat.reraise(exc_type, exc_value, exc_tb)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

tp = <class 'psycopg2.ProgrammingError'>
value = ProgrammingError('syntax error at or near "PRAGMA"\nLINE 1: PRAGMA foreign_keys=ON\n        ^\n',)
tb = <traceback object at 0x7fd8cff5e588>, cause = None

    def reraise(tp, value, tb=None, cause=None):
        if cause is not None:
            assert cause is not value, "Same cause emitted"
            value.__cause__ = cause
        if value.__traceback__ is not tb:
            raise value.with_traceback(tb)
>       raise value

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cff6fd68>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
>               return self._create_connection()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cff6fd68>

    def _create_connection(self):
        """Called by subclasses to create a new ConnectionRecord."""
    
>       return _ConnectionRecord(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cff6f940>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cff6fd68>, connect = True

    def __init__(self, pool, connect=True):
        self.__pool = pool
        if connect:
>           self.__connect(first_connect_check=True)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cff6f940>
first_connect_check = True

    def __connect(self, first_connect_check=False):
        pool = self.__pool
    
        # ensure any existing connection is removed, so that if
        # creator fails, this attribute stays None
        self.connection = None
        try:
            self.starttime = time.time()
            connection = pool._invoke_creator(self)
            pool.logger.debug("Created new connection %r", connection)
            self.connection = connection
        except Exception as e:
            pool.logger.debug("Error on connect(): %s", e)
            raise
        else:
            if first_connect_check:
                pool.dispatch.first_connect.for_modify(
                    pool.dispatch
                ).exec_once(self.connection, self)
            if pool.dispatch.connect:
>               pool.dispatch.connect(self.connection, self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.event.attr._ListenerCollection object at 0x7fd8cfbf57b8>
args = (<connection object at 0x7fd8cfeae508; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>, <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cff6f940>)
kw = {}, fn = <function do_sqlite_connect at 0x7fd8fe856d08>

    def __call__(self, *args, **kw):
        """Execute this event."""
    
        for fn in self.parent_listeners:
>           fn(*args, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8cfeae508; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cff6f940>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       psycopg2.ProgrammingError: syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^

../invenio-db/invenio_db/shared.py:116: ProgrammingError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.yield_fixture()
    def db(app):
        """Database fixture."""
>       if not database_exists(str(db_.engine.url)):

tests/conftest.py:136: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:484: in database_exists
    return bool(get_scalar_result(engine, text))
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:458: in get_scalar_result
    result_proxy = engine.execute(sql)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2143: in execute
    connection = self.contextual_connect(close_with_result=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2192: in contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2232: in _wrap_pool_connect
    e, dialect, self
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1528: in _handle_dbapi_exception_noconnection
    util.raise_from_cause(sqlalchemy_exception, exc_info)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: in _wrap_pool_connect
    return fn()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: in connect
    return _ConnectionFairy._checkout(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: in _checkout
    fairy = _ConnectionRecord.checkout(pool)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: in checkout
    rec = pool._do_get()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: in _do_get
    self._dec_overflow()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: in _do_get
    return self._create_connection()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: in _create_connection
    return _ConnectionRecord(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: in __init__
    self.__connect(first_connect_check=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: in __connect
    pool.dispatch.connect(self.connection, self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: in __call__
    fn(*args, **kw)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8cfeae508; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cff6f940>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       sqlalchemy.exc.ProgrammingError: (psycopg2.ProgrammingError) syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^
E        (Background on this error at: http://sqlalche.me/e/f405)

../invenio-db/invenio_db/shared.py:116: ProgrammingError
_______________________ ERROR at setup of test_serialize _______________________
file /code/modules/invenio-oaiserver/tests/test_resumption_token.py, line 21
  def test_serialize(app,mocker):
E       fixture 'mocker' not found
>       available fixtures: app, authority_data, base_app, bibliographic_data, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, celery_app, celery_config, celery_enable_logging, celery_includes, celery_parameters, celery_session_app, celery_session_worker, celery_worker, celery_worker_parameters, celery_worker_pool, client, cov, db, depends_on_current_app, doctest_namespace, es_app, identify, indexes, instance_path, item_type, mock_execute, monkeypatch, no_cover, oaiset, pytestconfig, record_property, record_xml_attribute, records, recwarn, schema, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, use_celery_app_trap, users, without_oaiset_signals
>       use 'pytest --fixtures [testpath]' for help on them.

/code/modules/invenio-oaiserver/tests/test_resumption_token.py:21
_________________ ERROR at setup of test_ResumptionTokenSchema _________________
file /code/modules/invenio-oaiserver/tests/test_resumption_token.py, line 48
  def test_ResumptionTokenSchema(app,mocker):
E       fixture 'mocker' not found
>       available fixtures: app, authority_data, base_app, bibliographic_data, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, celery_app, celery_config, celery_enable_logging, celery_includes, celery_parameters, celery_session_app, celery_session_worker, celery_worker, celery_worker_parameters, celery_worker_pool, client, cov, db, depends_on_current_app, doctest_namespace, es_app, identify, indexes, instance_path, item_type, mock_execute, monkeypatch, no_cover, oaiset, pytestconfig, record_property, record_xml_attribute, records, recwarn, schema, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, use_celery_app_trap, users, without_oaiset_signals
>       use 'pytest --fixtures [testpath]' for help on them.

/code/modules/invenio-oaiserver/tests/test_resumption_token.py:48
____________________ ERROR at setup of test_records_commit _____________________

self = Engine(postgresql+psycopg2://invenio:***@postgresql:5432/postgres)
fn = <bound method Pool.connect of <sqlalchemy.pool.QueuePool object at 0x7fd8cfa6c358>>
connection = None

    def _wrap_pool_connect(self, fn, connection):
        dialect = self.dialect
        try:
>           return fn()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cfa6c358>

    def connect(self):
        """Return a DBAPI connection from the pool.
    
        The connection is instrumented such that when its
        ``close()`` method is called, the connection will be returned to
        the pool.
    
        """
        if not self._use_threadlocal:
>           return _ConnectionFairy._checkout(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionFairy'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cfa6c358>, threadconns = None
fairy = None

    @classmethod
    def _checkout(cls, pool, threadconns=None, fairy=None):
        if not fairy:
>           fairy = _ConnectionRecord.checkout(pool)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionRecord'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cfa6c358>

    @classmethod
    def checkout(cls, pool):
>       rec = pool._do_get()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cfa6c358>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
                return self._create_connection()
            except:
                with util.safe_reraise():
>                   self._dec_overflow()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.util.langhelpers.safe_reraise object at 0x7fd8cfa6e908>
type_ = None, value = None, traceback = None

    def __exit__(self, type_, value, traceback):
        # see #2703 for notes
        if type_ is None:
            exc_type, exc_value, exc_tb = self._exc_info
            self._exc_info = None  # remove potential circular references
            if not self.warn_only:
>               compat.reraise(exc_type, exc_value, exc_tb)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

tp = <class 'psycopg2.ProgrammingError'>
value = ProgrammingError('syntax error at or near "PRAGMA"\nLINE 1: PRAGMA foreign_keys=ON\n        ^\n',)
tb = <traceback object at 0x7fd8cfc9a988>, cause = None

    def reraise(tp, value, tb=None, cause=None):
        if cause is not None:
            assert cause is not value, "Same cause emitted"
            value.__cause__ = cause
        if value.__traceback__ is not tb:
            raise value.with_traceback(tb)
>       raise value

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cfa6c358>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
>               return self._create_connection()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cfa6c358>

    def _create_connection(self):
        """Called by subclasses to create a new ConnectionRecord."""
    
>       return _ConnectionRecord(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cfa6c470>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cfa6c358>, connect = True

    def __init__(self, pool, connect=True):
        self.__pool = pool
        if connect:
>           self.__connect(first_connect_check=True)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cfa6c470>
first_connect_check = True

    def __connect(self, first_connect_check=False):
        pool = self.__pool
    
        # ensure any existing connection is removed, so that if
        # creator fails, this attribute stays None
        self.connection = None
        try:
            self.starttime = time.time()
            connection = pool._invoke_creator(self)
            pool.logger.debug("Created new connection %r", connection)
            self.connection = connection
        except Exception as e:
            pool.logger.debug("Error on connect(): %s", e)
            raise
        else:
            if first_connect_check:
                pool.dispatch.first_connect.for_modify(
                    pool.dispatch
                ).exec_once(self.connection, self)
            if pool.dispatch.connect:
>               pool.dispatch.connect(self.connection, self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.event.attr._ListenerCollection object at 0x7fd8cfc0bc18>
args = (<connection object at 0x7fd8cfeae638; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>, <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cfa6c470>)
kw = {}, fn = <function do_sqlite_connect at 0x7fd8fe856d08>

    def __call__(self, *args, **kw):
        """Execute this event."""
    
        for fn in self.parent_listeners:
>           fn(*args, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8cfeae638; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cfa6c470>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       psycopg2.ProgrammingError: syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^

../invenio-db/invenio_db/shared.py:116: ProgrammingError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.yield_fixture()
    def db(app):
        """Database fixture."""
>       if not database_exists(str(db_.engine.url)):

tests/conftest.py:136: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:484: in database_exists
    return bool(get_scalar_result(engine, text))
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:458: in get_scalar_result
    result_proxy = engine.execute(sql)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2143: in execute
    connection = self.contextual_connect(close_with_result=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2192: in contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2232: in _wrap_pool_connect
    e, dialect, self
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1528: in _handle_dbapi_exception_noconnection
    util.raise_from_cause(sqlalchemy_exception, exc_info)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: in _wrap_pool_connect
    return fn()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: in connect
    return _ConnectionFairy._checkout(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: in _checkout
    fairy = _ConnectionRecord.checkout(pool)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: in checkout
    rec = pool._do_get()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: in _do_get
    self._dec_overflow()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: in _do_get
    return self._create_connection()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: in _create_connection
    return _ConnectionRecord(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: in __init__
    self.__connect(first_connect_check=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: in __connect
    pool.dispatch.connect(self.connection, self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: in __call__
    fn(*args, **kw)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8cfeae638; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cfa6c470>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       sqlalchemy.exc.ProgrammingError: (psycopg2.ProgrammingError) syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^
E        (Background on this error at: http://sqlalche.me/e/f405)

../invenio-db/invenio_db/shared.py:116: ProgrammingError
__________________ ERROR at setup of test_update_records_sets __________________

self = Engine(postgresql+psycopg2://invenio:***@postgresql:5432/postgres)
fn = <bound method Pool.connect of <sqlalchemy.pool.QueuePool object at 0x7fd8cfbb7128>>
connection = None

    def _wrap_pool_connect(self, fn, connection):
        dialect = self.dialect
        try:
>           return fn()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cfbb7128>

    def connect(self):
        """Return a DBAPI connection from the pool.
    
        The connection is instrumented such that when its
        ``close()`` method is called, the connection will be returned to
        the pool.
    
        """
        if not self._use_threadlocal:
>           return _ConnectionFairy._checkout(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionFairy'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cfbb7128>, threadconns = None
fairy = None

    @classmethod
    def _checkout(cls, pool, threadconns=None, fairy=None):
        if not fairy:
>           fairy = _ConnectionRecord.checkout(pool)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionRecord'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cfbb7128>

    @classmethod
    def checkout(cls, pool):
>       rec = pool._do_get()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cfbb7128>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
                return self._create_connection()
            except:
                with util.safe_reraise():
>                   self._dec_overflow()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.util.langhelpers.safe_reraise object at 0x7fd8cfbb7c50>
type_ = None, value = None, traceback = None

    def __exit__(self, type_, value, traceback):
        # see #2703 for notes
        if type_ is None:
            exc_type, exc_value, exc_tb = self._exc_info
            self._exc_info = None  # remove potential circular references
            if not self.warn_only:
>               compat.reraise(exc_type, exc_value, exc_tb)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

tp = <class 'psycopg2.ProgrammingError'>
value = ProgrammingError('syntax error at or near "PRAGMA"\nLINE 1: PRAGMA foreign_keys=ON\n        ^\n',)
tb = <traceback object at 0x7fd8cfbbe688>, cause = None

    def reraise(tp, value, tb=None, cause=None):
        if cause is not None:
            assert cause is not value, "Same cause emitted"
            value.__cause__ = cause
        if value.__traceback__ is not tb:
            raise value.with_traceback(tb)
>       raise value

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cfbb7128>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
>               return self._create_connection()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cfbb7128>

    def _create_connection(self):
        """Called by subclasses to create a new ConnectionRecord."""
    
>       return _ConnectionRecord(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cfbb72e8>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cfbb7128>, connect = True

    def __init__(self, pool, connect=True):
        self.__pool = pool
        if connect:
>           self.__connect(first_connect_check=True)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cfbb72e8>
first_connect_check = True

    def __connect(self, first_connect_check=False):
        pool = self.__pool
    
        # ensure any existing connection is removed, so that if
        # creator fails, this attribute stays None
        self.connection = None
        try:
            self.starttime = time.time()
            connection = pool._invoke_creator(self)
            pool.logger.debug("Created new connection %r", connection)
            self.connection = connection
        except Exception as e:
            pool.logger.debug("Error on connect(): %s", e)
            raise
        else:
            if first_connect_check:
                pool.dispatch.first_connect.for_modify(
                    pool.dispatch
                ).exec_once(self.connection, self)
            if pool.dispatch.connect:
>               pool.dispatch.connect(self.connection, self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.event.attr._ListenerCollection object at 0x7fd8cfbda3c8>
args = (<connection object at 0x7fd8cfeae768; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>, <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cfbb72e8>)
kw = {}, fn = <function do_sqlite_connect at 0x7fd8fe856d08>

    def __call__(self, *args, **kw):
        """Execute this event."""
    
        for fn in self.parent_listeners:
>           fn(*args, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8cfeae768; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cfbb72e8>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       psycopg2.ProgrammingError: syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^

../invenio-db/invenio_db/shared.py:116: ProgrammingError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.yield_fixture()
    def db(app):
        """Database fixture."""
>       if not database_exists(str(db_.engine.url)):

tests/conftest.py:136: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:484: in database_exists
    return bool(get_scalar_result(engine, text))
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:458: in get_scalar_result
    result_proxy = engine.execute(sql)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2143: in execute
    connection = self.contextual_connect(close_with_result=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2192: in contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2232: in _wrap_pool_connect
    e, dialect, self
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1528: in _handle_dbapi_exception_noconnection
    util.raise_from_cause(sqlalchemy_exception, exc_info)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: in _wrap_pool_connect
    return fn()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: in connect
    return _ConnectionFairy._checkout(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: in _checkout
    fairy = _ConnectionRecord.checkout(pool)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: in checkout
    rec = pool._do_get()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: in _do_get
    self._dec_overflow()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: in _do_get
    return self._create_connection()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: in _create_connection
    return _ConnectionRecord(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: in __init__
    self.__connect(first_connect_check=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: in __connect
    pool.dispatch.connect(self.connection, self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: in __call__
    fn(*args, **kw)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8cfeae768; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cfbb72e8>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       sqlalchemy.exc.ProgrammingError: (psycopg2.ProgrammingError) syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^
E        (Background on this error at: http://sqlalche.me/e/f405)

../invenio-db/invenio_db/shared.py:116: ProgrammingError
________________ ERROR at setup of test_update_affected_records ________________

self = Engine(postgresql+psycopg2://invenio:***@postgresql:5432/postgres)
fn = <bound method Pool.connect of <sqlalchemy.pool.QueuePool object at 0x7fd8cfdc1748>>
connection = None

    def _wrap_pool_connect(self, fn, connection):
        dialect = self.dialect
        try:
>           return fn()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cfdc1748>

    def connect(self):
        """Return a DBAPI connection from the pool.
    
        The connection is instrumented such that when its
        ``close()`` method is called, the connection will be returned to
        the pool.
    
        """
        if not self._use_threadlocal:
>           return _ConnectionFairy._checkout(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionFairy'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cfdc1748>, threadconns = None
fairy = None

    @classmethod
    def _checkout(cls, pool, threadconns=None, fairy=None):
        if not fairy:
>           fairy = _ConnectionRecord.checkout(pool)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionRecord'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cfdc1748>

    @classmethod
    def checkout(cls, pool):
>       rec = pool._do_get()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cfdc1748>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
                return self._create_connection()
            except:
                with util.safe_reraise():
>                   self._dec_overflow()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.util.langhelpers.safe_reraise object at 0x7fd8cfdc1940>
type_ = None, value = None, traceback = None

    def __exit__(self, type_, value, traceback):
        # see #2703 for notes
        if type_ is None:
            exc_type, exc_value, exc_tb = self._exc_info
            self._exc_info = None  # remove potential circular references
            if not self.warn_only:
>               compat.reraise(exc_type, exc_value, exc_tb)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

tp = <class 'psycopg2.ProgrammingError'>
value = ProgrammingError('syntax error at or near "PRAGMA"\nLINE 1: PRAGMA foreign_keys=ON\n        ^\n',)
tb = <traceback object at 0x7fd8cfdc0c08>, cause = None

    def reraise(tp, value, tb=None, cause=None):
        if cause is not None:
            assert cause is not value, "Same cause emitted"
            value.__cause__ = cause
        if value.__traceback__ is not tb:
            raise value.with_traceback(tb)
>       raise value

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cfdc1748>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
>               return self._create_connection()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cfdc1748>

    def _create_connection(self):
        """Called by subclasses to create a new ConnectionRecord."""
    
>       return _ConnectionRecord(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cfdc1908>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cfdc1748>, connect = True

    def __init__(self, pool, connect=True):
        self.__pool = pool
        if connect:
>           self.__connect(first_connect_check=True)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cfdc1908>
first_connect_check = True

    def __connect(self, first_connect_check=False):
        pool = self.__pool
    
        # ensure any existing connection is removed, so that if
        # creator fails, this attribute stays None
        self.connection = None
        try:
            self.starttime = time.time()
            connection = pool._invoke_creator(self)
            pool.logger.debug("Created new connection %r", connection)
            self.connection = connection
        except Exception as e:
            pool.logger.debug("Error on connect(): %s", e)
            raise
        else:
            if first_connect_check:
                pool.dispatch.first_connect.for_modify(
                    pool.dispatch
                ).exec_once(self.connection, self)
            if pool.dispatch.connect:
>               pool.dispatch.connect(self.connection, self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.event.attr._ListenerCollection object at 0x7fd8cfab7358>
args = (<connection object at 0x7fd8cfeae898; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>, <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cfdc1908>)
kw = {}, fn = <function do_sqlite_connect at 0x7fd8fe856d08>

    def __call__(self, *args, **kw):
        """Execute this event."""
    
        for fn in self.parent_listeners:
>           fn(*args, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8cfeae898; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cfdc1908>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       psycopg2.ProgrammingError: syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^

../invenio-db/invenio_db/shared.py:116: ProgrammingError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.yield_fixture()
    def db(app):
        """Database fixture."""
>       if not database_exists(str(db_.engine.url)):

tests/conftest.py:136: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:484: in database_exists
    return bool(get_scalar_result(engine, text))
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:458: in get_scalar_result
    result_proxy = engine.execute(sql)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2143: in execute
    connection = self.contextual_connect(close_with_result=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2192: in contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2232: in _wrap_pool_connect
    e, dialect, self
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1528: in _handle_dbapi_exception_noconnection
    util.raise_from_cause(sqlalchemy_exception, exc_info)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: in _wrap_pool_connect
    return fn()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: in connect
    return _ConnectionFairy._checkout(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: in _checkout
    fairy = _ConnectionRecord.checkout(pool)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: in checkout
    rec = pool._do_get()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: in _do_get
    self._dec_overflow()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: in _do_get
    return self._create_connection()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: in _create_connection
    return _ConnectionRecord(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: in __init__
    self.__connect(first_connect_check=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: in __connect
    pool.dispatch.connect(self.connection, self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: in __call__
    fn(*args, **kw)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8cfeae898; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cfdc1908>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       sqlalchemy.exc.ProgrammingError: (psycopg2.ProgrammingError) syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^
E        (Background on this error at: http://sqlalche.me/e/f405)

../invenio-db/invenio_db/shared.py:116: ProgrammingError
______________________ ERROR at setup of test_serializer _______________________
file /code/modules/invenio-oaiserver/tests/test_utils.py, line 27
  def test_serializer(app,mocker):
E       fixture 'mocker' not found
>       available fixtures: app, authority_data, base_app, bibliographic_data, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, celery_app, celery_config, celery_enable_logging, celery_includes, celery_parameters, celery_session_app, celery_session_worker, celery_worker, celery_worker_parameters, celery_worker_pool, client, cov, db, depends_on_current_app, doctest_namespace, es_app, identify, indexes, instance_path, item_type, mock_execute, monkeypatch, no_cover, oaiset, pytestconfig, record_property, record_xml_attribute, records, recwarn, schema, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, use_celery_app_trap, users, without_oaiset_signals
>       use 'pytest --fixtures [testpath]' for help on them.

/code/modules/invenio-oaiserver/tests/test_utils.py:27
______________________ ERROR at setup of test_dumps_etree ______________________

self = Engine(postgresql+psycopg2://invenio:***@postgresql:5432/postgres)
fn = <bound method Pool.connect of <sqlalchemy.pool.QueuePool object at 0x7fd8cfb594a8>>
connection = None

    def _wrap_pool_connect(self, fn, connection):
        dialect = self.dialect
        try:
>           return fn()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cfb594a8>

    def connect(self):
        """Return a DBAPI connection from the pool.
    
        The connection is instrumented such that when its
        ``close()`` method is called, the connection will be returned to
        the pool.
    
        """
        if not self._use_threadlocal:
>           return _ConnectionFairy._checkout(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionFairy'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cfb594a8>, threadconns = None
fairy = None

    @classmethod
    def _checkout(cls, pool, threadconns=None, fairy=None):
        if not fairy:
>           fairy = _ConnectionRecord.checkout(pool)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionRecord'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cfb594a8>

    @classmethod
    def checkout(cls, pool):
>       rec = pool._do_get()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cfb594a8>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
                return self._create_connection()
            except:
                with util.safe_reraise():
>                   self._dec_overflow()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.util.langhelpers.safe_reraise object at 0x7fd8cfb599e8>
type_ = None, value = None, traceback = None

    def __exit__(self, type_, value, traceback):
        # see #2703 for notes
        if type_ is None:
            exc_type, exc_value, exc_tb = self._exc_info
            self._exc_info = None  # remove potential circular references
            if not self.warn_only:
>               compat.reraise(exc_type, exc_value, exc_tb)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

tp = <class 'psycopg2.ProgrammingError'>
value = ProgrammingError('syntax error at or near "PRAGMA"\nLINE 1: PRAGMA foreign_keys=ON\n        ^\n',)
tb = <traceback object at 0x7fd8cfb6a108>, cause = None

    def reraise(tp, value, tb=None, cause=None):
        if cause is not None:
            assert cause is not value, "Same cause emitted"
            value.__cause__ = cause
        if value.__traceback__ is not tb:
            raise value.with_traceback(tb)
>       raise value

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cfb594a8>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
>               return self._create_connection()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cfb594a8>

    def _create_connection(self):
        """Called by subclasses to create a new ConnectionRecord."""
    
>       return _ConnectionRecord(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cfb59630>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cfb594a8>, connect = True

    def __init__(self, pool, connect=True):
        self.__pool = pool
        if connect:
>           self.__connect(first_connect_check=True)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cfb59630>
first_connect_check = True

    def __connect(self, first_connect_check=False):
        pool = self.__pool
    
        # ensure any existing connection is removed, so that if
        # creator fails, this attribute stays None
        self.connection = None
        try:
            self.starttime = time.time()
            connection = pool._invoke_creator(self)
            pool.logger.debug("Created new connection %r", connection)
            self.connection = connection
        except Exception as e:
            pool.logger.debug("Error on connect(): %s", e)
            raise
        else:
            if first_connect_check:
                pool.dispatch.first_connect.for_modify(
                    pool.dispatch
                ).exec_once(self.connection, self)
            if pool.dispatch.connect:
>               pool.dispatch.connect(self.connection, self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.event.attr._ListenerCollection object at 0x7fd8cfaef358>
args = (<connection object at 0x7fd8cfeae9c8; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>, <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cfb59630>)
kw = {}, fn = <function do_sqlite_connect at 0x7fd8fe856d08>

    def __call__(self, *args, **kw):
        """Execute this event."""
    
        for fn in self.parent_listeners:
>           fn(*args, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8cfeae9c8; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cfb59630>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       psycopg2.ProgrammingError: syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^

../invenio-db/invenio_db/shared.py:116: ProgrammingError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.yield_fixture()
    def db(app):
        """Database fixture."""
>       if not database_exists(str(db_.engine.url)):

tests/conftest.py:136: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:484: in database_exists
    return bool(get_scalar_result(engine, text))
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:458: in get_scalar_result
    result_proxy = engine.execute(sql)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2143: in execute
    connection = self.contextual_connect(close_with_result=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2192: in contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2232: in _wrap_pool_connect
    e, dialect, self
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1528: in _handle_dbapi_exception_noconnection
    util.raise_from_cause(sqlalchemy_exception, exc_info)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: in _wrap_pool_connect
    return fn()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: in connect
    return _ConnectionFairy._checkout(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: in _checkout
    fairy = _ConnectionRecord.checkout(pool)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: in checkout
    rec = pool._do_get()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: in _do_get
    self._dec_overflow()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: in _do_get
    return self._create_connection()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: in _create_connection
    return _ConnectionRecord(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: in __init__
    self.__connect(first_connect_check=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: in __connect
    pool.dispatch.connect(self.connection, self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: in __call__
    fn(*args, **kw)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8cfeae9c8; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cfb59630>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       sqlalchemy.exc.ProgrammingError: (psycopg2.ProgrammingError) syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^
E        (Background on this error at: http://sqlalche.me/e/f405)

../invenio-db/invenio_db/shared.py:116: ProgrammingError
____________________ ERROR at setup of test_get_index_state ____________________

self = Engine(postgresql+psycopg2://invenio:***@postgresql:5432/postgres)
fn = <bound method Pool.connect of <sqlalchemy.pool.QueuePool object at 0x7fd8cf944630>>
connection = None

    def _wrap_pool_connect(self, fn, connection):
        dialect = self.dialect
        try:
>           return fn()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cf944630>

    def connect(self):
        """Return a DBAPI connection from the pool.
    
        The connection is instrumented such that when its
        ``close()`` method is called, the connection will be returned to
        the pool.
    
        """
        if not self._use_threadlocal:
>           return _ConnectionFairy._checkout(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionFairy'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cf944630>, threadconns = None
fairy = None

    @classmethod
    def _checkout(cls, pool, threadconns=None, fairy=None):
        if not fairy:
>           fairy = _ConnectionRecord.checkout(pool)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionRecord'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cf944630>

    @classmethod
    def checkout(cls, pool):
>       rec = pool._do_get()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cf944630>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
                return self._create_connection()
            except:
                with util.safe_reraise():
>                   self._dec_overflow()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.util.langhelpers.safe_reraise object at 0x7fd8cf948160>
type_ = None, value = None, traceback = None

    def __exit__(self, type_, value, traceback):
        # see #2703 for notes
        if type_ is None:
            exc_type, exc_value, exc_tb = self._exc_info
            self._exc_info = None  # remove potential circular references
            if not self.warn_only:
>               compat.reraise(exc_type, exc_value, exc_tb)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

tp = <class 'psycopg2.ProgrammingError'>
value = ProgrammingError('syntax error at or near "PRAGMA"\nLINE 1: PRAGMA foreign_keys=ON\n        ^\n',)
tb = <traceback object at 0x7fd8cfd2d848>, cause = None

    def reraise(tp, value, tb=None, cause=None):
        if cause is not None:
            assert cause is not value, "Same cause emitted"
            value.__cause__ = cause
        if value.__traceback__ is not tb:
            raise value.with_traceback(tb)
>       raise value

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cf944630>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
>               return self._create_connection()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cf944630>

    def _create_connection(self):
        """Called by subclasses to create a new ConnectionRecord."""
    
>       return _ConnectionRecord(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cf9447f0>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cf944630>, connect = True

    def __init__(self, pool, connect=True):
        self.__pool = pool
        if connect:
>           self.__connect(first_connect_check=True)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cf9447f0>
first_connect_check = True

    def __connect(self, first_connect_check=False):
        pool = self.__pool
    
        # ensure any existing connection is removed, so that if
        # creator fails, this attribute stays None
        self.connection = None
        try:
            self.starttime = time.time()
            connection = pool._invoke_creator(self)
            pool.logger.debug("Created new connection %r", connection)
            self.connection = connection
        except Exception as e:
            pool.logger.debug("Error on connect(): %s", e)
            raise
        else:
            if first_connect_check:
                pool.dispatch.first_connect.for_modify(
                    pool.dispatch
                ).exec_once(self.connection, self)
            if pool.dispatch.connect:
>               pool.dispatch.connect(self.connection, self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.event.attr._ListenerCollection object at 0x7fd8cf85b898>
args = (<connection object at 0x7fd8cfeaeaf8; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>, <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cf9447f0>)
kw = {}, fn = <function do_sqlite_connect at 0x7fd8fe856d08>

    def __call__(self, *args, **kw):
        """Execute this event."""
    
        for fn in self.parent_listeners:
>           fn(*args, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8cfeaeaf8; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cf9447f0>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       psycopg2.ProgrammingError: syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^

../invenio-db/invenio_db/shared.py:116: ProgrammingError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.yield_fixture()
    def db(app):
        """Database fixture."""
>       if not database_exists(str(db_.engine.url)):

tests/conftest.py:136: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:484: in database_exists
    return bool(get_scalar_result(engine, text))
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:458: in get_scalar_result
    result_proxy = engine.execute(sql)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2143: in execute
    connection = self.contextual_connect(close_with_result=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2192: in contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2232: in _wrap_pool_connect
    e, dialect, self
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1528: in _handle_dbapi_exception_noconnection
    util.raise_from_cause(sqlalchemy_exception, exc_info)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: in _wrap_pool_connect
    return fn()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: in connect
    return _ConnectionFairy._checkout(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: in _checkout
    fairy = _ConnectionRecord.checkout(pool)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: in checkout
    rec = pool._do_get()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: in _do_get
    self._dec_overflow()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: in _do_get
    return self._create_connection()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: in _create_connection
    return _ConnectionRecord(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: in __init__
    self.__connect(first_connect_check=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: in __connect
    pool.dispatch.connect(self.connection, self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: in __call__
    fn(*args, **kw)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8cfeaeaf8; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cf9447f0>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       sqlalchemy.exc.ProgrammingError: (psycopg2.ProgrammingError) syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^
E        (Background on this error at: http://sqlalche.me/e/f405)

../invenio-db/invenio_db/shared.py:116: ProgrammingError
_______________________ ERROR at setup of test_identify ________________________

self = Engine(postgresql+psycopg2://invenio:***@postgresql:5432/postgres)
fn = <bound method Pool.connect of <sqlalchemy.pool.QueuePool object at 0x7fd8cf819c50>>
connection = None

    def _wrap_pool_connect(self, fn, connection):
        dialect = self.dialect
        try:
>           return fn()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cf819c50>

    def connect(self):
        """Return a DBAPI connection from the pool.
    
        The connection is instrumented such that when its
        ``close()`` method is called, the connection will be returned to
        the pool.
    
        """
        if not self._use_threadlocal:
>           return _ConnectionFairy._checkout(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionFairy'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cf819c50>, threadconns = None
fairy = None

    @classmethod
    def _checkout(cls, pool, threadconns=None, fairy=None):
        if not fairy:
>           fairy = _ConnectionRecord.checkout(pool)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionRecord'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cf819c50>

    @classmethod
    def checkout(cls, pool):
>       rec = pool._do_get()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cf819c50>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
                return self._create_connection()
            except:
                with util.safe_reraise():
>                   self._dec_overflow()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.util.langhelpers.safe_reraise object at 0x7fd8cf816208>
type_ = None, value = None, traceback = None

    def __exit__(self, type_, value, traceback):
        # see #2703 for notes
        if type_ is None:
            exc_type, exc_value, exc_tb = self._exc_info
            self._exc_info = None  # remove potential circular references
            if not self.warn_only:
>               compat.reraise(exc_type, exc_value, exc_tb)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

tp = <class 'psycopg2.ProgrammingError'>
value = ProgrammingError('syntax error at or near "PRAGMA"\nLINE 1: PRAGMA foreign_keys=ON\n        ^\n',)
tb = <traceback object at 0x7fd8cf812508>, cause = None

    def reraise(tp, value, tb=None, cause=None):
        if cause is not None:
            assert cause is not value, "Same cause emitted"
            value.__cause__ = cause
        if value.__traceback__ is not tb:
            raise value.with_traceback(tb)
>       raise value

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cf819c50>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
>               return self._create_connection()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cf819c50>

    def _create_connection(self):
        """Called by subclasses to create a new ConnectionRecord."""
    
>       return _ConnectionRecord(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cf819e10>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cf819c50>, connect = True

    def __init__(self, pool, connect=True):
        self.__pool = pool
        if connect:
>           self.__connect(first_connect_check=True)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cf819e10>
first_connect_check = True

    def __connect(self, first_connect_check=False):
        pool = self.__pool
    
        # ensure any existing connection is removed, so that if
        # creator fails, this attribute stays None
        self.connection = None
        try:
            self.starttime = time.time()
            connection = pool._invoke_creator(self)
            pool.logger.debug("Created new connection %r", connection)
            self.connection = connection
        except Exception as e:
            pool.logger.debug("Error on connect(): %s", e)
            raise
        else:
            if first_connect_check:
                pool.dispatch.first_connect.for_modify(
                    pool.dispatch
                ).exec_once(self.connection, self)
            if pool.dispatch.connect:
>               pool.dispatch.connect(self.connection, self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.event.attr._ListenerCollection object at 0x7fd8cf9b55f8>
args = (<connection object at 0x7fd8cfeaec28; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>, <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cf819e10>)
kw = {}, fn = <function do_sqlite_connect at 0x7fd8fe856d08>

    def __call__(self, *args, **kw):
        """Execute this event."""
    
        for fn in self.parent_listeners:
>           fn(*args, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8cfeaec28; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cf819e10>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       psycopg2.ProgrammingError: syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^

../invenio-db/invenio_db/shared.py:116: ProgrammingError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.yield_fixture()
    def db(app):
        """Database fixture."""
>       if not database_exists(str(db_.engine.url)):

tests/conftest.py:136: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:484: in database_exists
    return bool(get_scalar_result(engine, text))
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:458: in get_scalar_result
    result_proxy = engine.execute(sql)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2143: in execute
    connection = self.contextual_connect(close_with_result=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2192: in contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2232: in _wrap_pool_connect
    e, dialect, self
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1528: in _handle_dbapi_exception_noconnection
    util.raise_from_cause(sqlalchemy_exception, exc_info)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: in _wrap_pool_connect
    return fn()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: in connect
    return _ConnectionFairy._checkout(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: in _checkout
    fairy = _ConnectionRecord.checkout(pool)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: in checkout
    rec = pool._do_get()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: in _do_get
    self._dec_overflow()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: in _do_get
    return self._create_connection()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: in _create_connection
    return _ConnectionRecord(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: in __init__
    self.__connect(first_connect_check=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: in __connect
    pool.dispatch.connect(self.connection, self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: in __call__
    fn(*args, **kw)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8cfeaec28; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cf819e10>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       sqlalchemy.exc.ProgrammingError: (psycopg2.ProgrammingError) syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^
E        (Background on this error at: http://sqlalche.me/e/f405)

../invenio-db/invenio_db/shared.py:116: ProgrammingError
____________________ ERROR at setup of test_getrecord_fail _____________________

self = Engine(postgresql+psycopg2://invenio:***@postgresql:5432/postgres)
fn = <bound method Pool.connect of <sqlalchemy.pool.QueuePool object at 0x7fd8cf67c2b0>>
connection = None

    def _wrap_pool_connect(self, fn, connection):
        dialect = self.dialect
        try:
>           return fn()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cf67c2b0>

    def connect(self):
        """Return a DBAPI connection from the pool.
    
        The connection is instrumented such that when its
        ``close()`` method is called, the connection will be returned to
        the pool.
    
        """
        if not self._use_threadlocal:
>           return _ConnectionFairy._checkout(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionFairy'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cf67c2b0>, threadconns = None
fairy = None

    @classmethod
    def _checkout(cls, pool, threadconns=None, fairy=None):
        if not fairy:
>           fairy = _ConnectionRecord.checkout(pool)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionRecord'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cf67c2b0>

    @classmethod
    def checkout(cls, pool):
>       rec = pool._do_get()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cf67c2b0>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
                return self._create_connection()
            except:
                with util.safe_reraise():
>                   self._dec_overflow()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.util.langhelpers.safe_reraise object at 0x7fd8cf9f47b8>
type_ = None, value = None, traceback = None

    def __exit__(self, type_, value, traceback):
        # see #2703 for notes
        if type_ is None:
            exc_type, exc_value, exc_tb = self._exc_info
            self._exc_info = None  # remove potential circular references
            if not self.warn_only:
>               compat.reraise(exc_type, exc_value, exc_tb)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

tp = <class 'psycopg2.ProgrammingError'>
value = ProgrammingError('syntax error at or near "PRAGMA"\nLINE 1: PRAGMA foreign_keys=ON\n        ^\n',)
tb = <traceback object at 0x7fd8cfa30f08>, cause = None

    def reraise(tp, value, tb=None, cause=None):
        if cause is not None:
            assert cause is not value, "Same cause emitted"
            value.__cause__ = cause
        if value.__traceback__ is not tb:
            raise value.with_traceback(tb)
>       raise value

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cf67c2b0>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
>               return self._create_connection()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cf67c2b0>

    def _create_connection(self):
        """Called by subclasses to create a new ConnectionRecord."""
    
>       return _ConnectionRecord(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cfa18908>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cf67c2b0>, connect = True

    def __init__(self, pool, connect=True):
        self.__pool = pool
        if connect:
>           self.__connect(first_connect_check=True)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cfa18908>
first_connect_check = True

    def __connect(self, first_connect_check=False):
        pool = self.__pool
    
        # ensure any existing connection is removed, so that if
        # creator fails, this attribute stays None
        self.connection = None
        try:
            self.starttime = time.time()
            connection = pool._invoke_creator(self)
            pool.logger.debug("Created new connection %r", connection)
            self.connection = connection
        except Exception as e:
            pool.logger.debug("Error on connect(): %s", e)
            raise
        else:
            if first_connect_check:
                pool.dispatch.first_connect.for_modify(
                    pool.dispatch
                ).exec_once(self.connection, self)
            if pool.dispatch.connect:
>               pool.dispatch.connect(self.connection, self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.event.attr._ListenerCollection object at 0x7fd8cf9b5828>
args = (<connection object at 0x7fd8cfeaed58; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>, <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cfa18908>)
kw = {}, fn = <function do_sqlite_connect at 0x7fd8fe856d08>

    def __call__(self, *args, **kw):
        """Execute this event."""
    
        for fn in self.parent_listeners:
>           fn(*args, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8cfeaed58; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cfa18908>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       psycopg2.ProgrammingError: syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^

../invenio-db/invenio_db/shared.py:116: ProgrammingError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.yield_fixture()
    def db(app):
        """Database fixture."""
>       if not database_exists(str(db_.engine.url)):

tests/conftest.py:136: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:484: in database_exists
    return bool(get_scalar_result(engine, text))
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:458: in get_scalar_result
    result_proxy = engine.execute(sql)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2143: in execute
    connection = self.contextual_connect(close_with_result=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2192: in contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2232: in _wrap_pool_connect
    e, dialect, self
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1528: in _handle_dbapi_exception_noconnection
    util.raise_from_cause(sqlalchemy_exception, exc_info)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: in _wrap_pool_connect
    return fn()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: in connect
    return _ConnectionFairy._checkout(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: in _checkout
    fairy = _ConnectionRecord.checkout(pool)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: in checkout
    rec = pool._do_get()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: in _do_get
    self._dec_overflow()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: in _do_get
    return self._create_connection()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: in _create_connection
    return _ConnectionRecord(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: in __init__
    self.__connect(first_connect_check=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: in __connect
    pool.dispatch.connect(self.connection, self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: in __call__
    fn(*args, **kw)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8cfeaed58; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cfa18908>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       sqlalchemy.exc.ProgrammingError: (psycopg2.ProgrammingError) syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^
E        (Background on this error at: http://sqlalche.me/e/f405)

../invenio-db/invenio_db/shared.py:116: ProgrammingError
______________ ERROR at setup of test_listmetadataformats_record _______________

self = Engine(postgresql+psycopg2://invenio:***@postgresql:5432/postgres)
fn = <bound method Pool.connect of <sqlalchemy.pool.QueuePool object at 0x7fd8cf599400>>
connection = None

    def _wrap_pool_connect(self, fn, connection):
        dialect = self.dialect
        try:
>           return fn()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cf599400>

    def connect(self):
        """Return a DBAPI connection from the pool.
    
        The connection is instrumented such that when its
        ``close()`` method is called, the connection will be returned to
        the pool.
    
        """
        if not self._use_threadlocal:
>           return _ConnectionFairy._checkout(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionFairy'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cf599400>, threadconns = None
fairy = None

    @classmethod
    def _checkout(cls, pool, threadconns=None, fairy=None):
        if not fairy:
>           fairy = _ConnectionRecord.checkout(pool)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionRecord'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cf599400>

    @classmethod
    def checkout(cls, pool):
>       rec = pool._do_get()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cf599400>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
                return self._create_connection()
            except:
                with util.safe_reraise():
>                   self._dec_overflow()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.util.langhelpers.safe_reraise object at 0x7fd8cf8be550>
type_ = None, value = None, traceback = None

    def __exit__(self, type_, value, traceback):
        # see #2703 for notes
        if type_ is None:
            exc_type, exc_value, exc_tb = self._exc_info
            self._exc_info = None  # remove potential circular references
            if not self.warn_only:
>               compat.reraise(exc_type, exc_value, exc_tb)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

tp = <class 'psycopg2.ProgrammingError'>
value = ProgrammingError('syntax error at or near "PRAGMA"\nLINE 1: PRAGMA foreign_keys=ON\n        ^\n',)
tb = <traceback object at 0x7fd8cf8bc948>, cause = None

    def reraise(tp, value, tb=None, cause=None):
        if cause is not None:
            assert cause is not value, "Same cause emitted"
            value.__cause__ = cause
        if value.__traceback__ is not tb:
            raise value.with_traceback(tb)
>       raise value

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cf599400>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
>               return self._create_connection()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cf599400>

    def _create_connection(self):
        """Called by subclasses to create a new ConnectionRecord."""
    
>       return _ConnectionRecord(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cf8cefd0>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cf599400>, connect = True

    def __init__(self, pool, connect=True):
        self.__pool = pool
        if connect:
>           self.__connect(first_connect_check=True)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cf8cefd0>
first_connect_check = True

    def __connect(self, first_connect_check=False):
        pool = self.__pool
    
        # ensure any existing connection is removed, so that if
        # creator fails, this attribute stays None
        self.connection = None
        try:
            self.starttime = time.time()
            connection = pool._invoke_creator(self)
            pool.logger.debug("Created new connection %r", connection)
            self.connection = connection
        except Exception as e:
            pool.logger.debug("Error on connect(): %s", e)
            raise
        else:
            if first_connect_check:
                pool.dispatch.first_connect.for_modify(
                    pool.dispatch
                ).exec_once(self.connection, self)
            if pool.dispatch.connect:
>               pool.dispatch.connect(self.connection, self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.event.attr._ListenerCollection object at 0x7fd8cf8c9198>
args = (<connection object at 0x7fd8cfeaee88; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>, <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cf8cefd0>)
kw = {}, fn = <function do_sqlite_connect at 0x7fd8fe856d08>

    def __call__(self, *args, **kw):
        """Execute this event."""
    
        for fn in self.parent_listeners:
>           fn(*args, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8cfeaee88; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cf8cefd0>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       psycopg2.ProgrammingError: syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^

../invenio-db/invenio_db/shared.py:116: ProgrammingError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.yield_fixture()
    def db(app):
        """Database fixture."""
>       if not database_exists(str(db_.engine.url)):

tests/conftest.py:136: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:484: in database_exists
    return bool(get_scalar_result(engine, text))
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:458: in get_scalar_result
    result_proxy = engine.execute(sql)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2143: in execute
    connection = self.contextual_connect(close_with_result=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2192: in contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2232: in _wrap_pool_connect
    e, dialect, self
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1528: in _handle_dbapi_exception_noconnection
    util.raise_from_cause(sqlalchemy_exception, exc_info)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: in _wrap_pool_connect
    return fn()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: in connect
    return _ConnectionFairy._checkout(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: in _checkout
    fairy = _ConnectionRecord.checkout(pool)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: in checkout
    rec = pool._do_get()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: in _do_get
    self._dec_overflow()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: in _do_get
    return self._create_connection()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: in _create_connection
    return _ConnectionRecord(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: in __init__
    self.__connect(first_connect_check=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: in __connect
    pool.dispatch.connect(self.connection, self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: in __call__
    fn(*args, **kw)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8cfeaee88; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cf8cefd0>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       sqlalchemy.exc.ProgrammingError: (psycopg2.ProgrammingError) syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^
E        (Background on this error at: http://sqlalche.me/e/f405)

../invenio-db/invenio_db/shared.py:116: ProgrammingError
____________ ERROR at setup of test_listmetadataformats_record_fail ____________

self = Engine(postgresql+psycopg2://invenio:***@postgresql:5432/postgres)
fn = <bound method Pool.connect of <sqlalchemy.pool.QueuePool object at 0x7fd8cf6b5a20>>
connection = None

    def _wrap_pool_connect(self, fn, connection):
        dialect = self.dialect
        try:
>           return fn()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cf6b5a20>

    def connect(self):
        """Return a DBAPI connection from the pool.
    
        The connection is instrumented such that when its
        ``close()`` method is called, the connection will be returned to
        the pool.
    
        """
        if not self._use_threadlocal:
>           return _ConnectionFairy._checkout(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionFairy'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cf6b5a20>, threadconns = None
fairy = None

    @classmethod
    def _checkout(cls, pool, threadconns=None, fairy=None):
        if not fairy:
>           fairy = _ConnectionRecord.checkout(pool)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionRecord'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cf6b5a20>

    @classmethod
    def checkout(cls, pool):
>       rec = pool._do_get()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cf6b5a20>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
                return self._create_connection()
            except:
                with util.safe_reraise():
>                   self._dec_overflow()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.util.langhelpers.safe_reraise object at 0x7fd8cf4476d8>
type_ = None, value = None, traceback = None

    def __exit__(self, type_, value, traceback):
        # see #2703 for notes
        if type_ is None:
            exc_type, exc_value, exc_tb = self._exc_info
            self._exc_info = None  # remove potential circular references
            if not self.warn_only:
>               compat.reraise(exc_type, exc_value, exc_tb)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

tp = <class 'psycopg2.ProgrammingError'>
value = ProgrammingError('syntax error at or near "PRAGMA"\nLINE 1: PRAGMA foreign_keys=ON\n        ^\n',)
tb = <traceback object at 0x7fd8cf7c43c8>, cause = None

    def reraise(tp, value, tb=None, cause=None):
        if cause is not None:
            assert cause is not value, "Same cause emitted"
            value.__cause__ = cause
        if value.__traceback__ is not tb:
            raise value.with_traceback(tb)
>       raise value

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cf6b5a20>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
>               return self._create_connection()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cf6b5a20>

    def _create_connection(self):
        """Called by subclasses to create a new ConnectionRecord."""
    
>       return _ConnectionRecord(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cf6b56a0>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cf6b5a20>, connect = True

    def __init__(self, pool, connect=True):
        self.__pool = pool
        if connect:
>           self.__connect(first_connect_check=True)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cf6b56a0>
first_connect_check = True

    def __connect(self, first_connect_check=False):
        pool = self.__pool
    
        # ensure any existing connection is removed, so that if
        # creator fails, this attribute stays None
        self.connection = None
        try:
            self.starttime = time.time()
            connection = pool._invoke_creator(self)
            pool.logger.debug("Created new connection %r", connection)
            self.connection = connection
        except Exception as e:
            pool.logger.debug("Error on connect(): %s", e)
            raise
        else:
            if first_connect_check:
                pool.dispatch.first_connect.for_modify(
                    pool.dispatch
                ).exec_once(self.connection, self)
            if pool.dispatch.connect:
>               pool.dispatch.connect(self.connection, self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.event.attr._ListenerCollection object at 0x7fd8cf8c9ba8>
args = (<connection object at 0x7fd8cfeae2a8; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>, <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cf6b56a0>)
kw = {}, fn = <function do_sqlite_connect at 0x7fd8fe856d08>

    def __call__(self, *args, **kw):
        """Execute this event."""
    
        for fn in self.parent_listeners:
>           fn(*args, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8cfeae2a8; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cf6b56a0>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       psycopg2.ProgrammingError: syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^

../invenio-db/invenio_db/shared.py:116: ProgrammingError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.yield_fixture()
    def db(app):
        """Database fixture."""
>       if not database_exists(str(db_.engine.url)):

tests/conftest.py:136: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:484: in database_exists
    return bool(get_scalar_result(engine, text))
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:458: in get_scalar_result
    result_proxy = engine.execute(sql)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2143: in execute
    connection = self.contextual_connect(close_with_result=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2192: in contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2232: in _wrap_pool_connect
    e, dialect, self
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1528: in _handle_dbapi_exception_noconnection
    util.raise_from_cause(sqlalchemy_exception, exc_info)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: in _wrap_pool_connect
    return fn()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: in connect
    return _ConnectionFairy._checkout(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: in _checkout
    fairy = _ConnectionRecord.checkout(pool)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: in checkout
    rec = pool._do_get()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: in _do_get
    self._dec_overflow()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: in _do_get
    return self._create_connection()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: in _create_connection
    return _ConnectionRecord(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: in __init__
    self.__connect(first_connect_check=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: in __connect
    pool.dispatch.connect(self.connection, self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: in __call__
    fn(*args, **kw)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8cfeae2a8; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cf6b56a0>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       sqlalchemy.exc.ProgrammingError: (psycopg2.ProgrammingError) syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^
E        (Background on this error at: http://sqlalche.me/e/f405)

../invenio-db/invenio_db/shared.py:116: ProgrammingError
_______________________ ERROR at setup of test_listsets ________________________

self = Engine(postgresql+psycopg2://invenio:***@postgresql:5432/postgres)
fn = <bound method Pool.connect of <sqlalchemy.pool.QueuePool object at 0x7fd8cf4617f0>>
connection = None

    def _wrap_pool_connect(self, fn, connection):
        dialect = self.dialect
        try:
>           return fn()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cf4617f0>

    def connect(self):
        """Return a DBAPI connection from the pool.
    
        The connection is instrumented such that when its
        ``close()`` method is called, the connection will be returned to
        the pool.
    
        """
        if not self._use_threadlocal:
>           return _ConnectionFairy._checkout(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionFairy'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cf4617f0>, threadconns = None
fairy = None

    @classmethod
    def _checkout(cls, pool, threadconns=None, fairy=None):
        if not fairy:
>           fairy = _ConnectionRecord.checkout(pool)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionRecord'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cf4617f0>

    @classmethod
    def checkout(cls, pool):
>       rec = pool._do_get()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cf4617f0>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
                return self._create_connection()
            except:
                with util.safe_reraise():
>                   self._dec_overflow()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.util.langhelpers.safe_reraise object at 0x7fd8cf468198>
type_ = None, value = None, traceback = None

    def __exit__(self, type_, value, traceback):
        # see #2703 for notes
        if type_ is None:
            exc_type, exc_value, exc_tb = self._exc_info
            self._exc_info = None  # remove potential circular references
            if not self.warn_only:
>               compat.reraise(exc_type, exc_value, exc_tb)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

tp = <class 'psycopg2.ProgrammingError'>
value = ProgrammingError('syntax error at or near "PRAGMA"\nLINE 1: PRAGMA foreign_keys=ON\n        ^\n',)
tb = <traceback object at 0x7fd8cf5d3a48>, cause = None

    def reraise(tp, value, tb=None, cause=None):
        if cause is not None:
            assert cause is not value, "Same cause emitted"
            value.__cause__ = cause
        if value.__traceback__ is not tb:
            raise value.with_traceback(tb)
>       raise value

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cf4617f0>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
>               return self._create_connection()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cf4617f0>

    def _create_connection(self):
        """Called by subclasses to create a new ConnectionRecord."""
    
>       return _ConnectionRecord(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cf461240>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cf4617f0>, connect = True

    def __init__(self, pool, connect=True):
        self.__pool = pool
        if connect:
>           self.__connect(first_connect_check=True)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cf461240>
first_connect_check = True

    def __connect(self, first_connect_check=False):
        pool = self.__pool
    
        # ensure any existing connection is removed, so that if
        # creator fails, this attribute stays None
        self.connection = None
        try:
            self.starttime = time.time()
            connection = pool._invoke_creator(self)
            pool.logger.debug("Created new connection %r", connection)
            self.connection = connection
        except Exception as e:
            pool.logger.debug("Error on connect(): %s", e)
            raise
        else:
            if first_connect_check:
                pool.dispatch.first_connect.for_modify(
                    pool.dispatch
                ).exec_once(self.connection, self)
            if pool.dispatch.connect:
>               pool.dispatch.connect(self.connection, self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.event.attr._ListenerCollection object at 0x7fd8cfce50b8>
args = (<connection object at 0x7fd8cfeae178; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>, <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cf461240>)
kw = {}, fn = <function do_sqlite_connect at 0x7fd8fe856d08>

    def __call__(self, *args, **kw):
        """Execute this event."""
    
        for fn in self.parent_listeners:
>           fn(*args, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8cfeae178; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cf461240>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       psycopg2.ProgrammingError: syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^

../invenio-db/invenio_db/shared.py:116: ProgrammingError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.yield_fixture()
    def db(app):
        """Database fixture."""
>       if not database_exists(str(db_.engine.url)):

tests/conftest.py:136: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:484: in database_exists
    return bool(get_scalar_result(engine, text))
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:458: in get_scalar_result
    result_proxy = engine.execute(sql)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2143: in execute
    connection = self.contextual_connect(close_with_result=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2192: in contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2232: in _wrap_pool_connect
    e, dialect, self
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1528: in _handle_dbapi_exception_noconnection
    util.raise_from_cause(sqlalchemy_exception, exc_info)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: in _wrap_pool_connect
    return fn()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: in connect
    return _ConnectionFairy._checkout(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: in _checkout
    fairy = _ConnectionRecord.checkout(pool)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: in checkout
    rec = pool._do_get()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: in _do_get
    self._dec_overflow()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: in _do_get
    return self._create_connection()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: in _create_connection
    return _ConnectionRecord(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: in __init__
    self.__connect(first_connect_check=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: in __connect
    pool.dispatch.connect(self.connection, self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: in __call__
    fn(*args, **kw)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8cfeae178; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cf461240>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       sqlalchemy.exc.ProgrammingError: (psycopg2.ProgrammingError) syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^
E        (Background on this error at: http://sqlalche.me/e/f405)

../invenio-db/invenio_db/shared.py:116: ProgrammingError
_______________ ERROR at setup of test_validate_metadata_prefix ________________
file /code/modules/invenio-oaiserver/tests/test_verbs.py, line 399
  def test_validate_metadata_prefix(app, mocker):
E       fixture 'mocker' not found
>       available fixtures: app, authority_data, base_app, bibliographic_data, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, celery_app, celery_config, celery_enable_logging, celery_includes, celery_parameters, celery_session_app, celery_session_worker, celery_worker, celery_worker_parameters, celery_worker_pool, client, cov, db, depends_on_current_app, doctest_namespace, es_app, identify, indexes, instance_path, item_type, mock_execute, monkeypatch, no_cover, oaiset, pytestconfig, record_property, record_xml_attribute, records, recwarn, schema, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, use_celery_app_trap, users, without_oaiset_signals
>       use 'pytest --fixtures [testpath]' for help on them.

/code/modules/invenio-oaiserver/tests/test_verbs.py:399
____________________ ERROR at setup of test_dbsession_clean ____________________

self = Engine(postgresql+psycopg2://invenio:***@postgresql:5432/postgres)
fn = <bound method Pool.connect of <sqlalchemy.pool.QueuePool object at 0x7fd8cf6f2eb8>>
connection = None

    def _wrap_pool_connect(self, fn, connection):
        dialect = self.dialect
        try:
>           return fn()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cf6f2eb8>

    def connect(self):
        """Return a DBAPI connection from the pool.
    
        The connection is instrumented such that when its
        ``close()`` method is called, the connection will be returned to
        the pool.
    
        """
        if not self._use_threadlocal:
>           return _ConnectionFairy._checkout(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionFairy'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cf6f2eb8>, threadconns = None
fairy = None

    @classmethod
    def _checkout(cls, pool, threadconns=None, fairy=None):
        if not fairy:
>           fairy = _ConnectionRecord.checkout(pool)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

cls = <class 'sqlalchemy.pool._ConnectionRecord'>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cf6f2eb8>

    @classmethod
    def checkout(cls, pool):
>       rec = pool._do_get()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cf6f2eb8>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
                return self._create_connection()
            except:
                with util.safe_reraise():
>                   self._dec_overflow()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.util.langhelpers.safe_reraise object at 0x7fd8cf6d3710>
type_ = None, value = None, traceback = None

    def __exit__(self, type_, value, traceback):
        # see #2703 for notes
        if type_ is None:
            exc_type, exc_value, exc_tb = self._exc_info
            self._exc_info = None  # remove potential circular references
            if not self.warn_only:
>               compat.reraise(exc_type, exc_value, exc_tb)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

tp = <class 'psycopg2.ProgrammingError'>
value = ProgrammingError('syntax error at or near "PRAGMA"\nLINE 1: PRAGMA foreign_keys=ON\n        ^\n',)
tb = <traceback object at 0x7fd8cf6dcfc8>, cause = None

    def reraise(tp, value, tb=None, cause=None):
        if cause is not None:
            assert cause is not value, "Same cause emitted"
            value.__cause__ = cause
        if value.__traceback__ is not tb:
            raise value.with_traceback(tb)
>       raise value

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cf6f2eb8>

    def _do_get(self):
        use_overflow = self._max_overflow > -1
    
        try:
            wait = use_overflow and self._overflow >= self._max_overflow
            return self._pool.get(wait, self._timeout)
        except sqla_queue.Empty:
            # don't do things inside of "except Empty", because when we say
            # we timed out or can't connect and raise, Python 3 tells
            # people the real error is queue.Empty which it isn't.
            pass
        if use_overflow and self._overflow >= self._max_overflow:
            if not wait:
                return self._do_get()
            else:
                raise exc.TimeoutError(
                    "QueuePool limit of size %d overflow %d reached, "
                    "connection timed out, timeout %d"
                    % (self.size(), self.overflow(), self._timeout),
                    code="3o7r",
                )
    
        if self._inc_overflow():
            try:
>               return self._create_connection()

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool.QueuePool object at 0x7fd8cf6f2eb8>

    def _create_connection(self):
        """Called by subclasses to create a new ConnectionRecord."""
    
>       return _ConnectionRecord(self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cf6f2ba8>
pool = <sqlalchemy.pool.QueuePool object at 0x7fd8cf6f2eb8>, connect = True

    def __init__(self, pool, connect=True):
        self.__pool = pool
        if connect:
>           self.__connect(first_connect_check=True)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cf6f2ba8>
first_connect_check = True

    def __connect(self, first_connect_check=False):
        pool = self.__pool
    
        # ensure any existing connection is removed, so that if
        # creator fails, this attribute stays None
        self.connection = None
        try:
            self.starttime = time.time()
            connection = pool._invoke_creator(self)
            pool.logger.debug("Created new connection %r", connection)
            self.connection = connection
        except Exception as e:
            pool.logger.debug("Error on connect(): %s", e)
            raise
        else:
            if first_connect_check:
                pool.dispatch.first_connect.for_modify(
                    pool.dispatch
                ).exec_once(self.connection, self)
            if pool.dispatch.connect:
>               pool.dispatch.connect(self.connection, self)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.event.attr._ListenerCollection object at 0x7fd8cf415c18>
args = (<connection object at 0x7fd8cfeae3d8; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>, <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cf6f2ba8>)
kw = {}, fn = <function do_sqlite_connect at 0x7fd8fe856d08>

    def __call__(self, *args, **kw):
        """Execute this event."""
    
        for fn in self.parent_listeners:
>           fn(*args, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8cfeae3d8; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cf6f2ba8>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       psycopg2.ProgrammingError: syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^

../invenio-db/invenio_db/shared.py:116: ProgrammingError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.yield_fixture()
    def db(app):
        """Database fixture."""
>       if not database_exists(str(db_.engine.url)):

tests/conftest.py:136: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:484: in database_exists
    return bool(get_scalar_result(engine, text))
.tox/c1/lib/python3.6/site-packages/sqlalchemy_utils/functions/database.py:458: in get_scalar_result
    result_proxy = engine.execute(sql)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2143: in execute
    connection = self.contextual_connect(close_with_result=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2192: in contextual_connect
    self._wrap_pool_connect(self.pool.connect, None),
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2232: in _wrap_pool_connect
    e, dialect, self
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1528: in _handle_dbapi_exception_noconnection
    util.raise_from_cause(sqlalchemy_exception, exc_info)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2228: in _wrap_pool_connect
    return fn()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:434: in connect
    return _ConnectionFairy._checkout(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:831: in _checkout
    fairy = _ConnectionRecord.checkout(pool)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:563: in checkout
    rec = pool._do_get()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1259: in _do_get
    self._dec_overflow()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:1256: in _do_get
    return self._create_connection()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:379: in _create_connection
    return _ConnectionRecord(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:508: in __init__
    self.__connect(first_connect_check=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/pool.py:722: in __connect
    pool.dispatch.connect(self.connection, self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/event/attr.py:295: in __call__
    fn(*args, **kw)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

dbapi_connection = <connection object at 0x7fd8cfeae3d8; dsn: 'user=invenio password=xxx dbname=postgres host=postgresql port=5432', closed: 0>
connection_record = <sqlalchemy.pool._ConnectionRecord object at 0x7fd8cf6f2ba8>

    def do_sqlite_connect(dbapi_connection, connection_record):
        """Ensure SQLite checks foreign key constraints.
    
        For further details see "Foreign key support" sections on
        https://docs.sqlalchemy.org/en/latest/dialects/sqlite.html#foreign-key-support
        """
        # Enable foreign key constraint checking
        cursor = dbapi_connection.cursor()
>       cursor.execute('PRAGMA foreign_keys=ON')
E       sqlalchemy.exc.ProgrammingError: (psycopg2.ProgrammingError) syntax error at or near "PRAGMA"
E       LINE 1: PRAGMA foreign_keys=ON
E               ^
E        (Background on this error at: http://sqlalche.me/e/f405)

../invenio-db/invenio_db/shared.py:116: ProgrammingError
=================================== FAILURES ===================================
_________________________________ test_alembic _________________________________

app = <Flask 'testapp'>
db = <SQLAlchemy engine=postgresql+psycopg2://invenio:***@postgresql:5432/wekotest>

    def test_alembic(app, db):
        """Test alembic recipes."""
        ext = app.extensions['invenio-db']
    
        if db.engine.name == 'sqlite':
            raise pytest.skip('Upgrades are not supported on SQLite.')
    
>       assert not ext.alembic.compare_metadata()
E       AssertionError: assert not [('add_table', Table('stats_events', MetaData(bind=None), Column('created', DateTime(), table=<stats_events>, nullable...niqueConstraint(Column('id', Integer(), table=<authors_affiliation_settings>, primary_key=True, nullable=False))), ...]
E        +  where [('add_table', Table('stats_events', MetaData(bind=None), Column('created', DateTime(), table=<stats_events>, nullable...niqueConstraint(Column('id', Integer(), table=<authors_affiliation_settings>, primary_key=True, nullable=False))), ...] = <bound method Alembic.compare_metadata of <flask_alembic.extension.Alembic object at 0x7fd8d0d22b70>>()
E        +    where <bound method Alembic.compare_metadata of <flask_alembic.extension.Alembic object at 0x7fd8d0d22b70>> = <flask_alembic.extension.Alembic object at 0x7fd8d0d22b70>.compare_metadata
E        +      where <flask_alembic.extension.Alembic object at 0x7fd8d0d22b70> = <invenio_db.ext.InvenioDB object at 0x7fd8d0d22ac8>.alembic

tests/test_invenio_oaiserver.py:69: AssertionError
=============================== warnings summary ===============================
tests/test_admin.py::test_admin
  /code/modules/invenio-oaiserver/.tox/c1/lib/python3.6/site-packages/pkg_resources/_vendor/packaging/specifiers.py:276: DeprecationWarning: Creating a LegacyVersion has been deprecated and will be removed in the next major release
    DeprecationWarning,

tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_admin
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_admin.py::test_IdentifyModelView
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_all
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_api.py::TestOaiIdentify::test_get_count
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_fetcher.py::test_oaiid_fetcher
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_view_with_xsl
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_invenio_oaiserver.py::test_alembic
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_minters.py::test_oaiid_minter
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::TestOAISet::test_get_set_by_spec
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_models.py::test_oaiset_attribute_changed
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_oaiset_add_remove_record
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_create_percolator_mapping
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_percolate_query
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_get_percolator_doc_type
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_new_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_delete_percolator
tests/test_percolator.py::test_build_cache
tests/test_percolator.py::test_build_cache
tests/test_percolator.py::test_build_cache
tests/test_percolator.py::test_build_cache
tests/test_percolator.py::test_build_cache
tests/test_percolator.py::test_build_cache
tests/test_percolator.py::test_build_cache
tests/test_percolator.py::test_build_cache
tests/test_percolator.py::test_build_cache
tests/test_percolator.py::test_build_cache
tests/test_percolator.py::test_build_cache
tests/test_percolator.py::test_build_cache
tests/test_percolator.py::test_build_cache
tests/test_percolator.py::test_build_cache
tests/test_percolator.py::test_build_cache
tests/test_percolator.py::test_build_cache
tests/test_percolator.py::test_build_cache
tests/test_percolator.py::test_build_cache
tests/test_percolator.py::test_build_cache
tests/test_percolator.py::test_build_cache
tests/test_percolator.py::test_build_cache
tests/test_percolator.py::test_build_cache
tests/test_percolator.py::test_build_cache
tests/test_percolator.py::test_build_cache
tests/test_percolator.py::test_build_cache
tests/test_percolator.py::test_build_cache
tests/test_percolator.py::test_build_cache
tests/test_percolator.py::test_build_cache
tests/test_percolator.py::test_build_cache
tests/test_percolator.py::test_build_cache
tests/test_percolator.py::test_build_cache
tests/test_percolator.py::test_build_cache
tests/test_percolator.py::test_build_cache
tests/test_percolator.py::test_build_cache
tests/test_percolator.py::test_build_cache
tests/test_percolator.py::test_build_cache
tests/test_percolator.py::test_build_cache
tests/test_percolator.py::test_build_cache
tests/test_percolator.py::test_build_cache
tests/test_percolator.py::test_build_cache
tests/test_percolator.py::test_build_cache
tests/test_percolator.py::test_build_cache
tests/test_percolator.py::test_build_cache
tests/test_percolator.py::test_build_cache
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_percolator.py::test_get_record_sets
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_provider.py::test_create
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_query_string_parser
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_affected_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_query.py::test_get_records
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_OAIServerUpdater
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_insert_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_update_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_receivers.py::test_after_delete_oai_set
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_getrecord_future_item
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listidentifiers
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_listrecords
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_envelope
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_identify
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_resumption_token
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listsets
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_listmetadataformats
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_header
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_extract_paths_from_sets
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_is_private_index
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_get_error_code_msg
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_create_identifier_index
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_check_correct_system_props_mapping
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_combine_record_file_urls
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_get_identifier
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listrecords
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_response.py::test_issue34851_listidentifiers
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_serialize
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_resumption_token.py::test_ResumptionTokenSchema
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_records_commit
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_records_sets
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_tasks.py::test_update_affected_records
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_serializer
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_dumps_etree
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_handle_license_free
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_get_index_state
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_utils.py::test_is_output_harvest
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_no_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_wrong_verb
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_identify
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_getrecord_fail
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_identify_with_additional_args
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listmetadataformats_record_fail
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_listsets
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_missing_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_fail_not_exist_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_listrecords_fail_missing_metadataPrefix
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_list_sets_with_resumption_token_and_other_args
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_metadata_prefix
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_validate_duplicate_argument
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_verbs.py::test_OAIScheme_validate
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_validation_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_pid_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_resumptiontoken_error
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
tests/test_views_server.py::test_dbsession_clean
  /code/modules/invenio-oaiserver/.tox/c1/lib/python3.6/site-packages/pkg_resources/_vendor/packaging/version.py:114: DeprecationWarning: Creating a LegacyVersion has been deprecated and will be removed in the next major release
    DeprecationWarning,

tests/test_admin.py::test_OAISetModelView
tests/test_admin.py::test_IdentifyModelView
  /code/modules/invenio-oaiserver/.tox/c1/lib/python3.6/site-packages/flask/sessions.py:211: UserWarning: "app" is not a valid cookie domain, it must contain a ".". Add an entry to your hosts file, for example "app.localdomain", and use that instead.
    ' "{rv}.localdomain", and use that instead.'.format(rv=rv)

tests/test_invenio_oaiserver.py::test_init
tests/test_percolator.py::test_build_cache
  /code/modules/invenio-oaiserver/invenio_oaiserver/ext.py:135: UserWarning: Please specify the OAISERVER_ID_PREFIX configuration.default value is: oai:baa36feaf8eb:recid/
    app.config.get('OAISERVER_ID_PREFIX')))

tests/test_invenio_oaiserver.py::test_alembic
  /code/modules/invenio-oaiserver/.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/postgresql/base.py:3258: SAWarning: Predicate of partial index uq_item_type_name_name ignored during reflection
    % idx_name

tests/test_invenio_oaiserver.py::test_AppState
tests/test_percolator.py::test_build_cache
  /code/modules/invenio-oaiserver/.tox/c1/lib/python3.6/site-packages/flask_caching/__init__.py:241: DeprecationWarning: Using the initialization functions in flask_caching.backend is deprecated.  Use the a full path to backend classes directly.
    category=DeprecationWarning,

tests/test_percolator.py::test_build_cache
  /code/modules/invenio-oaiserver/.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
    'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '

tests/test_query.py::test_get_affected_records
  /code/modules/invenio-oaiserver/tests/test_query.py:54: DeprecationWarning: generator 'get_affected_records' raised StopIteration
    for i in result:

tests/test_response.py::test_envelope
  /code/modules/invenio-oaiserver/tests/test_response.py:1080: FutureWarning: The behavior of this method will change in future versions. Use specific 'len(elem)' or 'elem is not None' test instead.
    assert oaipmh

tests/test_response.py::test_envelope
  /code/modules/invenio-oaiserver/tests/test_response.py:1101: FutureWarning: The behavior of this method will change in future versions. Use specific 'len(elem)' or 'elem is not None' test instead.
    assert oaipmh

-- Docs: https://docs.pytest.org/en/latest/warnings.html

---------- coverage: platform linux, python 3.6.15-final-0 -----------
Name                                    Stmts   Miss Branch BrPart  Cover
-------------------------------------------------------------------------
invenio_oaiserver/__init__.py               6      0      0      0   100%
invenio_oaiserver/admin.py                 39      0      6      0   100%
invenio_oaiserver/api.py                   12      0      2      0   100%
invenio_oaiserver/config.py                25      0      0      0   100%
invenio_oaiserver/errors.py                 4      0      4      0   100%
invenio_oaiserver/ext.py                   61      0     24      1    99%
invenio_oaiserver/fetchers.py              10      0      2      0   100%
invenio_oaiserver/minters.py               20      0      2      0   100%
invenio_oaiserver/models.py                47      0      8      1    98%
invenio_oaiserver/percolator.py            70     30     36      0    53%
invenio_oaiserver/provider.py              15      0      4      1    95%
invenio_oaiserver/proxies.py                6      0      2      0   100%
invenio_oaiserver/query.py                113     79     52      1    30%
invenio_oaiserver/receivers.py             24     13      6      1    47%
invenio_oaiserver/response.py             428    278    156      6    31%
invenio_oaiserver/resumption_token.py      31     17      8      0    46%
invenio_oaiserver/schemas/__init__.py       1      0      0      0   100%
invenio_oaiserver/tasks.py                 28     12      6      0    47%
invenio_oaiserver/utils.py                120     30     42      0    75%
invenio_oaiserver/verbs.py                 75      0     48      1    99%
invenio_oaiserver/version.py                3      0      0      0   100%
invenio_oaiserver/views/__init__.py         1      0      0      0   100%
invenio_oaiserver/views/server.py          54      2     22      1    96%
-------------------------------------------------------------------------
TOTAL                                    1193    461    430     13    59%

== 1 failed, 47 passed, 2 skipped, 10696 warnings, 41 error in 139.01 seconds ==
ERROR: InvocationError for command /code/modules/invenio-oaiserver/.tox/c1/bin/pytest --cov=invenio_oaiserver tests -v -vv -s --cov-branch --cov-report=term --basetemp=/code/modules/invenio-oaiserver/.tox/c1/tmp (exited with code 1)
___________________________________ summary ____________________________________
ERROR:   c1: commands failed
