GLOB sdist-make: /code/modules/weko-workflow/setup.py
c1 inst-nodeps: /code/modules/weko-workflow/.tox/.tmp/package/1/weko-workflow-0.1.0.dev20170000.zip
c1 installed: alabaster==0.7.13,alembic==0.9.6,amqp==2.6.1,angular-gettext-babel==0.3,aniso8601==8.0.0,arrow==0.12.1,asn1crypto==0.23.0,attrs==17.4.0,b2handle==1.1.2,Babel==2.5.1,bagit==1.7.0,beautifulsoup4==4.9.3,bibtexparser==1.0.1,billiard==3.6.3.0,binaryornot==0.4.4,bleach==3.1.0,blinker==1.4,boto3==1.7.84,botocore==1.10.84,cachelib==0.1,cachetools==4.2.4,cchardet==2.1.1,celery==4.4.7,certifi==2017.11.5,cffi==1.11.2,chardet==3.0.4,citeproc-py==0.5.1,citeproc-py-styles==0.1.2,click==8.0.4,cookiecutter==1.6.0,counter-robots==2018.6,coverage==6.2,cryptography==2.1.4,datacite==1.0.1,DateTime==4.9,decorator==4.1.2,defusedxml==0.5.0,dictdiffer==0.7.0,dnspython==2.2.1,docutils==0.18.1,dojson==1.3.2,elasticsearch==6.1.1,elasticsearch-dsl==6.4.0,elementpath==1.0.6,email-validator==1.0.5,entrypoints==0.2.3,feedgen==0.7.0,Flask==1.0.4,Flask-Admin==1.5.3,Flask-Alembic==2.0.1,Flask-Assets==0.12,Flask-BabelEx==0.9.4,Flask-Breadcrumbs==0.5.0,Flask-Caching==1.3.3,Flask-CeleryExt==0.3.4,Flask-Collect==1.2.2,Flask-Cors==3.0.3,Flask-DebugToolbar==0.11.0,Flask-IIIF==0.6.1,Flask-KVSession==0.6.2,Flask-Limiter==1.1.0,Flask-Login==0.4.1,Flask-Mail==0.9.1,flask-marshmallow==0.14.0,Flask-Menu==0.6.0,Flask-OAuthlib==0.9.5,Flask-Plugins==1.6.1,Flask-Principal==0.4.0,Flask-RESTful==0.3.8,Flask-Security==3.0.0,flask-shell-ipython==0.4.1,Flask-Sitemap==0.1.0,Flask-SQLAlchemy==2.3.2,flask-talisman==0.4.1,Flask-WTF==0.14.3,-e git+https://github.com/RCOSDP/pyfpdf.git@f9b032148283d535cabc7789858081c80de36fef#egg=fpdf,frozendict==2.3.6,fs==0.5.4,ftfy==4.4.3,future==0.16.0,github3.py==1.1.0,html5lib==1.0.1,idna==2.6,iiif-prezi==0.3.0,imagesize==1.4.1,importlib-metadata==4.8.3,importlib-resources==5.4.0,infinity==1.4,iniconfig==1.1.1,intervals==0.8.0,invenio-access==1.1.0,-e git+https://github.com/ivis-miyachi/weko.git@66c62cd8071222d5e46135f6354b3e5d351614d2#egg=invenio_accounts&subdirectory=modules/invenio-accounts,invenio-admin==1.1.2,invenio-app==1.1.0,invenio-assets==1.0.0,invenio-base==1.0.2,invenio-cache==1.0.0,invenio-celery==1.1.3,-e git+https://github.com/ivis-miyachi/weko.git@66c62cd8071222d5e46135f6354b3e5d351614d2#egg=invenio_communities&subdirectory=modules/invenio-communities,invenio-config==1.0.0,invenio-csl-rest==1.0.0a1,-e git+https://github.com/ivis-miyachi/weko.git@66c62cd8071222d5e46135f6354b3e5d351614d2#egg=invenio_db&subdirectory=modules/invenio-db,-e git+https://github.com/ivis-miyachi/weko.git@66c62cd8071222d5e46135f6354b3e5d351614d2#egg=invenio_deposit&subdirectory=modules/invenio-deposit,-e git+https://github.com/ivis-miyachi/weko.git@66c62cd8071222d5e46135f6354b3e5d351614d2#egg=invenio_files_rest&subdirectory=modules/invenio-files-rest,invenio-formatter==1.0.0b3,invenio-i18n==1.0.0,-e git+https://github.com/ivis-miyachi/weko.git@66c62cd8071222d5e46135f6354b3e5d351614d2#egg=invenio_iiif&subdirectory=modules/invenio-iiif,-e git+https://github.com/ivis-miyachi/weko.git@66c62cd8071222d5e46135f6354b3e5d351614d2#egg=invenio_indexer&subdirectory=modules/invenio-indexer,invenio-jsonschemas==1.0.0,invenio-logging==1.0.0b3,-e git+https://github.com/ivis-miyachi/weko.git@66c62cd8071222d5e46135f6354b3e5d351614d2#egg=invenio_mail&subdirectory=modules/invenio-mail,invenio-marc21==1.0.0a8,-e git+https://github.com/ivis-miyachi/weko.git@66c62cd8071222d5e46135f6354b3e5d351614d2#egg=invenio_oaiharvester&subdirectory=modules/invenio-oaiharvester,-e git+https://github.com/ivis-miyachi/weko.git@66c62cd8071222d5e46135f6354b3e5d351614d2#egg=invenio_oaiserver&subdirectory=modules/invenio-oaiserver,-e git+https://github.com/ivis-miyachi/weko.git@66c62cd8071222d5e46135f6354b3e5d351614d2#egg=invenio_oauth2server&subdirectory=modules/invenio-oauth2server,invenio-oauthclient==1.0.0,invenio-pidrelations==1.0.0a4,invenio-pidstore==1.0.0,-e git+https://github.com/ivis-miyachi/weko.git@66c62cd8071222d5e46135f6354b3e5d351614d2#egg=invenio_previewer&subdirectory=modules/invenio-previewer,invenio-query-parser==0.6.0,-e git+https://github.com/ivis-miyachi/weko.git@66c62cd8071222d5e46135f6354b3e5d351614d2#egg=invenio_queues&subdirectory=modules/invenio-queues,-e git+https://github.com/ivis-miyachi/weko.git@66c62cd8071222d5e46135f6354b3e5d351614d2#egg=invenio_records&subdirectory=modules/invenio-records,invenio-records-files==1.0.0a10,-e git+https://github.com/ivis-miyachi/weko.git@66c62cd8071222d5e46135f6354b3e5d351614d2#egg=invenio_records_rest&subdirectory=modules/invenio-records-rest,invenio-records-ui==1.0.0,-e git+https://github.com/ivis-miyachi/weko.git@66c62cd8071222d5e46135f6354b3e5d351614d2#egg=invenio_resourcesyncclient&subdirectory=modules/invenio-resourcesyncclient,-e git+https://github.com/ivis-miyachi/weko.git@66c62cd8071222d5e46135f6354b3e5d351614d2#egg=invenio_resourcesyncserver&subdirectory=modules/invenio-resourcesyncserver,invenio-rest==1.1.2,-e git+https://github.com/ivis-miyachi/weko.git@66c62cd8071222d5e46135f6354b3e5d351614d2#egg=invenio_s3&subdirectory=modules/invenio-s3,invenio-search==1.1.0,invenio-search-ui==1.0.0a9,-e git+https://github.com/ivis-miyachi/weko.git@66c62cd8071222d5e46135f6354b3e5d351614d2#egg=invenio_stats&subdirectory=modules/invenio-stats,invenio-theme==1.0.0b4,ipaddress==1.0.19,ipython==6.2.1,ipython-genutils==0.2.0,itsdangerous==0.24,jedi==0.11.0,Jinja2==2.10,jinja2-cli==0.6.0,jinja2-time==0.2.0,jmespath==0.10.0,jsmin==2.2.2,jsonpatch==1.21,jsonpath-ng==1.5.2,jsonpointer==1.14,jsonref==0.1,jsonresolver==0.2.1,jsonschema==2.6.0,jupyter-client==5.2.2,jupyter-core==4.4.0,-e git+https://github.com/RCOSDP/kombu.git@f204fdf078d5e94393c86693f545e2d011f620f5#egg=kombu,limits==1.2.1,lxml==4.1.1,Mako==1.0.7,MarkupSafe==1.1.1,marshmallow==2.20.1,marshmallow-sqlalchemy==0.23.1,maxminddb==1.5.2,maxminddb-geolite2==2017.803,mistune==0.8.3,mock==3.0.5,more-itertools==8.10.0,msgpack==0.6.2,nbconvert==5.3.1,nbformat==4.4.0,netaddr==0.8.0,node-semver==0.1.1,numpy==1.16.1,oauthlib==2.1.0,ordereddict==1.1,packaging==21.3,pandocfilters==1.4.2,parso==0.1.0,passlib==1.7.1,pexpect==4.3.0,pickleshare==0.7.4,Pillow==5.4.1,pluggy==0.13.1,ply==3.11,poyo==0.4.1,prompt-toolkit==1.0.15,psycopg2==2.7.3.2,ptyprocess==0.5.2,py==1.11.0,pycparser==2.18,Pygments==2.2.0,PyJWT==1.5.3,PyLD==2.0.3,pyparsing==3.0.9,-e git+https://github.com/RCOSDP/PyPDF2.git@fefc684a3a74aff6f99e5dff24f9b4dd1c95169d#egg=PyPDF2,pyPEG2==2.15.2,pytest==6.1.2,pytest-cov==4.0.0,pytest-mock==3.6.1,python-dateutil==2.6.1,python-editor==1.0.3,python-geoip==1.2,pytz==2017.3,pyzmq==17.0.0,redis==2.10.6,requests==2.18.4,requests-oauthlib==1.1.0,resync==1.0.9,s3fs==0.1.6,s3transfer==0.1.13,Sickle==0.6.4,simplegeneric==0.8.1,simplejson==3.12.0,simplekv==0.11.2,six==1.12.0,snowballstemmer==2.2.0,soupsieve==2.3.2.post1,speaklater==1.3,Sphinx==1.8.4,sphinxcontrib-serializinghtml==1.1.5,sphinxcontrib-websupport==1.2.4,SQLAlchemy==1.2.19,SQLAlchemy-Continuum==1.3.6,SQLAlchemy-Utils==0.35.0,testpath==0.3.1,toml==0.10.2,tomli==1.2.3,tornado==4.5.3,traitlets==4.3.2,typing_extensions==4.1.1,ua-parser==0.7.3,uritemplate==4.1.1,uritools==2.1.0,urllib3==1.22,validators==0.12.0,vine==1.3.0,Wand==0.6.1,wcwidth==0.1.7,webargs==5.5.2,webassets==0.12.1,webencodings==0.5.1,-e git+https://github.com/ivis-miyachi/weko.git@66c62cd8071222d5e46135f6354b3e5d351614d2#egg=weko_accounts&subdirectory=modules/weko-accounts,-e git+https://github.com/ivis-miyachi/weko.git@66c62cd8071222d5e46135f6354b3e5d351614d2#egg=weko_admin&subdirectory=modules/weko-admin,-e git+https://github.com/ivis-miyachi/weko.git@66c62cd8071222d5e46135f6354b3e5d351614d2#egg=weko_authors&subdirectory=modules/weko-authors,-e git+https://github.com/ivis-miyachi/weko.git@66c62cd8071222d5e46135f6354b3e5d351614d2#egg=weko_bulkupdate&subdirectory=modules/weko-bulkupdate,-e git+https://github.com/ivis-miyachi/weko.git@66c62cd8071222d5e46135f6354b3e5d351614d2#egg=weko_deposit&subdirectory=modules/weko-deposit,-e git+https://github.com/ivis-miyachi/weko.git@66c62cd8071222d5e46135f6354b3e5d351614d2#egg=weko_gridlayout&subdirectory=modules/weko-gridlayout,-e git+https://github.com/ivis-miyachi/weko.git@66c62cd8071222d5e46135f6354b3e5d351614d2#egg=weko_groups&subdirectory=modules/weko-groups,-e git+https://github.com/ivis-miyachi/weko.git@66c62cd8071222d5e46135f6354b3e5d351614d2#egg=weko_handle&subdirectory=modules/weko-handle,-e git+https://github.com/ivis-miyachi/weko.git@66c62cd8071222d5e46135f6354b3e5d351614d2#egg=weko_index_tree&subdirectory=modules/weko-index-tree,-e git+https://github.com/ivis-miyachi/weko.git@66c62cd8071222d5e46135f6354b3e5d351614d2#egg=weko_indextree_journal&subdirectory=modules/weko-indextree-journal,-e git+https://github.com/ivis-miyachi/weko.git@66c62cd8071222d5e46135f6354b3e5d351614d2#egg=weko_items_autofill&subdirectory=modules/weko-items-autofill,-e git+https://github.com/ivis-miyachi/weko.git@66c62cd8071222d5e46135f6354b3e5d351614d2#egg=weko_items_ui&subdirectory=modules/weko-items-ui,-e git+https://github.com/ivis-miyachi/weko.git@66c62cd8071222d5e46135f6354b3e5d351614d2#egg=weko_itemtypes_ui&subdirectory=modules/weko-itemtypes-ui,-e git+https://github.com/ivis-miyachi/weko.git@66c62cd8071222d5e46135f6354b3e5d351614d2#egg=weko_logging&subdirectory=modules/weko-logging,-e git+https://github.com/ivis-miyachi/weko.git@66c62cd8071222d5e46135f6354b3e5d351614d2#egg=weko_records&subdirectory=modules/weko-records,-e git+https://github.com/ivis-miyachi/weko.git@66c62cd8071222d5e46135f6354b3e5d351614d2#egg=weko_records_ui&subdirectory=modules/weko-records-ui,-e git+https://github.com/ivis-miyachi/weko.git@66c62cd8071222d5e46135f6354b3e5d351614d2#egg=weko_redis&subdirectory=modules/weko-redis,-e git+https://github.com/ivis-miyachi/weko.git@66c62cd8071222d5e46135f6354b3e5d351614d2#egg=weko_schema_ui&subdirectory=modules/weko-schema-ui,-e git+https://github.com/ivis-miyachi/weko.git@66c62cd8071222d5e46135f6354b3e5d351614d2#egg=weko_search_ui&subdirectory=modules/weko-search-ui,-e git+https://github.com/ivis-miyachi/weko.git@66c62cd8071222d5e46135f6354b3e5d351614d2#egg=weko_sitemap&subdirectory=modules/weko-sitemap,-e git+https://github.com/ivis-miyachi/weko.git@66c62cd8071222d5e46135f6354b3e5d351614d2#egg=weko_theme&subdirectory=modules/weko-theme,-e git+https://github.com/ivis-miyachi/weko.git@66c62cd8071222d5e46135f6354b3e5d351614d2#egg=weko_user_profiles&subdirectory=modules/weko-user-profiles,weko-workflow @ file:///code/modules/weko-workflow/.tox/.tmp/package/1/weko-workflow-0.1.0.dev20170000.zip,Werkzeug==0.15.2,whichcraft==0.4.1,WTForms==2.1,WTForms-Alchemy==0.16.5,WTForms-Components==0.10.3,xmlschema==0.9.30,xmltodict==0.12.0,zipp==3.6.0,zope.interface==5.5.2
c1 run-test-pre: PYTHONHASHSEED='3309853458'
c1 run-test: commands[0] | pytest --cov=weko_workflow tests -v -s -vv --cov-branch --cov-report=term --cov-report=html --cov-config=tox.ini --basetemp=/code/modules/weko-workflow/.tox/c1/tmp
============================= test session starts ==============================
platform linux -- Python 3.6.15, pytest-6.1.2, py-1.11.0, pluggy-0.13.1 -- /code/modules/weko-workflow/.tox/c1/bin/python
cachedir: .tox/c1/.pytest_cache
rootdir: /code/modules/weko-workflow
plugins: celery-4.4.7, mock-3.6.1, cov-4.0.0
collecting ... collected 469 items

tests/test_admin.py::TestFlowSettingView::test_index_acl_guest /admin/flowsetting/
PASSED
tests/test_admin.py::TestFlowSettingView::test_index_acl[0-403] start comm
end_comm
end commit
/admin/flowsetting/
PASSED
tests/test_admin.py::TestFlowSettingView::test_flow_detail_acl_guest /admin/flowsetting/
PASSED
tests/test_admin.py::TestFlowSettingView::test_flow_detail_acl[1-200] start comm
end_comm
end commit
/admin/workflowsetting/0
/admin/workflowsetting/0
FAILED
tests/test_admin.py::TestFlowSettingView::test_get_specified_properties PASSED
tests/test_admin.py::TestFlowSettingView::test_update_flow start comm
end_comm
end commit
FAILED
tests/test_admin.py::TestFlowSettingView::test_new_flow start comm
end_comm
end commit
FAILED
tests/test_admin.py::TestFlowSettingView::test_del_flow start comm
end_comm
end commit
FAILED
tests/test_admin.py::TestFlowSettingView::test_get_actions start comm
end_comm
end commit
FAILED
tests/test_admin.py::TestFlowSettingView::test_upt_flow_action start comm
end_comm
end commit
FAILED
tests/test_admin.py::TestWorkFlowSettingView::test_index_acl_guest /admin/workflowsetting/
PASSED
tests/test_admin.py::TestWorkFlowSettingView::test_index_acl[1-200] start comm
end_comm
end commit
/admin/workflowsetting/
FAILED
tests/test_admin.py::TestWorkFlowSettingView::test_workflow_detail_acl_guest /admin/workflowsetting/0
PASSED
tests/test_admin.py::TestWorkFlowSettingView::test_workflow_detail_acl[1-200] start comm
end_comm
end commit
/admin/workflowsetting/0
PASSED
tests/test_admin.py::TestWorkFlowSettingView::test_update_workflow_acl_guest /admin/workflowsetting/0
PASSED
tests/test_admin.py::TestWorkFlowSettingView::test_update_workflow_acl[1-200] start comm
end_comm
end commit
/admin/workflowsetting/0
FAILED
tests/test_admin.py::TestWorkFlowSettingView::test_delete_workflow_acl_guest /admin/workflowsetting/0
PASSED
tests/test_admin.py::TestWorkFlowSettingView::test_delete_workflow_acl[1-200] start comm
end_comm
end commit
/admin/workflowsetting/0
PASSED
tests/test_admin.py::TestWorkFlowSettingView::test_get_name_display_hide start comm
end_comm
end commit
PASSED
tests/test_admin.py::TestWorkFlowSettingView::test_get_displays start comm
end_comm
end commit
PASSED
tests/test_admin.py::TestWorkFlowSettingView::test_save_workflow_role start comm
end_comm
end commit
FAILED
tests/test_admin.py::TestWorkFlowSettingView::test_get_language_workflows start comm
end_comm
end commit
FAILED
tests/test_api.py::test_Flow_action start comm
end_comm
end commit
PASSED
tests/test_api.py::test_WorkActivity_filter_by_date PASSED
tests/test_api.py::test_WorkActivity_get_all_activity_list start comm
end_comm
end commit
not has cache
ERROR
tests/test_api.py::test_WorkActivity_get_activity_index_search not has cache
ERROR
tests/test_api.py::test_WorkActivity_upt_activity_detail not has cache
ERROR
tests/test_api.py::test_WorkActivity_get_corresponding_usage_activities not has cache
ERROR
tests/test_cli.py::test_workflow PASSED
tests/test_cli.py::test_init_workflow_tables start comm
end_comm
end commit
FAILED
tests/test_romeo.py::test_search_romeo_jtitles PASSED
tests/test_romeo.py::test_search_romeo_issn PASSED
tests/test_romeo.py::test_search_romeo_jtitle PASSED
tests/test_sessions.py::test_upt_activity_item start comm
end_comm
end commit
not has cache
ERROR
tests/test_tasks.py::test_cancel_expired_usage_report_activities PASSED
tests/test_utils.py::test_get_current_language PASSED
tests/test_utils.py::test_get_term_and_condition_content PASSED
tests/test_utils.py::test_get_identifier_setting PASSED
tests/test_utils.py::test_saving_doi_pidstore not has cache
ERROR
tests/test_utils.py::test_register_hdl not has cache
ERROR
tests/test_utils.py::test_register_hdl_by_item_id not has cache
ERROR
tests/test_utils.py::test_register_hdl_by_handle not has cache
ERROR
tests/test_utils.py::test_item_metadata_validation not has cache
ERROR
tests/test_utils.py::test_merge_doi_error_list PASSED
tests/test_utils.py::test_validation_item_property not has cache
ERROR
tests/test_utils.py::test_handle_check_required_data not has cache
ERROR
tests/test_utils.py::test_handle_check_required_pattern_and_either not has cache
ERROR
tests/test_utils.py::test_validattion_item_property_required PASSED
tests/test_utils.py::test_validattion_item_property_either_required PASSED
tests/test_utils.py::test_check_required_data PASSED
tests/test_utils.py::test_get_activity_id_of_record_without_version not has cache
ERROR
tests/test_utils.py::test_check_suffix_identifier PASSED
tests/test_utils.py::test_MappingData__init__ not has cache
ERROR
tests/test_utils.py::test_MappingData_get_data_by_mapping not has cache
ERROR
tests/test_utils.py::test_MappingData_get_first_data_by_mapping not has cache
ERROR
tests/test_utils.py::test_MappingData_get_first_property_by_mapping not has cache
ERROR
tests/test_utils.py::test_get_sub_item_value PASSED
tests/test_utils.py::test_get_item_value_in_deep PASSED
tests/test_utils.py::test_IdentifierHandle___init__ not has cache
ERROR
tests/test_utils.py::test_IdentifierHandle_get_pidstore not has cache
ERROR
tests/test_utils.py::test_IdentifierHandle_check_pidstore_exist not has cache
ERROR
tests/test_utils.py::test_IdentifierHandle_register_pidstore not has cache
ERROR
tests/test_utils.py::test_IdentifierHandle_delete_pidstore_doi not has cache
ERROR
tests/test_utils.py::test_IdentifierHandle_remove_idt_registration_metadata not has cache
ERROR
tests/test_utils.py::test_IdentifierHandle_update_idt_registration_metadata not has cache
ERROR
tests/test_utils.py::test_IdentifierHandle_get_idt_registration_data not has cache
ERROR
tests/test_utils.py::test_IdentifierHandle_commit not has cache
ERROR
tests/test_utils.py::test_delete_bucket not has cache
ERROR
tests/test_utils.py::test_merge_buckets_by_records[True] not has cache
ERROR
tests/test_utils.py::test_merge_buckets_by_records[False] not has cache
ERROR
tests/test_utils.py::test_merge_buckets_by_records_error not has cache
ERROR
tests/test_utils.py::test_set_bucket_default_size not has cache
ERROR
tests/test_utils.py::test_is_show_autofill_metadata PASSED
tests/test_utils.py::test_is_hidden_pubdate PASSED
tests/test_utils.py::test_get_parent_pid_with_type not has cache
ERROR
tests/test_utils.py::test_filter_all_condition PASSED
tests/test_utils.py::test_filter_condition PASSED
tests/test_utils.py::test_get_actionid PASSED
tests/test_utils.py::test_convert_record_to_item_metadata not has cache
ERROR
tests/test_utils.py::test_prepare_edit_workflow start comm
end_comm
end commit
not has cache
ERROR
tests/test_utils.py::test_handle_finish_workflow start comm
end_comm
end commit
not has cache
ERROR
tests/test_utils.py::test_delete_cache_data PASSED
tests/test_utils.py::test_update_cache_data PASSED
tests/test_utils.py::test_get_cache_data PASSED
tests/test_utils.py::test_check_an_item_is_locked PASSED
tests/test_utils.py::test_get_accoutn_info start comm
end_comm
end commit
PASSED
tests/test_utils.py::test_check_existed_doi not has cache
ERROR
tests/test_utils.py::test_get_url_root PASSED
tests/test_utils.py::test_get_record_by_root_ver not has cache
ERROR
tests/test_utils.py::test_get_disptype_and_ver_in_metainfo not has cache
ERROR
tests/test_utils.py::test_set_files_display_type not has cache
ERROR
tests/test_utils.py::test_get_thumbnails not has cache
ERROR
tests/test_utils.py::test_get_allow_multi_thumbnail not has cache
ERROR
tests/test_utils.py::test_is_usage_application_item_type not has cache
ERROR
tests/test_utils.py::test_is_usage_application not has cache
ERROR
tests/test_utils.py::test_send_mail_reminder PASSED
tests/test_utils.py::test_send_mail_approval_done PASSED
tests/test_utils.py::test_send_mail_registration_done start comm
end_comm
end commit
PASSED
tests/test_utils.py::test_send_mail_request_approval PASSED
tests/test_utils.py::test_send_mail PASSED
tests/test_utils.py::test_email_pattern_registration_done start comm
end_comm
end commit
PASSED
tests/test_utils.py::test_email_pattern_request_approval PASSED
tests/test_utils.py::test_email_pattern_approval_done PASSED
tests/test_utils.py::test_get_mail_data PASSED
tests/test_utils.py::test_get_subject_and_content PASSED
tests/test_utils.py::test_get_file_path PASSED
tests/test_utils.py::test_replace_characters PASSED
tests/test_utils.py::test_register_info not has cache
ERROR
tests/test_utils.py::test_get_approval_dates PASSED
tests/test_utils.py::test_get_item_info not has cache
ERROR
tests/test_utils.py::test_get_site_info_name PASSED
tests/test_utils.py::test_get_default_mail_sender PASSED
tests/test_utils.py::test_set_mail_info not has cache
ERROR
tests/test_utils.py::test_process_send_reminder_mail not has cache
ERROR
tests/test_utils.py::test_process_send_notification_mail not has cache
ERROR
tests/test_utils.py::test_get_application_and_approval_date not has cache
ERROR
tests/test_utils.py::test_get_workflow_item_type_names not has cache
ERROR
tests/test_utils.py::test_create_usage_report not has cache
ERROR
tests/test_utils.py::test_create_record_metadata start comm
end_comm
end commit
not has cache
ERROR
tests/test_utils.py::test_modify_item_metadata not has cache
ERROR
tests/test_utils.py::test_replace_title_subitem PASSED
tests/test_utils.py::test_get_schema_dict PASSED
tests/test_utils.py::test_create_deposit PASSED
tests/test_utils.py::test_update_activity_action start comm
end_comm
end commit
not has cache
ERROR
tests/test_utils.py::test_check_continue not has cache
ERROR
tests/test_utils.py::test_autofill_title PASSED
tests/test_utils.py::test_exclude_admin_workflow start comm
end_comm
end commit
PASSED
tests/test_utils.py::test_is_enable_item_name_link PASSED
tests/test_utils.py::test_save_activity_data PASSED
tests/test_utils.py::test_send_mail_url_guest_user PASSED
tests/test_utils.py::test_generate_guest_activity_token_value PASSED
tests/test_utils.py::test_init_activity_for_guest_user not has cache
ERROR
tests/test_utils.py::test_send_usage_application_mail_for_guest_user PASSED
tests/test_utils.py::test_validate_guest_activity_token PASSED
tests/test_utils.py::test_validate_guest_activity_expired start comm
end_comm
end commit
PASSED
tests/test_utils.py::test_create_onetime_download_url_to_guest start comm
end_comm
end commit
PASSED
tests/test_utils.py::test_delete_guest_activity start comm
end_comm
end commit
PASSED
tests/test_utils.py::test_get_activity_display_info start comm
end_comm
end commit
not has cache
ERROR
tests/test_utils.py::test___init_activity_detail_data_for_guest start comm
end_comm
end commit
not has cache
ERROR
tests/test_utils.py::test_prepare_data_for_guest_activity start comm
end_comm
end commit
not has cache
ERROR
tests/test_utils.py::test_recursive_get_specified_properties PASSED
tests/test_utils.py::test_get_approval_keys PASSED
tests/test_utils.py::test_process_send_mail PASSED
tests/test_utils.py::test_cancel_expired_usage_reports not has cache
ERROR
tests/test_utils.py::test_process_send_approval_mails not has cache
ERROR
tests/test_utils.py::test_get_usage_data not has cache
ERROR
tests/test_utils.py::test_update_approval_date not has cache
ERROR
tests/test_utils.py::test_create_record_metadata_for_user not has cache
ERROR
tests/test_utils.py::test_get_current_date PASSED
tests/test_utils.py::test_get_sub_key_by_system_property_key PASSED
tests/test_utils.py::test_update_system_data_for_item_metadata not has cache
ERROR
tests/test_utils.py::test_update_approval_date_for_deposit not has cache
ERROR
tests/test_utils.py::test_update_system_data_for_activity not has cache
ERROR
tests/test_utils.py::test_check_authority_by_admin not has cache
ERROR
tests/test_utils.py::test_get_record_first_version not has cache
ERROR
tests/test_utils.py::test_get_files_and_thumbnail not has cache
ERROR
tests/test_utils.py::test_get_pid_and_record not has cache
ERROR
tests/test_utils.py::test_get_items_metadata_by_activity_detail not has cache
ERROR
tests/test_utils.py::test_get_main_record_detail not has cache
ERROR
tests/test_utils.py::test_prepare_doi_link_workflow not has cache
ERROR
tests/test_utils.py::test_get_pid_value_by_activity_detail not has cache
ERROR
tests/test_utils.py::test_check_doi_validation_not_pass PASSED
tests/test_utils.py::test_get_index_id FAILED
tests/test_utils.py::test_make_activitylog_tsv not has cache
ERROR
tests/test_views.py::test_regex_replace FAILED
tests/test_views.py::test_index_acl_nologin /workflow/
PASSED
tests/test_views.py::test_index_acl[0-True] start comm
end_comm
end commit
/workflow/
2
{}
6
8
10
FAILED
tests/test_views.py::test_index_acl[1-True] start comm
end_comm
end commit
/workflow/
2
{}
6
8
10
FAILED
tests/test_views.py::test_index_acl[2-True] start comm
end_comm
end commit
/workflow/
2
{}
6
8
10
9
FAILED
tests/test_views.py::test_index_acl[3-True] start comm
end_comm
end commit
/workflow/
2
{}
6
8
10
FAILED
tests/test_views.py::test_index_acl[4-True] start comm
end_comm
end commit
/workflow/
2
{}
6
8
10
FAILED
tests/test_views.py::test_index_acl[5-True] start comm
end_comm
end commit
/workflow/
2
{}
6
8
10
FAILED
tests/test_views.py::test_index_acl[6-True] start comm
end_comm
end commit
/workflow/
2
{}
6
8
10
10
FAILED
tests/test_views.py::test_index start comm
end_comm
end commit
/workflow/
2
{}
6
8
10
9
2
{}
3
5
8
10
9
2
{}
3
4
8
10
9
2
{}
6
7
10
9
1
PASSED
tests/test_views.py::test_iframe_success not has cache
ERROR
tests/test_views.py::test_init_activity_acl_nologin /workflow/activity/init
PASSED
tests/test_views.py::test_init_activity_acl[0-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_init_activity_acl[1-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_init_activity_acl[2-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_init_activity_acl[3-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_init_activity_acl[4-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_init_activity_acl[5-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_init_activity_acl[6-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_init_activity[0-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_init_activity[1-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_init_activity[2-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_init_activity[3-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_init_activity[4-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_init_activity[5-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_init_activity[6-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_init_activity_guest_nologin /workflow/activity/init-guest
PASSED
tests/test_views.py::test_init_activity_guest_users[0-200] start comm
end_comm
end commit
/workflow/activity/init-guest
PASSED
tests/test_views.py::test_init_activity_guest_users[1-200] start comm
end_comm
end commit
/workflow/activity/init-guest
PASSED
tests/test_views.py::test_init_activity_guest_users[2-200] start comm
end_comm
end commit
/workflow/activity/init-guest
PASSED
tests/test_views.py::test_init_activity_guest_users[3-200] start comm
end_comm
end commit
/workflow/activity/init-guest
PASSED
tests/test_views.py::test_init_activity_guest_users[4-200] start comm
end_comm
end commit
/workflow/activity/init-guest
PASSED
tests/test_views.py::test_init_activity_guest_users[5-200] start comm
end_comm
end commit
/workflow/activity/init-guest
PASSED
tests/test_views.py::test_init_activity_guest_users[6-200] start comm
end_comm
end commit
/workflow/activity/init-guest
PASSED
tests/test_views.py::test_find_doi_nologin /workflow/findDOI
PASSED
tests/test_views.py::test_find_doi_users[0-200] start comm
end_comm
end commit
/workflow/findDOI
PASSED
tests/test_views.py::test_find_doi_users[1-200] start comm
end_comm
end commit
/workflow/findDOI
PASSED
tests/test_views.py::test_find_doi_users[2-200] start comm
end_comm
end commit
/workflow/findDOI
PASSED
tests/test_views.py::test_find_doi_users[3-200] start comm
end_comm
end commit
/workflow/findDOI
PASSED
tests/test_views.py::test_find_doi_users[4-200] start comm
end_comm
end commit
/workflow/findDOI
PASSED
tests/test_views.py::test_find_doi_users[5-200] start comm
end_comm
end commit
/workflow/findDOI
PASSED
tests/test_views.py::test_find_doi_users[6-200] start comm
end_comm
end commit
/workflow/findDOI
PASSED
tests/test_views.py::test_save_feedback_maillist_users[0-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_save_feedback_maillist_users[1-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_save_feedback_maillist_users[2-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_save_feedback_maillist_users[3-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_save_feedback_maillist_users[4-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_save_feedback_maillist_users[5-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_save_feedback_maillist_users[6-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_previous_action_acl_nologin /workflow/activity/action/1/1/rejectOrReturn/1
PASSED
tests/test_views.py::test_previous_action_acl_users[0-403-False] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_previous_action_acl_users[1-403-True] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_previous_action_acl_users[2-403-True] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_previous_action_acl_users[3-403-True] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_previous_action_acl_users[4-403-False] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_previous_action_acl_users[5-403-False] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_previous_action_acl_users[6-403-True] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_previous_action[0-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_previous_action[1-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_previous_action[2-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_previous_action[3-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_previous_action[4-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_previous_action[5-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_previous_action[6-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_next_action_acl_nologin not has cache
ERROR
tests/test_views.py::test_next_action_acl_users[0-403-False] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_next_action_acl_users[1-403-True] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_next_action_acl_users[2-403-True] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_next_action_acl_users[3-403-True] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_next_action_acl_users[4-403-False] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_next_action_acl_users[5-403-False] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_next_action_acl_users[6-403-True] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_next_action_acl_guestlogin not has cache
ERROR
tests/test_views.py::test_next_action[0-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_next_action[1-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_next_action[2-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_next_action[3-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_next_action[4-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_next_action[5-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_next_action[6-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_cancel_action_acl_nologin /workflow/activity/action/1/1/cancel
PASSED
tests/test_views.py::test_cancel_action_acl_users[0-403-False] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_cancel_action_acl_users[1-403-True] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_cancel_action_acl_users[2-403-True] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_cancel_action_acl_users[3-403-True] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_cancel_action_acl_users[4-403-False] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_cancel_action_acl_users[5-403-False] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_cancel_action_acl_users[6-403-True] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_cancel_action_acl_guestlogin not has cache
ERROR
tests/test_views.py::test_cancel_action[0-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_cancel_action[1-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_cancel_action[2-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_cancel_action[3-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_cancel_action[4-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_cancel_action[5-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_cancel_action[6-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_cancel_action_guest not has cache
ERROR
tests/test_views.py::test_send_mail_nologin /workflow/send_mail/1/a
PASSED
tests/test_views.py::test_send_mail_users[0-200] start comm
end_comm
end commit
/workflow/send_mail/1/a
PASSED
tests/test_views.py::test_send_mail_users[1-200] start comm
end_comm
end commit
/workflow/send_mail/1/a
PASSED
tests/test_views.py::test_send_mail_users[2-200] start comm
end_comm
end commit
/workflow/send_mail/1/a
PASSED
tests/test_views.py::test_send_mail_users[3-200] start comm
end_comm
end commit
/workflow/send_mail/1/a
PASSED
tests/test_views.py::test_send_mail_users[4-200] start comm
end_comm
end commit
/workflow/send_mail/1/a
PASSED
tests/test_views.py::test_send_mail_users[5-200] start comm
end_comm
end commit
/workflow/send_mail/1/a
PASSED
tests/test_views.py::test_send_mail_users[6-200] start comm
end_comm
end commit
/workflow/send_mail/1/a
PASSED
tests/test_views.py::test_lock_activity_nologin /workflow/activity/lock/1
PASSED
tests/test_views.py::test_lock_activity_users[0-200] start comm
end_comm
end commit
/workflow/activity/lock/1
PASSED
tests/test_views.py::test_lock_activity_users[1-200] start comm
end_comm
end commit
/workflow/activity/lock/1
PASSED
tests/test_views.py::test_lock_activity_users[2-200] start comm
end_comm
end commit
/workflow/activity/lock/1
PASSED
tests/test_views.py::test_lock_activity_users[3-200] start comm
end_comm
end commit
/workflow/activity/lock/1
PASSED
tests/test_views.py::test_lock_activity_users[4-200] start comm
end_comm
end commit
/workflow/activity/lock/1
PASSED
tests/test_views.py::test_lock_activity_users[5-200] start comm
end_comm
end commit
/workflow/activity/lock/1
PASSED
tests/test_views.py::test_lock_activity_users[6-200] start comm
end_comm
end commit
/workflow/activity/lock/1
PASSED
tests/test_views.py::test_lock_activity[0-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_lock_activity[1-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_lock_activity[2-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_lock_activity[3-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_lock_activity[4-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_lock_activity[5-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_lock_activity[6-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_unlock_activity_acl_nologin /workflow/activity/unlock/1
PASSED
tests/test_views.py::test_unlock_activity_acl_users[0-200] start comm
end_comm
end commit
/workflow/activity/unlock/1
PASSED
tests/test_views.py::test_unlock_activity_acl_users[1-200] start comm
end_comm
end commit
/workflow/activity/unlock/1
PASSED
tests/test_views.py::test_unlock_activity_acl_users[2-200] start comm
end_comm
end commit
/workflow/activity/unlock/1
PASSED
tests/test_views.py::test_unlock_activity_acl_users[3-200] start comm
end_comm
end commit
/workflow/activity/unlock/1
PASSED
tests/test_views.py::test_unlock_activity_acl_users[4-200] start comm
end_comm
end commit
/workflow/activity/unlock/1
PASSED
tests/test_views.py::test_unlock_activity_acl_users[5-200] start comm
end_comm
end commit
/workflow/activity/unlock/1
PASSED
tests/test_views.py::test_unlock_activity_acl_users[6-200] start comm
end_comm
end commit
/workflow/activity/unlock/1
PASSED
tests/test_views.py::test_unlock_activity[0-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_unlock_activity[1-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_unlock_activity[2-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_unlock_activity[3-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_unlock_activity[4-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_unlock_activity[5-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_unlock_activity[6-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_check_approval_acl_nologin /workflow/check_approval/1
PASSED
tests/test_views.py::test_check_approval_acl_users[0-200] start comm
end_comm
end commit
/workflow/check_approval/1
PASSED
tests/test_views.py::test_check_approval_acl_users[1-200] start comm
end_comm
end commit
/workflow/check_approval/1
PASSED
tests/test_views.py::test_check_approval_acl_users[2-200] start comm
end_comm
end commit
/workflow/check_approval/1
PASSED
tests/test_views.py::test_check_approval_acl_users[3-200] start comm
end_comm
end commit
/workflow/check_approval/1
PASSED
tests/test_views.py::test_check_approval_acl_users[4-200] start comm
end_comm
end commit
/workflow/check_approval/1
PASSED
tests/test_views.py::test_check_approval_acl_users[5-200] start comm
end_comm
end commit
/workflow/check_approval/1
PASSED
tests/test_views.py::test_check_approval_acl_users[6-200] start comm
end_comm
end commit
/workflow/check_approval/1
PASSED
tests/test_views.py::test_check_approval[0-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_check_approval[1-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_check_approval[2-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_check_approval[3-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_check_approval[4-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_check_approval[5-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_check_approval[6-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_get_feedback_maillist_acl_nologin /workflow/get_feedback_maillist/1
PASSED
tests/test_views.py::test_get_feedback_maillist_acl_users[0-200] start comm
end_comm
end commit
/workflow/get_feedback_maillist/1
PASSED
tests/test_views.py::test_get_feedback_maillist_acl_users[1-200] start comm
end_comm
end commit
/workflow/get_feedback_maillist/1
PASSED
tests/test_views.py::test_get_feedback_maillist_acl_users[2-200] start comm
end_comm
end commit
/workflow/get_feedback_maillist/1
PASSED
tests/test_views.py::test_get_feedback_maillist_acl_users[3-200] start comm
end_comm
end commit
/workflow/get_feedback_maillist/1
PASSED
tests/test_views.py::test_get_feedback_maillist_acl_users[4-200] start comm
end_comm
end commit
/workflow/get_feedback_maillist/1
PASSED
tests/test_views.py::test_get_feedback_maillist_acl_users[5-200] start comm
end_comm
end commit
/workflow/get_feedback_maillist/1
PASSED
tests/test_views.py::test_get_feedback_maillist_acl_users[6-200] start comm
end_comm
end commit
/workflow/get_feedback_maillist/1
PASSED
tests/test_views.py::test_get_feedback_maillist[0-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_get_feedback_maillist[1-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_get_feedback_maillist[2-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_get_feedback_maillist[3-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_get_feedback_maillist[4-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_get_feedback_maillist[5-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_get_feedback_maillist[6-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_save_activity_acl_nologin /workflow/save_activity_data
PASSED
tests/test_views.py::test_save_activity_acl_users[0-200] start comm
end_comm
end commit
/workflow/save_activity_data
PASSED
tests/test_views.py::test_save_activity_acl_users[1-200] start comm
end_comm
end commit
/workflow/save_activity_data
PASSED
tests/test_views.py::test_save_activity_acl_users[2-200] start comm
end_comm
end commit
/workflow/save_activity_data
PASSED
tests/test_views.py::test_save_activity_acl_users[3-200] start comm
end_comm
end commit
/workflow/save_activity_data
PASSED
tests/test_views.py::test_save_activity_acl_users[4-200] start comm
end_comm
end commit
/workflow/save_activity_data
PASSED
tests/test_views.py::test_save_activity_acl_users[5-200] start comm
end_comm
end commit
/workflow/save_activity_data
PASSED
tests/test_views.py::test_save_activity_acl_users[6-200] start comm
end_comm
end commit
/workflow/save_activity_data
PASSED
tests/test_views.py::test_save_activity_acl_guestlogin /workflow/save_activity_data
PASSED
tests/test_views.py::test_save_activity[0-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_save_activity[1-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_save_activity[2-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_save_activity[3-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_save_activity[4-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_save_activity[5-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_save_activity[6-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_save_activity_guestlogin /workflow/save_activity_data
PASSED
tests/test_views.py::test_display_activity_nologin /workflow/activity/detail/1
PASSED
tests/test_views.py::test_display_activity_users[0-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_display_activity_users[1-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_display_activity_users[2-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_display_activity_users[3-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_display_activity_users[4-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_display_activity_users[5-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_display_activity_users[6-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_display_activity[0-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_display_activity[1-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_display_activity[2-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_display_activity[3-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_display_activity[4-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_display_activity[5-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_display_activity[6-200] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_nologin /workflow/activity/detail/1/1/withdraw
PASSED
tests/test_views.py::test_withdraw_confirm_users[0-403-False] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_users[1-403-True] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_users[2-403-True] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_users[3-403-True] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_users[4-403-False] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_users[5-403-False] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_users[6-403-True] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_guestlogin not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_exception1[0] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_exception1[1] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_exception1[2] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_exception1[3] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_exception1[4] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_exception1[5] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_exception1[6] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_exception1_guestlogin start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_exception2[0-input_data0-500--1-{'passwd': ['Missing data for required field.']}] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_exception2[0-input_data1-500--1-{'passwd': ['Field may not be null.']}] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_exception2[0-input_data2-500--1-bad identifier data] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_exception2[0-input_data3-500--1-Invalid password] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_exception2[1-input_data0-500--1-{'passwd': ['Missing data for required field.']}] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_exception2[1-input_data1-500--1-{'passwd': ['Field may not be null.']}] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_exception2[1-input_data2-500--1-bad identifier data] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_exception2[1-input_data3-500--1-Invalid password] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_exception2[2-input_data0-500--1-{'passwd': ['Missing data for required field.']}] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_exception2[2-input_data1-500--1-{'passwd': ['Field may not be null.']}] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_exception2[2-input_data2-500--1-bad identifier data] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_exception2[2-input_data3-500--1-Invalid password] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_exception2[3-input_data0-500--1-{'passwd': ['Missing data for required field.']}] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_exception2[3-input_data1-500--1-{'passwd': ['Field may not be null.']}] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_exception2[3-input_data2-500--1-bad identifier data] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_exception2[3-input_data3-500--1-Invalid password] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_exception2[4-input_data0-500--1-{'passwd': ['Missing data for required field.']}] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_exception2[4-input_data1-500--1-{'passwd': ['Field may not be null.']}] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_exception2[4-input_data2-500--1-bad identifier data] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_exception2[4-input_data3-500--1-Invalid password] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_exception2[5-input_data0-500--1-{'passwd': ['Missing data for required field.']}] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_exception2[5-input_data1-500--1-{'passwd': ['Field may not be null.']}] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_exception2[5-input_data2-500--1-bad identifier data] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_exception2[5-input_data3-500--1-Invalid password] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_exception2[6-input_data0-500--1-{'passwd': ['Missing data for required field.']}] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_exception2[6-input_data1-500--1-{'passwd': ['Field may not be null.']}] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_exception2[6-input_data2-500--1-bad identifier data] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_exception2[6-input_data3-500--1-Invalid password] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_exception2_guestlogin[input_data0-500--1-{'passwd': ['Missing data for required field.']}] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_exception2_guestlogin[input_data1-500--1-{'passwd': ['Field may not be null.']}] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_exception2_guestlogin[input_data2-500--1-bad identifier data] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_exception2_guestlogin[input_data3-500--1-Invalid password] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_passwd_delete[0-success-200-0-success] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_passwd_delete[1-success-200-0-success] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_passwd_delete[2-success-200-0-success] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_passwd_delete[3-success-200-0-success] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_passwd_delete[4-success-200-0-success] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_passwd_delete[5-success-200-0-success] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_passwd_delete[6-success-200-0-success] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_withdraw_confirm_passwd_delete_guestlogin[success-200-0-success] start comm
end_comm
end commit
not has cache
ERROR
tests/test_views.py::test_download_activitylog_nologin /workflow/download_activitylog/
PASSED
tests/test_views.py::test_download_activitylog_1[0-403] not has cache
ERROR
tests/test_views.py::test_download_activitylog_1[1-200] not has cache
ERROR
tests/test_views.py::test_download_activitylog_1[2-200] not has cache
ERROR
tests/test_views.py::test_download_activitylog_1[3-403] not has cache
ERROR
tests/test_views.py::test_download_activitylog_1[4-403] not has cache
ERROR
tests/test_views.py::test_download_activitylog_1[5-403] not has cache
ERROR
tests/test_views.py::test_download_activitylog_1[6-200] not has cache
ERROR
tests/test_views.py::test_download_activitylog_2[1-200] not has cache
ERROR
tests/test_views.py::test_download_activitylog_2[2-200] not has cache
ERROR
tests/test_views.py::test_download_activitylog_2[6-200] not has cache
ERROR
tests/test_views.py::test_clear_activitylog_nologin /workflow/clear_activitylog/
PASSED
tests/test_views.py::test_clear_activitylog_1[0-403] not has cache
ERROR
tests/test_views.py::test_clear_activitylog_1[1-200] not has cache
ERROR
tests/test_views.py::test_clear_activitylog_1[2-200] not has cache
ERROR
tests/test_views.py::test_clear_activitylog_1[3-403] not has cache
ERROR
tests/test_views.py::test_clear_activitylog_1[4-403] not has cache
ERROR
tests/test_views.py::test_clear_activitylog_1[5-403] not has cache
ERROR
tests/test_views.py::test_clear_activitylog_1[6-200] not has cache
ERROR
tests/test_views.py::test_clear_activitylog_2[1-200] not has cache
ERROR
tests/test_views.py::test_clear_activitylog_2[2-200] not has cache
ERROR
tests/test_views.py::test_clear_activitylog_2[6-200] not has cache
ERROR
tests/test_views.py::test_clear_activitylog_3[1-200] not has cache
ERROR
tests/test_views.py::test_clear_activitylog_3[2-200] not has cache
ERROR
tests/test_views.py::test_clear_activitylog_3[6-200] not has cache
ERROR
tests/test_views.py::test_clear_activitylog_4[1-200] not has cache
ERROR
tests/test_views.py::test_clear_activitylog_4[2-200] not has cache
ERROR
tests/test_views.py::test_clear_activitylog_4[6-200] not has cache
ERROR
tests/test_views.py::test_clear_activitylog_5[0-403] not has cache
ERROR
tests/test_views.py::test_clear_activitylog_5[1-200] not has cache
ERROR
tests/test_views.py::test_clear_activitylog_5[2-200] not has cache
ERROR
tests/test_views.py::test_clear_activitylog_5[3-403] not has cache
ERROR
tests/test_views.py::test_clear_activitylog_5[4-403] not has cache
ERROR
tests/test_views.py::test_clear_activitylog_5[5-403] not has cache
ERROR
tests/test_views.py::test_clear_activitylog_5[6-200] not has cache
ERROR
tests/test_views.py::test_clear_activitylog_6[1-200] not has cache
ERROR
tests/test_views.py::test_clear_activitylog_6[2-200] not has cache
ERROR
tests/test_views.py::test_clear_activitylog_6[6-200] not has cache
ERROR
tests/test_views.py::test_clear_activitylog_7[1-200] not has cache
ERROR
tests/test_views.py::test_clear_activitylog_7[2-200] not has cache
ERROR
tests/test_views.py::test_clear_activitylog_7[6-200] not has cache
ERROR
tests/test_views.py::test_clear_activitylog_8[1-200] not has cache
ERROR
tests/test_views.py::test_clear_activitylog_8[2-200] not has cache
ERROR
tests/test_views.py::test_clear_activitylog_8[6-200] not has cache
ERROR
tests/test_views.py::test_clear_activitylog_9[0-403] not has cache
ERROR
tests/test_views.py::test_clear_activitylog_9[1-200] not has cache
ERROR
tests/test_views.py::test_clear_activitylog_9[2-200] not has cache
ERROR
tests/test_views.py::test_clear_activitylog_9[3-403] not has cache
ERROR
tests/test_views.py::test_clear_activitylog_9[4-403] not has cache
ERROR
tests/test_views.py::test_clear_activitylog_9[5-403] not has cache
ERROR
tests/test_views.py::test_clear_activitylog_9[6-200] not has cache
ERROR

==================================== ERRORS ====================================
__________ ERROR at setup of test_WorkActivity_get_all_activity_list ___________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
________ ERROR at setup of test_WorkActivity_get_activity_index_search _________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
___________ ERROR at setup of test_WorkActivity_upt_activity_detail ____________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
____ ERROR at setup of test_WorkActivity_get_corresponding_usage_activities ____

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
___________________ ERROR at setup of test_upt_activity_item ___________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
__________________ ERROR at setup of test_saving_doi_pidstore __________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_____________________ ERROR at setup of test_register_hdl ______________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
________________ ERROR at setup of test_register_hdl_by_item_id ________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
________________ ERROR at setup of test_register_hdl_by_handle _________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_______________ ERROR at setup of test_item_metadata_validation ________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_______________ ERROR at setup of test_validation_item_property ________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______________ ERROR at setup of test_handle_check_required_data _______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_______ ERROR at setup of test_handle_check_required_pattern_and_either ________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_______ ERROR at setup of test_get_activity_id_of_record_without_version _______

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
__________________ ERROR at setup of test_MappingData__init__ __________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
____________ ERROR at setup of test_MappingData_get_data_by_mapping ____________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________ ERROR at setup of test_MappingData_get_first_data_by_mapping _________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_______ ERROR at setup of test_MappingData_get_first_property_by_mapping _______

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_______________ ERROR at setup of test_IdentifierHandle___init__ _______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_____________ ERROR at setup of test_IdentifierHandle_get_pidstore _____________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________ ERROR at setup of test_IdentifierHandle_check_pidstore_exist _________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
__________ ERROR at setup of test_IdentifierHandle_register_pidstore ___________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________ ERROR at setup of test_IdentifierHandle_delete_pidstore_doi __________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
___ ERROR at setup of test_IdentifierHandle_remove_idt_registration_metadata ___

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
___ ERROR at setup of test_IdentifierHandle_update_idt_registration_metadata ___

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______ ERROR at setup of test_IdentifierHandle_get_idt_registration_data _______

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
________________ ERROR at setup of test_IdentifierHandle_commit ________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_____________________ ERROR at setup of test_delete_bucket _____________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
____________ ERROR at setup of test_merge_buckets_by_records[True] _____________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
____________ ERROR at setup of test_merge_buckets_by_records[False] ____________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
____________ ERROR at setup of test_merge_buckets_by_records_error _____________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
________________ ERROR at setup of test_set_bucket_default_size ________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_______________ ERROR at setup of test_get_parent_pid_with_type ________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
____________ ERROR at setup of test_convert_record_to_item_metadata ____________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________________ ERROR at setup of test_prepare_edit_workflow _________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
________________ ERROR at setup of test_handle_finish_workflow _________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
___________________ ERROR at setup of test_check_existed_doi ___________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
________________ ERROR at setup of test_get_record_by_root_ver _________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
___________ ERROR at setup of test_get_disptype_and_ver_in_metainfo ____________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
________________ ERROR at setup of test_set_files_display_type _________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
____________________ ERROR at setup of test_get_thumbnails _____________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_______________ ERROR at setup of test_get_allow_multi_thumbnail _______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
____________ ERROR at setup of test_is_usage_application_item_type _____________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________________ ERROR at setup of test_is_usage_application __________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_____________________ ERROR at setup of test_register_info _____________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_____________________ ERROR at setup of test_get_item_info _____________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_____________________ ERROR at setup of test_set_mail_info _____________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______________ ERROR at setup of test_process_send_reminder_mail _______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
____________ ERROR at setup of test_process_send_notification_mail _____________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
___________ ERROR at setup of test_get_application_and_approval_date ___________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_____________ ERROR at setup of test_get_workflow_item_type_names ______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
__________________ ERROR at setup of test_create_usage_report __________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
________________ ERROR at setup of test_create_record_metadata _________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________________ ERROR at setup of test_modify_item_metadata __________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
________________ ERROR at setup of test_update_activity_action _________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
____________________ ERROR at setup of test_check_continue _____________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_____________ ERROR at setup of test_init_activity_for_guest_user ______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_______________ ERROR at setup of test_get_activity_display_info _______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________ ERROR at setup of test___init_activity_detail_data_for_guest _________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
____________ ERROR at setup of test_prepare_data_for_guest_activity ____________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_____________ ERROR at setup of test_cancel_expired_usage_reports ______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______________ ERROR at setup of test_process_send_approval_mails ______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
____________________ ERROR at setup of test_get_usage_data _____________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________________ ERROR at setup of test_update_approval_date __________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
____________ ERROR at setup of test_create_record_metadata_for_user ____________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________ ERROR at setup of test_update_system_data_for_item_metadata __________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
___________ ERROR at setup of test_update_approval_date_for_deposit ____________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
____________ ERROR at setup of test_update_system_data_for_activity ____________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_______________ ERROR at setup of test_check_authority_by_admin ________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_______________ ERROR at setup of test_get_record_first_version ________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
________________ ERROR at setup of test_get_files_and_thumbnail ________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
__________________ ERROR at setup of test_get_pid_and_record ___________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________ ERROR at setup of test_get_items_metadata_by_activity_detail _________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
________________ ERROR at setup of test_get_main_record_detail _________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_______________ ERROR at setup of test_prepare_doi_link_workflow _______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
___________ ERROR at setup of test_get_pid_value_by_activity_detail ____________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________________ ERROR at setup of test_make_activitylog_tsv __________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
____________________ ERROR at setup of test_iframe_success _____________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_______________ ERROR at setup of test_init_activity_acl[0-200] ________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_______________ ERROR at setup of test_init_activity_acl[1-200] ________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_______________ ERROR at setup of test_init_activity_acl[2-200] ________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_______________ ERROR at setup of test_init_activity_acl[3-200] ________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_______________ ERROR at setup of test_init_activity_acl[4-200] ________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_______________ ERROR at setup of test_init_activity_acl[5-200] ________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_______________ ERROR at setup of test_init_activity_acl[6-200] ________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________________ ERROR at setup of test_init_activity[0-200] __________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________________ ERROR at setup of test_init_activity[1-200] __________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________________ ERROR at setup of test_init_activity[2-200] __________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________________ ERROR at setup of test_init_activity[3-200] __________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________________ ERROR at setup of test_init_activity[4-200] __________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________________ ERROR at setup of test_init_activity[5-200] __________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________________ ERROR at setup of test_init_activity[6-200] __________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
__________ ERROR at setup of test_save_feedback_maillist_users[0-200] __________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
__________ ERROR at setup of test_save_feedback_maillist_users[1-200] __________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
__________ ERROR at setup of test_save_feedback_maillist_users[2-200] __________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
__________ ERROR at setup of test_save_feedback_maillist_users[3-200] __________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
__________ ERROR at setup of test_save_feedback_maillist_users[4-200] __________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
__________ ERROR at setup of test_save_feedback_maillist_users[5-200] __________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
__________ ERROR at setup of test_save_feedback_maillist_users[6-200] __________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
________ ERROR at setup of test_previous_action_acl_users[0-403-False] _________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________ ERROR at setup of test_previous_action_acl_users[1-403-True] _________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________ ERROR at setup of test_previous_action_acl_users[2-403-True] _________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________ ERROR at setup of test_previous_action_acl_users[3-403-True] _________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
________ ERROR at setup of test_previous_action_acl_users[4-403-False] _________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
________ ERROR at setup of test_previous_action_acl_users[5-403-False] _________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________ ERROR at setup of test_previous_action_acl_users[6-403-True] _________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
________________ ERROR at setup of test_previous_action[0-200] _________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
________________ ERROR at setup of test_previous_action[1-200] _________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
________________ ERROR at setup of test_previous_action[2-200] _________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
________________ ERROR at setup of test_previous_action[3-200] _________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
________________ ERROR at setup of test_previous_action[4-200] _________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
________________ ERROR at setup of test_previous_action[5-200] _________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
________________ ERROR at setup of test_previous_action[6-200] _________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
________________ ERROR at setup of test_next_action_acl_nologin ________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
__________ ERROR at setup of test_next_action_acl_users[0-403-False] ___________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
___________ ERROR at setup of test_next_action_acl_users[1-403-True] ___________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
___________ ERROR at setup of test_next_action_acl_users[2-403-True] ___________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
___________ ERROR at setup of test_next_action_acl_users[3-403-True] ___________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
__________ ERROR at setup of test_next_action_acl_users[4-403-False] ___________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
__________ ERROR at setup of test_next_action_acl_users[5-403-False] ___________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
___________ ERROR at setup of test_next_action_acl_users[6-403-True] ___________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______________ ERROR at setup of test_next_action_acl_guestlogin _______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
__________________ ERROR at setup of test_next_action[0-200] ___________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
__________________ ERROR at setup of test_next_action[1-200] ___________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
__________________ ERROR at setup of test_next_action[2-200] ___________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
__________________ ERROR at setup of test_next_action[3-200] ___________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
__________________ ERROR at setup of test_next_action[4-200] ___________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
__________________ ERROR at setup of test_next_action[5-200] ___________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
__________________ ERROR at setup of test_next_action[6-200] ___________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________ ERROR at setup of test_cancel_action_acl_users[0-403-False] __________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
__________ ERROR at setup of test_cancel_action_acl_users[1-403-True] __________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
__________ ERROR at setup of test_cancel_action_acl_users[2-403-True] __________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
__________ ERROR at setup of test_cancel_action_acl_users[3-403-True] __________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________ ERROR at setup of test_cancel_action_acl_users[4-403-False] __________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________ ERROR at setup of test_cancel_action_acl_users[5-403-False] __________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
__________ ERROR at setup of test_cancel_action_acl_users[6-403-True] __________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_____________ ERROR at setup of test_cancel_action_acl_guestlogin ______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________________ ERROR at setup of test_cancel_action[0-200] __________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________________ ERROR at setup of test_cancel_action[1-200] __________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________________ ERROR at setup of test_cancel_action[2-200] __________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________________ ERROR at setup of test_cancel_action[3-200] __________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________________ ERROR at setup of test_cancel_action[4-200] __________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________________ ERROR at setup of test_cancel_action[5-200] __________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________________ ERROR at setup of test_cancel_action[6-200] __________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
__________________ ERROR at setup of test_cancel_action_guest __________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________________ ERROR at setup of test_lock_activity[0-200] __________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________________ ERROR at setup of test_lock_activity[1-200] __________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________________ ERROR at setup of test_lock_activity[2-200] __________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________________ ERROR at setup of test_lock_activity[3-200] __________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________________ ERROR at setup of test_lock_activity[4-200] __________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________________ ERROR at setup of test_lock_activity[5-200] __________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________________ ERROR at setup of test_lock_activity[6-200] __________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
________________ ERROR at setup of test_unlock_activity[0-200] _________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
________________ ERROR at setup of test_unlock_activity[1-200] _________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
________________ ERROR at setup of test_unlock_activity[2-200] _________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
________________ ERROR at setup of test_unlock_activity[3-200] _________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
________________ ERROR at setup of test_unlock_activity[4-200] _________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
________________ ERROR at setup of test_unlock_activity[5-200] _________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
________________ ERROR at setup of test_unlock_activity[6-200] _________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________________ ERROR at setup of test_check_approval[0-200] _________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________________ ERROR at setup of test_check_approval[1-200] _________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________________ ERROR at setup of test_check_approval[2-200] _________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________________ ERROR at setup of test_check_approval[3-200] _________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________________ ERROR at setup of test_check_approval[4-200] _________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________________ ERROR at setup of test_check_approval[5-200] _________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________________ ERROR at setup of test_check_approval[6-200] _________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_____________ ERROR at setup of test_get_feedback_maillist[0-200] ______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_____________ ERROR at setup of test_get_feedback_maillist[1-200] ______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_____________ ERROR at setup of test_get_feedback_maillist[2-200] ______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_____________ ERROR at setup of test_get_feedback_maillist[3-200] ______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_____________ ERROR at setup of test_get_feedback_maillist[4-200] ______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_____________ ERROR at setup of test_get_feedback_maillist[5-200] ______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_____________ ERROR at setup of test_get_feedback_maillist[6-200] ______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________________ ERROR at setup of test_save_activity[0-200] __________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________________ ERROR at setup of test_save_activity[1-200] __________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________________ ERROR at setup of test_save_activity[2-200] __________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________________ ERROR at setup of test_save_activity[3-200] __________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________________ ERROR at setup of test_save_activity[4-200] __________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________________ ERROR at setup of test_save_activity[5-200] __________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_________________ ERROR at setup of test_save_activity[6-200] __________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_____________ ERROR at setup of test_display_activity_users[0-200] _____________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_____________ ERROR at setup of test_display_activity_users[1-200] _____________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_____________ ERROR at setup of test_display_activity_users[2-200] _____________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_____________ ERROR at setup of test_display_activity_users[3-200] _____________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_____________ ERROR at setup of test_display_activity_users[4-200] _____________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_____________ ERROR at setup of test_display_activity_users[5-200] _____________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_____________ ERROR at setup of test_display_activity_users[6-200] _____________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
________________ ERROR at setup of test_display_activity[0-200] ________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
________________ ERROR at setup of test_display_activity[1-200] ________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
________________ ERROR at setup of test_display_activity[2-200] ________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
________________ ERROR at setup of test_display_activity[3-200] ________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
________________ ERROR at setup of test_display_activity[4-200] ________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
________________ ERROR at setup of test_display_activity[5-200] ________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
________________ ERROR at setup of test_display_activity[6-200] ________________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
__________ ERROR at setup of test_withdraw_confirm_users[0-403-False] __________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
__________ ERROR at setup of test_withdraw_confirm_users[1-403-True] ___________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
__________ ERROR at setup of test_withdraw_confirm_users[2-403-True] ___________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
__________ ERROR at setup of test_withdraw_confirm_users[3-403-True] ___________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
__________ ERROR at setup of test_withdraw_confirm_users[4-403-False] __________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
__________ ERROR at setup of test_withdraw_confirm_users[5-403-False] __________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
__________ ERROR at setup of test_withdraw_confirm_users[6-403-True] ___________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______________ ERROR at setup of test_withdraw_confirm_guestlogin ______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
____________ ERROR at setup of test_withdraw_confirm_exception1[0] _____________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
____________ ERROR at setup of test_withdraw_confirm_exception1[1] _____________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
____________ ERROR at setup of test_withdraw_confirm_exception1[2] _____________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
____________ ERROR at setup of test_withdraw_confirm_exception1[3] _____________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
____________ ERROR at setup of test_withdraw_confirm_exception1[4] _____________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
____________ ERROR at setup of test_withdraw_confirm_exception1[5] _____________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
____________ ERROR at setup of test_withdraw_confirm_exception1[6] _____________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
________ ERROR at setup of test_withdraw_confirm_exception1_guestlogin _________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_ ERROR at setup of test_withdraw_confirm_exception2[0-input_data0-500--1-{'passwd': ['Missing data for required field.']}] _

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_ ERROR at setup of test_withdraw_confirm_exception2[0-input_data1-500--1-{'passwd': ['Field may not be null.']}] _

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_ ERROR at setup of test_withdraw_confirm_exception2[0-input_data2-500--1-bad identifier data] _

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_ ERROR at setup of test_withdraw_confirm_exception2[0-input_data3-500--1-Invalid password] _

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_ ERROR at setup of test_withdraw_confirm_exception2[1-input_data0-500--1-{'passwd': ['Missing data for required field.']}] _

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_ ERROR at setup of test_withdraw_confirm_exception2[1-input_data1-500--1-{'passwd': ['Field may not be null.']}] _

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_ ERROR at setup of test_withdraw_confirm_exception2[1-input_data2-500--1-bad identifier data] _

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_ ERROR at setup of test_withdraw_confirm_exception2[1-input_data3-500--1-Invalid password] _

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_ ERROR at setup of test_withdraw_confirm_exception2[2-input_data0-500--1-{'passwd': ['Missing data for required field.']}] _

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_ ERROR at setup of test_withdraw_confirm_exception2[2-input_data1-500--1-{'passwd': ['Field may not be null.']}] _

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_ ERROR at setup of test_withdraw_confirm_exception2[2-input_data2-500--1-bad identifier data] _

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_ ERROR at setup of test_withdraw_confirm_exception2[2-input_data3-500--1-Invalid password] _

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_ ERROR at setup of test_withdraw_confirm_exception2[3-input_data0-500--1-{'passwd': ['Missing data for required field.']}] _

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_ ERROR at setup of test_withdraw_confirm_exception2[3-input_data1-500--1-{'passwd': ['Field may not be null.']}] _

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_ ERROR at setup of test_withdraw_confirm_exception2[3-input_data2-500--1-bad identifier data] _

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_ ERROR at setup of test_withdraw_confirm_exception2[3-input_data3-500--1-Invalid password] _

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_ ERROR at setup of test_withdraw_confirm_exception2[4-input_data0-500--1-{'passwd': ['Missing data for required field.']}] _

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_ ERROR at setup of test_withdraw_confirm_exception2[4-input_data1-500--1-{'passwd': ['Field may not be null.']}] _

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_ ERROR at setup of test_withdraw_confirm_exception2[4-input_data2-500--1-bad identifier data] _

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_ ERROR at setup of test_withdraw_confirm_exception2[4-input_data3-500--1-Invalid password] _

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_ ERROR at setup of test_withdraw_confirm_exception2[5-input_data0-500--1-{'passwd': ['Missing data for required field.']}] _

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_ ERROR at setup of test_withdraw_confirm_exception2[5-input_data1-500--1-{'passwd': ['Field may not be null.']}] _

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_ ERROR at setup of test_withdraw_confirm_exception2[5-input_data2-500--1-bad identifier data] _

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_ ERROR at setup of test_withdraw_confirm_exception2[5-input_data3-500--1-Invalid password] _

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_ ERROR at setup of test_withdraw_confirm_exception2[6-input_data0-500--1-{'passwd': ['Missing data for required field.']}] _

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_ ERROR at setup of test_withdraw_confirm_exception2[6-input_data1-500--1-{'passwd': ['Field may not be null.']}] _

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_ ERROR at setup of test_withdraw_confirm_exception2[6-input_data2-500--1-bad identifier data] _

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_ ERROR at setup of test_withdraw_confirm_exception2[6-input_data3-500--1-Invalid password] _

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_ ERROR at setup of test_withdraw_confirm_exception2_guestlogin[input_data0-500--1-{'passwd': ['Missing data for required field.']}] _

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_ ERROR at setup of test_withdraw_confirm_exception2_guestlogin[input_data1-500--1-{'passwd': ['Field may not be null.']}] _

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_ ERROR at setup of test_withdraw_confirm_exception2_guestlogin[input_data2-500--1-bad identifier data] _

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_ ERROR at setup of test_withdraw_confirm_exception2_guestlogin[input_data3-500--1-Invalid password] _

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_ ERROR at setup of test_withdraw_confirm_passwd_delete[0-success-200-0-success] _

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_ ERROR at setup of test_withdraw_confirm_passwd_delete[1-success-200-0-success] _

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_ ERROR at setup of test_withdraw_confirm_passwd_delete[2-success-200-0-success] _

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_ ERROR at setup of test_withdraw_confirm_passwd_delete[3-success-200-0-success] _

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_ ERROR at setup of test_withdraw_confirm_passwd_delete[4-success-200-0-success] _

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_ ERROR at setup of test_withdraw_confirm_passwd_delete[5-success-200-0-success] _

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_ ERROR at setup of test_withdraw_confirm_passwd_delete[6-success-200-0-success] _

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_ ERROR at setup of test_withdraw_confirm_passwd_delete_guestlogin[success-200-0-success] _

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_____________ ERROR at setup of test_download_activitylog_1[0-403] _____________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_____________ ERROR at setup of test_download_activitylog_1[1-200] _____________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_____________ ERROR at setup of test_download_activitylog_1[2-200] _____________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_____________ ERROR at setup of test_download_activitylog_1[3-403] _____________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_____________ ERROR at setup of test_download_activitylog_1[4-403] _____________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_____________ ERROR at setup of test_download_activitylog_1[5-403] _____________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_____________ ERROR at setup of test_download_activitylog_1[6-200] _____________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_____________ ERROR at setup of test_download_activitylog_2[1-200] _____________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_____________ ERROR at setup of test_download_activitylog_2[2-200] _____________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_____________ ERROR at setup of test_download_activitylog_2[6-200] _____________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______________ ERROR at setup of test_clear_activitylog_1[0-403] _______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______________ ERROR at setup of test_clear_activitylog_1[1-200] _______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______________ ERROR at setup of test_clear_activitylog_1[2-200] _______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______________ ERROR at setup of test_clear_activitylog_1[3-403] _______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______________ ERROR at setup of test_clear_activitylog_1[4-403] _______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______________ ERROR at setup of test_clear_activitylog_1[5-403] _______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______________ ERROR at setup of test_clear_activitylog_1[6-200] _______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______________ ERROR at setup of test_clear_activitylog_2[1-200] _______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______________ ERROR at setup of test_clear_activitylog_2[2-200] _______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______________ ERROR at setup of test_clear_activitylog_2[6-200] _______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______________ ERROR at setup of test_clear_activitylog_3[1-200] _______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______________ ERROR at setup of test_clear_activitylog_3[2-200] _______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______________ ERROR at setup of test_clear_activitylog_3[6-200] _______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______________ ERROR at setup of test_clear_activitylog_4[1-200] _______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______________ ERROR at setup of test_clear_activitylog_4[2-200] _______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______________ ERROR at setup of test_clear_activitylog_4[6-200] _______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______________ ERROR at setup of test_clear_activitylog_5[0-403] _______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______________ ERROR at setup of test_clear_activitylog_5[1-200] _______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______________ ERROR at setup of test_clear_activitylog_5[2-200] _______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______________ ERROR at setup of test_clear_activitylog_5[3-403] _______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______________ ERROR at setup of test_clear_activitylog_5[4-403] _______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______________ ERROR at setup of test_clear_activitylog_5[5-403] _______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______________ ERROR at setup of test_clear_activitylog_5[6-200] _______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______________ ERROR at setup of test_clear_activitylog_6[1-200] _______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______________ ERROR at setup of test_clear_activitylog_6[2-200] _______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______________ ERROR at setup of test_clear_activitylog_6[6-200] _______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______________ ERROR at setup of test_clear_activitylog_7[1-200] _______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______________ ERROR at setup of test_clear_activitylog_7[2-200] _______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______________ ERROR at setup of test_clear_activitylog_7[6-200] _______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______________ ERROR at setup of test_clear_activitylog_8[1-200] _______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______________ ERROR at setup of test_clear_activitylog_8[2-200] _______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______________ ERROR at setup of test_clear_activitylog_8[6-200] _______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______________ ERROR at setup of test_clear_activitylog_9[0-403] _______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______________ ERROR at setup of test_clear_activitylog_9[1-200] _______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______________ ERROR at setup of test_clear_activitylog_9[2-200] _______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______________ ERROR at setup of test_clear_activitylog_9[3-403] _______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______________ ERROR at setup of test_clear_activitylog_9[4-403] _______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______________ ERROR at setup of test_clear_activitylog_9[5-403] _______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______________ ERROR at setup of test_clear_activitylog_9[6-200] _______________

db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
location = local

    @pytest.fixture()
    def db_records(db, location):
        record_data = json_data("data/test_records.json")
        item_data = json_data("data/test_items.json")
        record_num = len(record_data)
        result = []
        for d in range(record_num):
>           result.append(create_record(record_data[d], item_data[d]))

tests/conftest.py:1252: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/helpers.py:109: in create_record
    record = WekoRecord.create(record_data, id_=rec_uuid)
../invenio-records/invenio_records/api.py:177: in create
    record=record
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in send
    for receiver in self.receivers_for(sender)]
.tox/c1/lib/python3.6/site-packages/blinker/base.py:267: in <listcomp>
    for receiver in self.receivers_for(sender)]
../invenio-oaiserver/invenio_oaiserver/receivers.py:28: in __call__
    new_sets = set(get_record_sets(record=record))
../invenio-oaiserver/invenio_oaiserver/percolator.py:133: in get_record_sets
    index, doc_type = RecordIndexer().record_to_index(record)
../invenio-indexer/invenio_indexer/api.py:76: in record_to_index
    return self._record_to_index(record)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:376: in <lambda>
    __call__ = lambda x, *a, **kw: x._get_current_object()(*a, **kw)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _get_current_record_to_index():
>       return current_app.extensions['invenio-indexer'].record_to_index
E       KeyError: 'invenio-indexer'

../invenio-indexer/invenio_indexer/proxies.py:16: KeyError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
=================================== FAILURES ===================================
_______________ TestFlowSettingView.test_flow_detail_acl[1-200] ________________

self = <tests.test_admin.TestFlowSettingView object at 0x7fd282136c18>
client = <FlaskClient <Flask 'testapp'>>
workflow = {'flow': <FlowDefine 1>, 'flow_action': [<FlowAction 1>, <FlowAction 2>, <FlowAction 3>, <FlowAction 4>, <FlowAction 5>, <FlowAction 6>, ...], 'workflow': <WorkFlow 1>}
db_register2 = None
users = [{'email': 'contributor@test.org', 'id': 2, 'obj': <User 2>}, {'email': 'repoadmin@test.org', 'id': 4, 'obj': <User 4>...eneraluser@test.org', 'id': 6, 'obj': <User 6>}, {'email': 'originalroleuser@test.org', 'id': 7, 'obj': <User 7>}, ...]
users_index = 1, status_code = 200

    @pytest.mark.parametrize('users_index, status_code', [
        # (0, 403),
        (1, 200),
        # (2, 200),
        # (3, 200),
        # (4, 200),
        # (5, 200),
        # (6, 200),
    ])
    def test_flow_detail_acl(self,client,workflow,db_register2,users,users_index,status_code):
        flow_define = workflow['flow']
        login(client=client, email=users[users_index]['email'])
        url = '/admin/workflowsetting/{}'.format(0)
        print(url)
        with patch("flask.templating._render", return_value=""):
            res =  client.get(url)
            assert res.status_code == status_code
    
    
        url = '/admin/workflowsetting/{}'.format(flow_define.flow_id)
        with patch("flask.templating._render", return_value=""):
>           res =  client.get(url)

tests/test_admin.py:66: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/werkzeug/test.py:1029: in get
    return self.open(*args, **kw)
.tox/c1/lib/python3.6/site-packages/flask/testing.py:196: in open
    follow_redirects=follow_redirects
.tox/c1/lib/python3.6/site-packages/werkzeug/test.py:993: in open
    response = self.run_wsgi_app(environ.copy(), buffered=buffered)
.tox/c1/lib/python3.6/site-packages/werkzeug/test.py:884: in run_wsgi_app
    rv = run_wsgi_app(self.application, environ, buffered=buffered)
.tox/c1/lib/python3.6/site-packages/werkzeug/test.py:1119: in run_wsgi_app
    app_rv = app(environ, start_response)
.tox/c1/lib/python3.6/site-packages/flask/app.py:2334: in __call__
    return self.wsgi_app(environ, start_response)
.tox/c1/lib/python3.6/site-packages/flask/app.py:2320: in wsgi_app
    response = self.handle_exception(e)
.tox/c1/lib/python3.6/site-packages/flask/app.py:1766: in handle_exception
    reraise(exc_type, exc_value, tb)
.tox/c1/lib/python3.6/site-packages/flask/_compat.py:36: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/flask/app.py:2317: in wsgi_app
    response = self.full_dispatch_request()
.tox/c1/lib/python3.6/site-packages/flask/app.py:1840: in full_dispatch_request
    rv = self.handle_user_exception(e)
.tox/c1/lib/python3.6/site-packages/flask/app.py:1743: in handle_user_exception
    reraise(exc_type, exc_value, tb)
.tox/c1/lib/python3.6/site-packages/flask/_compat.py:36: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/flask/app.py:1838: in full_dispatch_request
    rv = self.dispatch_request()
.tox/c1/lib/python3.6/site-packages/flask/app.py:1824: in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
.tox/c1/lib/python3.6/site-packages/flask_admin/base.py:69: in inner
    return self._run_view(f, *args, **kwargs)
.tox/c1/lib/python3.6/site-packages/flask_admin/base.py:368: in _run_view
    return fn(self, *args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <invenio_admin.views.protected_adminview_factory.<locals>.ProtectedAdminView object at 0x7fd2820b9390>
workflow_id = 'eede3e32-9456-49b8-a0ba-24ee6d7945b1'

    @expose('/<string:workflow_id>', methods=['GET'])
    def workflow_detail(self, workflow_id='0'):
        """Get workflow info.
    
        :return:
        """
        if WEKO_WORKFLOW_SHOW_HARVESTING_ITEMS:
            itemtype_list = ItemTypes.get_latest()
        else:
            itemtype_list = ItemTypes.get_latest_custorm_harvesting()
        flow_api = Flow()
        flow_list = flow_api.get_flow_list()
        index_list = Index().get_all()
        location_list = Location.query.order_by(Location.id.asc()).all()
        hide = []
        role = Role.query.all()
        display_label = self.get_language_workflows("display")
        hide_label = self.get_language_workflows("hide")
        display_hide = self.get_language_workflows("display_hide")
    
        if '0' == workflow_id:
            """Create new workflow"""
            return self.render(
                'weko_workflow/admin/workflow_detail.html',
                workflow=None,
                itemtype_list=itemtype_list,
                flow_list=flow_list,
                index_list=index_list,
                location_list=location_list,
                hide_list=hide,
                display_list=role,
                display_label=display_label,
                hide_label=hide_label,
                display_hide_label=display_hide,
            )
    
        """Update the workflow info"""
        workflow = WorkFlow()
        workflows = workflow.get_workflow_detail(workflow_id)
        hide = Role.query.outerjoin(WorkflowRole) \
>           .filter(WorkflowRole.workflow_id == workflows.id) \
            .filter(WorkflowRole.role_id == Role.id) \
            .all()
E       AttributeError: 'NoneType' object has no attribute 'id'

weko_workflow/admin.py:294: AttributeError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_____________________ TestFlowSettingView.test_update_flow _____________________

self = <tests.test_admin.TestFlowSettingView object at 0x7fd282b879b0>
app = <Flask 'testapp'>
workflow = {'flow': <FlowDefine 1>, 'flow_action': [<FlowAction 1>, <FlowAction 2>, <FlowAction 3>, <FlowAction 4>, <FlowAction 5>, <FlowAction 6>, ...], 'workflow': <WorkFlow 1>}

    def test_update_flow(self,app,workflow):
        with app.test_request_context():
>           assert FlowSettingView.update_flow(0)==""

tests/test_admin.py:79: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
weko_workflow/admin.py:122: in update_flow
    workflow.upt_flow(flow_id, post_data)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <weko_workflow.api.Flow object at 0x7fd281b53a90>, flow_id = 0
flow = None

    def upt_flow(self, flow_id, flow):
        """Update flow info.
    
        :param flow_id:
        :param flow:
        :return:
        """
        try:
>           flow_name = flow.get('flow_name')
E           AttributeError: 'NoneType' object has no attribute 'get'

weko_workflow/api.py:118: AttributeError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
------------------------------ Captured log call -------------------------------
ERROR    flask.app:api.py:141 'NoneType' object has no attribute 'get'
Traceback (most recent call last):
  File "/code/modules/weko-workflow/weko_workflow/api.py", line 118, in upt_flow
    flow_name = flow.get('flow_name')
AttributeError: 'NoneType' object has no attribute 'get'
______________________ TestFlowSettingView.test_new_flow _______________________

self = <tests.test_admin.TestFlowSettingView object at 0x7fd281b6d710>
app = <Flask 'testapp'>
workflow = {'flow': <FlowDefine 1>, 'flow_action': [<FlowAction 1>, <FlowAction 2>, <FlowAction 3>, <FlowAction 4>, <FlowAction 5>, <FlowAction 6>, ...], 'workflow': <WorkFlow 1>}

    def test_new_flow(self,app,workflow):
        with app.test_request_context():
>           assert FlowSettingView.new_flow(0)==""

tests/test_admin.py:85: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = 0, args = (), kwargs = {}

    @wraps(f)
    def inner(self, *args, **kwargs):
        # Store current admin view
        h.set_current_view(self)
    
        # Check if administrative piece is accessible
>       abort = self._handle_view(f.__name__, **kwargs)
E       AttributeError: 'int' object has no attribute '_handle_view'

.tox/c1/lib/python3.6/site-packages/flask_admin/base.py:65: AttributeError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______________________ TestFlowSettingView.test_del_flow _______________________

self = <tests.test_admin.TestFlowSettingView object at 0x7fd2836d6358>
app = <Flask 'testapp'>
workflow = {'flow': <FlowDefine 1>, 'flow_action': [<FlowAction 1>, <FlowAction 2>, <FlowAction 3>, <FlowAction 4>, <FlowAction 5>, <FlowAction 6>, ...], 'workflow': <WorkFlow 1>}

    def test_del_flow(self,app,workflow):
        with app.test_request_context():
>           assert FlowSettingView.del_flow(0)==""

tests/test_admin.py:91: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = 0, args = (), kwargs = {}

    @wraps(f)
    def inner(self, *args, **kwargs):
        # Store current admin view
        h.set_current_view(self)
    
        # Check if administrative piece is accessible
>       abort = self._handle_view(f.__name__, **kwargs)
E       AttributeError: 'int' object has no attribute '_handle_view'

.tox/c1/lib/python3.6/site-packages/flask_admin/base.py:65: AttributeError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_____________________ TestFlowSettingView.test_get_actions _____________________

self = <tests.test_admin.TestFlowSettingView object at 0x7fd28125fa20>
app = <Flask 'testapp'>
workflow = {'flow': <FlowDefine 1>, 'flow_action': [<FlowAction 1>, <FlowAction 2>, <FlowAction 3>, <FlowAction 4>, <FlowAction 5>, <FlowAction 6>, ...], 'workflow': <WorkFlow 1>}

    def test_get_actions(self,app,workflow):
        with app.test_request_context():
>           assert FlowSettingView.get_actions()==""
E           AssertionError: assert [<Action 1>, <Action 2>, <Action 3>, <Action 4>, <Action 5>, <Action 7>] == ''
E             +[<Action 1>, <Action 2>, <Action 3>, <Action 4>, <Action 5>, <Action 7>]
E             -''

tests/test_admin.py:97: AssertionError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
___________________ TestFlowSettingView.test_upt_flow_action ___________________

self = <tests.test_admin.TestFlowSettingView object at 0x7fd280dc7cc0>
app = <Flask 'testapp'>
workflow = {'flow': <FlowDefine 1>, 'flow_action': [<FlowAction 1>, <FlowAction 2>, <FlowAction 3>, <FlowAction 4>, <FlowAction 5>, <FlowAction 6>, ...], 'workflow': <WorkFlow 1>}

    def test_upt_flow_action(self,app,workflow):
        with app.test_request_context():
>           assert FlowSettingView.upt_flow_action(0)==""

tests/test_admin.py:103: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = 0, args = (), kwargs = {}

    @wraps(f)
    def inner(self, *args, **kwargs):
        # Store current admin view
        h.set_current_view(self)
    
        # Check if administrative piece is accessible
>       abort = self._handle_view(f.__name__, **kwargs)
E       AttributeError: 'int' object has no attribute '_handle_view'

.tox/c1/lib/python3.6/site-packages/flask_admin/base.py:65: AttributeError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
________________ TestWorkFlowSettingView.test_index_acl[1-200] _________________

self = <tests.test_admin.TestWorkFlowSettingView object at 0x7fd2833e2a58>
client = <FlaskClient <Flask 'testapp'>>, db_register2 = None
users = [{'email': 'contributor@test.org', 'id': 2, 'obj': <User 2>}, {'email': 'repoadmin@test.org', 'id': 4, 'obj': <User 4>...eneraluser@test.org', 'id': 6, 'obj': <User 6>}, {'email': 'originalroleuser@test.org', 'id': 7, 'obj': <User 7>}, ...]
users_index = 1, status_code = 200

    @pytest.mark.parametrize('users_index, status_code', [
        # (0, 403),
        (1, 200),
        # (2, 200),
        # (3, 200),
        # (4, 200),
        # (5, 200),
        # (6, 200),
    ])
    def test_index_acl(self,client,db_register2,users,users_index,status_code):
        login(client=client, email=users[users_index]['email'])
        url = url_for('workflowsetting.index',_external=True)
>       res =  client.get(url)

tests/test_admin.py:128: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/werkzeug/test.py:1029: in get
    return self.open(*args, **kw)
.tox/c1/lib/python3.6/site-packages/flask/testing.py:196: in open
    follow_redirects=follow_redirects
.tox/c1/lib/python3.6/site-packages/werkzeug/test.py:993: in open
    response = self.run_wsgi_app(environ.copy(), buffered=buffered)
.tox/c1/lib/python3.6/site-packages/werkzeug/test.py:884: in run_wsgi_app
    rv = run_wsgi_app(self.application, environ, buffered=buffered)
.tox/c1/lib/python3.6/site-packages/werkzeug/test.py:1119: in run_wsgi_app
    app_rv = app(environ, start_response)
.tox/c1/lib/python3.6/site-packages/flask/app.py:2334: in __call__
    return self.wsgi_app(environ, start_response)
.tox/c1/lib/python3.6/site-packages/flask/app.py:2320: in wsgi_app
    response = self.handle_exception(e)
.tox/c1/lib/python3.6/site-packages/flask/app.py:1766: in handle_exception
    reraise(exc_type, exc_value, tb)
.tox/c1/lib/python3.6/site-packages/flask/_compat.py:36: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/flask/app.py:2317: in wsgi_app
    response = self.full_dispatch_request()
.tox/c1/lib/python3.6/site-packages/flask/app.py:1840: in full_dispatch_request
    rv = self.handle_user_exception(e)
.tox/c1/lib/python3.6/site-packages/flask/app.py:1743: in handle_user_exception
    reraise(exc_type, exc_value, tb)
.tox/c1/lib/python3.6/site-packages/flask/_compat.py:36: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/flask/app.py:1838: in full_dispatch_request
    rv = self.dispatch_request()
.tox/c1/lib/python3.6/site-packages/flask/app.py:1824: in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
.tox/c1/lib/python3.6/site-packages/flask_admin/base.py:69: in inner
    return self._run_view(f, *args, **kwargs)
.tox/c1/lib/python3.6/site-packages/flask_admin/base.py:368: in _run_view
    return fn(self, *args, **kwargs)
weko_workflow/admin.py:251: in index
    display_label=display_label
.tox/c1/lib/python3.6/site-packages/flask_admin/base.py:308: in render
    return render_template(template, **kwargs)
.tox/c1/lib/python3.6/site-packages/flask/templating.py:135: in render_template
    context, ctx.app)
.tox/c1/lib/python3.6/site-packages/flask/templating.py:117: in _render
    rv = template.render(context)
.tox/c1/lib/python3.6/site-packages/jinja2/asyncsupport.py:76: in render
    return original_render(self, *args, **kwargs)
.tox/c1/lib/python3.6/site-packages/jinja2/environment.py:1008: in render
    return self.environment.handle_exception(exc_info, True)
.tox/c1/lib/python3.6/site-packages/jinja2/environment.py:780: in handle_exception
    reraise(exc_type, exc_value, tb)
.tox/c1/lib/python3.6/site-packages/jinja2/_compat.py:37: in reraise
    raise value.with_traceback(tb)
weko_workflow/templates/weko_workflow/admin/workflow_list.html:21: in top-level template code
    {%- extends admin_base_template %}
../weko-theme/weko_theme/templates/weko_theme/page_admin.html:28: in top-level template code
    {%- block head %}
../weko-theme/weko_theme/templates/weko_theme/page_admin.html:50: in block "head"
    {%- block css %}
weko_workflow/templates/weko_workflow/admin/workflow_list.html:24: in block "css"
    {{ super() }}
../weko-theme/weko_theme/templates/weko_theme/page_admin.html:51: in block "css"
    {% assets "invenio_theme_css" %}
.tox/c1/lib/python3.6/site-packages/webassets/ext/jinja2.py:186: in _render_assets
    urls = bundle.urls()
.tox/c1/lib/python3.6/site-packages/webassets/bundle.py:806: in urls
    urls.extend(bundle._urls(new_ctx, extra_filters, *args, **kwargs))
.tox/c1/lib/python3.6/site-packages/webassets/bundle.py:765: in _urls
    *args, **kwargs)
.tox/c1/lib/python3.6/site-packages/webassets/bundle.py:619: in _build
    force, disable_cache=disable_cache, extra_filters=extra_filters)
.tox/c1/lib/python3.6/site-packages/webassets/bundle.py:543: in _merge_and_apply
    kwargs=item_data)
.tox/c1/lib/python3.6/site-packages/webassets/merge.py:276: in apply
    return self._wrap_cache(key, func)
.tox/c1/lib/python3.6/site-packages/webassets/merge.py:213: in _wrap_cache
    content = self.cache.get(key)
.tox/c1/lib/python3.6/site-packages/webassets/cache.py:183: in get
    filename = path.join(self.directory, '%s' % make_md5(self.V, key))
.tox/c1/lib/python3.6/site-packages/webassets/cache.py:84: in make_md5
    for d in walk(data):
.tox/c1/lib/python3.6/site-packages/webassets/cache.py:61: in walk
    for d in walk(item): yield d
.tox/c1/lib/python3.6/site-packages/webassets/cache.py:61: in walk
    for d in walk(item): yield d
.tox/c1/lib/python3.6/site-packages/webassets/cache.py:67: in walk
    yield obj.data().encode('utf-8')
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <FileHunk /code/modules/weko-workflow/static/scss/invenio_theme/styles.scss>

    def data(self):
>       f = open(self.filename, 'r', encoding='utf-8')
E       FileNotFoundError: [Errno 2] No such file or directory: '/code/modules/weko-workflow/static/scss/invenio_theme/styles.scss'

.tox/c1/lib/python3.6/site-packages/webassets/merge.py:77: FileNotFoundError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
___________ TestWorkFlowSettingView.test_update_workflow_acl[1-200] ____________

self = <tests.test_admin.TestWorkFlowSettingView object at 0x7fd2801979e8>
client = <FlaskClient <Flask 'testapp'>>, db_register2 = None
users = [{'email': 'contributor@test.org', 'id': 2, 'obj': <User 2>}, {'email': 'repoadmin@test.org', 'id': 4, 'obj': <User 4>...eneraluser@test.org', 'id': 6, 'obj': <User 6>}, {'email': 'originalroleuser@test.org', 'id': 7, 'obj': <User 7>}, ...]
users_index = 1, status_code = 200

    @pytest.mark.parametrize('users_index, status_code', [
        # (0, 403),
        (1, 200),
        # (2, 200),
        # (3, 200),
        # (4, 200),
        # (5, 200),
        # (6, 200),
    ])
    def test_update_workflow_acl(self,client,db_register2,users,users_index,status_code):
        login(client=client, email=users[users_index]['email'])
        url = url_for('workflowsetting.update_workflow',workflow_id='0',_external=True)
        with patch("flask.templating._render", return_value=""):
>           res =  client.post(url)

tests/test_admin.py:180: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/werkzeug/test.py:1039: in post
    return self.open(*args, **kw)
.tox/c1/lib/python3.6/site-packages/flask/testing.py:196: in open
    follow_redirects=follow_redirects
.tox/c1/lib/python3.6/site-packages/werkzeug/test.py:993: in open
    response = self.run_wsgi_app(environ.copy(), buffered=buffered)
.tox/c1/lib/python3.6/site-packages/werkzeug/test.py:884: in run_wsgi_app
    rv = run_wsgi_app(self.application, environ, buffered=buffered)
.tox/c1/lib/python3.6/site-packages/werkzeug/test.py:1119: in run_wsgi_app
    app_rv = app(environ, start_response)
.tox/c1/lib/python3.6/site-packages/flask/app.py:2334: in __call__
    return self.wsgi_app(environ, start_response)
.tox/c1/lib/python3.6/site-packages/flask/app.py:2320: in wsgi_app
    response = self.handle_exception(e)
.tox/c1/lib/python3.6/site-packages/flask/app.py:1766: in handle_exception
    reraise(exc_type, exc_value, tb)
.tox/c1/lib/python3.6/site-packages/flask/_compat.py:36: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/flask/app.py:2317: in wsgi_app
    response = self.full_dispatch_request()
.tox/c1/lib/python3.6/site-packages/flask/app.py:1840: in full_dispatch_request
    rv = self.handle_user_exception(e)
.tox/c1/lib/python3.6/site-packages/flask/app.py:1743: in handle_user_exception
    reraise(exc_type, exc_value, tb)
.tox/c1/lib/python3.6/site-packages/flask/_compat.py:36: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/flask/app.py:1838: in full_dispatch_request
    rv = self.dispatch_request()
.tox/c1/lib/python3.6/site-packages/flask/app.py:1824: in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
.tox/c1/lib/python3.6/site-packages/flask_admin/base.py:69: in inner
    return self._run_view(f, *args, **kwargs)
.tox/c1/lib/python3.6/site-packages/flask_admin/base.py:368: in _run_view
    return fn(self, *args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <invenio_admin.views.protected_adminview_factory.<locals>.ProtectedAdminView object at 0x7fd280142d30>
workflow_id = '0'

    @expose('/<string:workflow_id>', methods=['POST', 'PUT'])
    def update_workflow(self, workflow_id='0'):
        """Update workflow info.
    
        :return:
        """
        json_data = request.get_json()
>       list_hide = json_data.get('list_hide', [])
E       AttributeError: 'NoneType' object has no attribute 'get'

weko_workflow/admin.py:324: AttributeError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
_______________ TestWorkFlowSettingView.test_save_workflow_role ________________

self = <tests.test_admin.TestWorkFlowSettingView object at 0x7fd27f531518>
app = <Flask 'testapp'>
users = [{'email': 'contributor@test.org', 'id': 2, 'obj': <User 2>}, {'email': 'repoadmin@test.org', 'id': 4, 'obj': <User 4>...eneraluser@test.org', 'id': 6, 'obj': <User 6>}, {'email': 'originalroleuser@test.org', 'id': 7, 'obj': <User 7>}, ...]
workflow = {'flow': <FlowDefine 1>, 'flow_action': [<FlowAction 1>, <FlowAction 2>, <FlowAction 3>, <FlowAction 4>, <FlowAction 5>, <FlowAction 6>, ...], 'workflow': <WorkFlow 1>}

    def test_save_workflow_role(self,app,users,workflow):
        role0 = (users[0]['obj']).roles[0]
        role1 = (users[1]['obj']).roles[0]
        role2 = (users[2]['obj']).roles[0]
        role3 = (users[3]['obj']).roles[0]
        role4 = (users[4]['obj']).roles[0]
    
        wf = workflow['workflow']
    
        with app.test_request_context():
>           assert WorkFlowSettingView.save_workflow_role(wf.id,[role0.id,role1.id,role2.id,role3.id,role4.id])
E           AssertionError: assert None
E            +  where None = <bound method WorkFlowSettingView.save_workflow_role of <class 'weko_workflow.admin.WorkFlowSettingView'>>(1, [])
E            +    where <bound method WorkFlowSettingView.save_workflow_role of <class 'weko_workflow.admin.WorkFlowSettingView'>> = WorkFlowSettingView.save_workflow_role
E            +    and   1 = <WorkFlow 1>.id

tests/test_admin.py:249: AssertionError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
------------------------------ Captured log call -------------------------------
ERROR    flask.app:admin.py:433 wf_id:1
ERROR    flask.app:admin.py:435 list_hide:[4, 3, 1, 5, 6]
_____________ TestWorkFlowSettingView.test_get_language_workflows ______________

self = <tests.test_admin.TestWorkFlowSettingView object at 0x7fd27fb382e8>
users = [{'email': 'contributor@test.org', 'id': 2, 'obj': <User 2>}, {'email': 'repoadmin@test.org', 'id': 4, 'obj': <User 4>...eneraluser@test.org', 'id': 6, 'obj': <User 6>}, {'email': 'originalroleuser@test.org', 'id': 7, 'obj': <User 7>}, ...]

    def test_get_language_workflows(self,users):
>       with self.test_request_context():
E       AttributeError: 'TestWorkFlowSettingView' object has no attribute 'test_request_context'

tests/test_admin.py:254: AttributeError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
__________________________ test_init_workflow_tables ___________________________

app = <Flask 'testapp'>
db = <SQLAlchemy engine=sqlite:////code/modules/weko-workflow/test.db>
users = [{'email': 'contributor@test.org', 'id': 2, 'obj': <User 2>}, {'email': 'repoadmin@test.org', 'id': 4, 'obj': <User 4>...eneraluser@test.org', 'id': 6, 'obj': <User 6>}, {'email': 'originalroleuser@test.org', 'id': 7, 'obj': <User 7>}, ...]

    def test_init_workflow_tables(app,db,users):
        runner = app.test_cli_runner()
        result = runner.invoke(init_workflow_tables,["Action,action_status"])
        assert result.output ==  'workflow db has been initialised.\n'
        assert result.exit_code == 0
    
        result = runner.invoke(init_workflow_tables,["gakuninrdm_data"])
>       assert result.output == ""
E       assert ("(sqlite3.IntegrityError) FOREIGN KEY constraint failed [SQL: 'INSERT INTO "\n 'workflow_workflow (status, created, updated, id, flows_id, flows_name, '\n 'itemtype_id, flow_id, is_deleted, open_restricted, is_gakuninrdm) VALUES (?, '\n "?, ?, ?, ?, ?, ?, ?, ?, ?, ?)'] [parameters: ('N', '2023-03-29 "\n "04:26:13.775932', '2023-03-29 04:26:13.775937', -1, <memory at "\n "0x7fd282b7e408>, 'GRDM_デフォルトワークフロー', 15, -1, 0, 0, 1)] (Background on this "\n 'error at: http://sqlalche.me/e/gkpj)\n'\n 'workflow db init failed.\n') == ''
E         + (sqlite3.IntegrityError) FOREIGN KEY constraint failed [SQL: 'INSERT INTO workflow_workflow (status, created, updated, id, flows_id, flows_name, itemtype_id, flow_id, is_deleted, open_restricted, is_gakuninrdm) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)'] [parameters: ('N', '2023-03-29 04:26:13.775932', '2023-03-29 04:26:13.775937', -1, <memory at 0x7fd282b7e408>, 'GRDM_デフォルトワークフロー', 15, -1, 0, 0, 1)] (Background on this error at: http://sqlalche.me/e/gkpj)
E         + workflow db init failed.

tests/test_cli.py:27: AssertionError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
______________________________ test_get_index_id _______________________________

    def test_get_index_id():
        """Get index ID base on activity id"""
        # from weko_workflow.api import WorkActivity, WorkFlow
    
        # activity = WorkActivity()
        # activity_detail = activity.get_activity_detail(activity_id)
    
        # workflow = WorkFlow()
        # workflow_detail = workflow.get_workflow_by_id(
        #     activity_detail.workflow_id)
    
        # index_tree_id = workflow_detail.index_tree_id
    
        # if index_tree_id:
        #     from .api import Indexes
        #     index_result = Indexes.get_index(index_tree_id)
        #     if not index_result:
        #         index_tree_id = None
        # else:
        #     index_tree_id = None
>       raise BaseException
E       BaseException

tests/test_utils.py:3101: BaseException
______________________________ test_regex_replace ______________________________

app = <Flask 'testapp'>

    def test_regex_replace(app):
        text = 'aaa@xxx.com bbb@yyy.com ccc@zzz.com'
>       result = app.jinja_env.filters["sanitize_html"]('[a-z]*@', 'ABC@', text)
E       TypeError: sanitize_html() takes 1 positional argument but 3 were given

tests/test_views.py:59: TypeError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
____________________________ test_index_acl[0-True] ____________________________

client = <FlaskClient <Flask 'testapp'>>
users = [{'email': 'contributor@test.org', 'id': 2, 'obj': <User 2>}, {'email': 'repoadmin@test.org', 'id': 4, 'obj': <User 4>...eneraluser@test.org', 'id': 6, 'obj': <User 6>}, {'email': 'originalroleuser@test.org', 'id': 7, 'obj': <User 7>}, ...]
db_register2 = None, id = 0, is_permission = True

    @pytest.mark.parametrize('id, is_permission', [
        (0, True),
        (1, True),
        (2, True),
        (3, True),
        (4, True),
        (5, True),
        (6, True),
    ])
    def test_index_acl(client, users, db_register2, id, is_permission):
        login(client=client, email=users[id]['email'])
        url = url_for('weko_workflow.index',_external=True)
>       res = client.get(url)

tests/test_views.py:86: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/werkzeug/test.py:1029: in get
    return self.open(*args, **kw)
.tox/c1/lib/python3.6/site-packages/flask/testing.py:196: in open
    follow_redirects=follow_redirects
.tox/c1/lib/python3.6/site-packages/werkzeug/test.py:993: in open
    response = self.run_wsgi_app(environ.copy(), buffered=buffered)
.tox/c1/lib/python3.6/site-packages/werkzeug/test.py:884: in run_wsgi_app
    rv = run_wsgi_app(self.application, environ, buffered=buffered)
.tox/c1/lib/python3.6/site-packages/werkzeug/test.py:1119: in run_wsgi_app
    app_rv = app(environ, start_response)
.tox/c1/lib/python3.6/site-packages/flask/app.py:2334: in __call__
    return self.wsgi_app(environ, start_response)
.tox/c1/lib/python3.6/site-packages/flask/app.py:2320: in wsgi_app
    response = self.handle_exception(e)
.tox/c1/lib/python3.6/site-packages/flask/app.py:1766: in handle_exception
    reraise(exc_type, exc_value, tb)
.tox/c1/lib/python3.6/site-packages/flask/_compat.py:36: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/flask/app.py:2317: in wsgi_app
    response = self.full_dispatch_request()
.tox/c1/lib/python3.6/site-packages/flask/app.py:1840: in full_dispatch_request
    rv = self.handle_user_exception(e)
.tox/c1/lib/python3.6/site-packages/flask/app.py:1743: in handle_user_exception
    reraise(exc_type, exc_value, tb)
.tox/c1/lib/python3.6/site-packages/flask/_compat.py:36: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/flask/app.py:1838: in full_dispatch_request
    rv = self.dispatch_request()
.tox/c1/lib/python3.6/site-packages/flask/app.py:1824: in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
.tox/c1/lib/python3.6/site-packages/flask_login/utils.py:261: in decorated_view
    return func(*args, **kwargs)
weko_workflow/views.py:279: in index
    **ctx
.tox/c1/lib/python3.6/site-packages/flask/templating.py:135: in render_template
    context, ctx.app)
.tox/c1/lib/python3.6/site-packages/flask/templating.py:117: in _render
    rv = template.render(context)
.tox/c1/lib/python3.6/site-packages/jinja2/asyncsupport.py:76: in render
    return original_render(self, *args, **kwargs)
.tox/c1/lib/python3.6/site-packages/jinja2/environment.py:1008: in render
    return self.environment.handle_exception(exc_info, True)
.tox/c1/lib/python3.6/site-packages/jinja2/environment.py:780: in handle_exception
    reraise(exc_type, exc_value, tb)
.tox/c1/lib/python3.6/site-packages/jinja2/_compat.py:37: in reraise
    raise value.with_traceback(tb)
weko_workflow/templates/weko_workflow/activity_list.html:22: in top-level template code
    {%- from "invenio_communities/macros.html" import community_header %}
../weko-theme/weko_theme/templates/weko_theme/page.html:20: in top-level template code
    {%- extends config.THEME_BODY_TEMPLATE %}
../weko-theme/weko_theme/templates/weko_theme/body.html:21: in top-level template code
    {%- extends "weko_theme/base.html" %}
../weko-theme/weko_theme/templates/weko_theme/base.html:13: in top-level template code
    {%- block head %}
../weko-theme/weko_theme/templates/weko_theme/base.html:62: in block "head"
    {%- block css %}
weko_workflow/templates/weko_workflow/activity_list.html:25: in block "css"
    {{ super() }}
../weko-theme/weko_theme/templates/weko_theme/base.html:63: in block "css"
    {% assets "weko_theme_css" %}
.tox/c1/lib/python3.6/site-packages/webassets/ext/jinja2.py:186: in _render_assets
    urls = bundle.urls()
.tox/c1/lib/python3.6/site-packages/webassets/bundle.py:806: in urls
    urls.extend(bundle._urls(new_ctx, extra_filters, *args, **kwargs))
.tox/c1/lib/python3.6/site-packages/webassets/bundle.py:765: in _urls
    *args, **kwargs)
.tox/c1/lib/python3.6/site-packages/webassets/bundle.py:619: in _build
    force, disable_cache=disable_cache, extra_filters=extra_filters)
.tox/c1/lib/python3.6/site-packages/webassets/bundle.py:543: in _merge_and_apply
    kwargs=item_data)
.tox/c1/lib/python3.6/site-packages/webassets/merge.py:276: in apply
    return self._wrap_cache(key, func)
.tox/c1/lib/python3.6/site-packages/webassets/merge.py:213: in _wrap_cache
    content = self.cache.get(key)
.tox/c1/lib/python3.6/site-packages/webassets/cache.py:183: in get
    filename = path.join(self.directory, '%s' % make_md5(self.V, key))
.tox/c1/lib/python3.6/site-packages/webassets/cache.py:84: in make_md5
    for d in walk(data):
.tox/c1/lib/python3.6/site-packages/webassets/cache.py:61: in walk
    for d in walk(item): yield d
.tox/c1/lib/python3.6/site-packages/webassets/cache.py:61: in walk
    for d in walk(item): yield d
.tox/c1/lib/python3.6/site-packages/webassets/cache.py:67: in walk
    yield obj.data().encode('utf-8')
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <FileHunk /code/modules/weko-workflow/static/css/weko_theme/theme.scss>

    def data(self):
>       f = open(self.filename, 'r', encoding='utf-8')
E       FileNotFoundError: [Errno 2] No such file or directory: '/code/modules/weko-workflow/static/css/weko_theme/theme.scss'

.tox/c1/lib/python3.6/site-packages/webassets/merge.py:77: FileNotFoundError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
____________________________ test_index_acl[1-True] ____________________________

client = <FlaskClient <Flask 'testapp'>>
users = [{'email': 'contributor@test.org', 'id': 2, 'obj': <User 2>}, {'email': 'repoadmin@test.org', 'id': 4, 'obj': <User 4>...eneraluser@test.org', 'id': 6, 'obj': <User 6>}, {'email': 'originalroleuser@test.org', 'id': 7, 'obj': <User 7>}, ...]
db_register2 = None, id = 1, is_permission = True

    @pytest.mark.parametrize('id, is_permission', [
        (0, True),
        (1, True),
        (2, True),
        (3, True),
        (4, True),
        (5, True),
        (6, True),
    ])
    def test_index_acl(client, users, db_register2, id, is_permission):
        login(client=client, email=users[id]['email'])
        url = url_for('weko_workflow.index',_external=True)
>       res = client.get(url)

tests/test_views.py:86: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/werkzeug/test.py:1029: in get
    return self.open(*args, **kw)
.tox/c1/lib/python3.6/site-packages/flask/testing.py:196: in open
    follow_redirects=follow_redirects
.tox/c1/lib/python3.6/site-packages/werkzeug/test.py:993: in open
    response = self.run_wsgi_app(environ.copy(), buffered=buffered)
.tox/c1/lib/python3.6/site-packages/werkzeug/test.py:884: in run_wsgi_app
    rv = run_wsgi_app(self.application, environ, buffered=buffered)
.tox/c1/lib/python3.6/site-packages/werkzeug/test.py:1119: in run_wsgi_app
    app_rv = app(environ, start_response)
.tox/c1/lib/python3.6/site-packages/flask/app.py:2334: in __call__
    return self.wsgi_app(environ, start_response)
.tox/c1/lib/python3.6/site-packages/flask/app.py:2320: in wsgi_app
    response = self.handle_exception(e)
.tox/c1/lib/python3.6/site-packages/flask/app.py:1766: in handle_exception
    reraise(exc_type, exc_value, tb)
.tox/c1/lib/python3.6/site-packages/flask/_compat.py:36: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/flask/app.py:2317: in wsgi_app
    response = self.full_dispatch_request()
.tox/c1/lib/python3.6/site-packages/flask/app.py:1840: in full_dispatch_request
    rv = self.handle_user_exception(e)
.tox/c1/lib/python3.6/site-packages/flask/app.py:1743: in handle_user_exception
    reraise(exc_type, exc_value, tb)
.tox/c1/lib/python3.6/site-packages/flask/_compat.py:36: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/flask/app.py:1838: in full_dispatch_request
    rv = self.dispatch_request()
.tox/c1/lib/python3.6/site-packages/flask/app.py:1824: in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
.tox/c1/lib/python3.6/site-packages/flask_login/utils.py:261: in decorated_view
    return func(*args, **kwargs)
weko_workflow/views.py:279: in index
    **ctx
.tox/c1/lib/python3.6/site-packages/flask/templating.py:135: in render_template
    context, ctx.app)
.tox/c1/lib/python3.6/site-packages/flask/templating.py:117: in _render
    rv = template.render(context)
.tox/c1/lib/python3.6/site-packages/jinja2/asyncsupport.py:76: in render
    return original_render(self, *args, **kwargs)
.tox/c1/lib/python3.6/site-packages/jinja2/environment.py:1008: in render
    return self.environment.handle_exception(exc_info, True)
.tox/c1/lib/python3.6/site-packages/jinja2/environment.py:780: in handle_exception
    reraise(exc_type, exc_value, tb)
.tox/c1/lib/python3.6/site-packages/jinja2/_compat.py:37: in reraise
    raise value.with_traceback(tb)
weko_workflow/templates/weko_workflow/activity_list.html:22: in top-level template code
    {%- from "invenio_communities/macros.html" import community_header %}
../weko-theme/weko_theme/templates/weko_theme/page.html:20: in top-level template code
    {%- extends config.THEME_BODY_TEMPLATE %}
../weko-theme/weko_theme/templates/weko_theme/body.html:21: in top-level template code
    {%- extends "weko_theme/base.html" %}
../weko-theme/weko_theme/templates/weko_theme/base.html:13: in top-level template code
    {%- block head %}
../weko-theme/weko_theme/templates/weko_theme/base.html:62: in block "head"
    {%- block css %}
weko_workflow/templates/weko_workflow/activity_list.html:25: in block "css"
    {{ super() }}
../weko-theme/weko_theme/templates/weko_theme/base.html:63: in block "css"
    {% assets "weko_theme_css" %}
.tox/c1/lib/python3.6/site-packages/webassets/ext/jinja2.py:186: in _render_assets
    urls = bundle.urls()
.tox/c1/lib/python3.6/site-packages/webassets/bundle.py:806: in urls
    urls.extend(bundle._urls(new_ctx, extra_filters, *args, **kwargs))
.tox/c1/lib/python3.6/site-packages/webassets/bundle.py:765: in _urls
    *args, **kwargs)
.tox/c1/lib/python3.6/site-packages/webassets/bundle.py:619: in _build
    force, disable_cache=disable_cache, extra_filters=extra_filters)
.tox/c1/lib/python3.6/site-packages/webassets/bundle.py:543: in _merge_and_apply
    kwargs=item_data)
.tox/c1/lib/python3.6/site-packages/webassets/merge.py:276: in apply
    return self._wrap_cache(key, func)
.tox/c1/lib/python3.6/site-packages/webassets/merge.py:213: in _wrap_cache
    content = self.cache.get(key)
.tox/c1/lib/python3.6/site-packages/webassets/cache.py:183: in get
    filename = path.join(self.directory, '%s' % make_md5(self.V, key))
.tox/c1/lib/python3.6/site-packages/webassets/cache.py:84: in make_md5
    for d in walk(data):
.tox/c1/lib/python3.6/site-packages/webassets/cache.py:61: in walk
    for d in walk(item): yield d
.tox/c1/lib/python3.6/site-packages/webassets/cache.py:61: in walk
    for d in walk(item): yield d
.tox/c1/lib/python3.6/site-packages/webassets/cache.py:67: in walk
    yield obj.data().encode('utf-8')
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <FileHunk /code/modules/weko-workflow/static/css/weko_theme/theme.scss>

    def data(self):
>       f = open(self.filename, 'r', encoding='utf-8')
E       FileNotFoundError: [Errno 2] No such file or directory: '/code/modules/weko-workflow/static/css/weko_theme/theme.scss'

.tox/c1/lib/python3.6/site-packages/webassets/merge.py:77: FileNotFoundError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
____________________________ test_index_acl[2-True] ____________________________

client = <FlaskClient <Flask 'testapp'>>
users = [{'email': 'contributor@test.org', 'id': 2, 'obj': <User 2>}, {'email': 'repoadmin@test.org', 'id': 4, 'obj': <User 4>...eneraluser@test.org', 'id': 6, 'obj': <User 6>}, {'email': 'originalroleuser@test.org', 'id': 7, 'obj': <User 7>}, ...]
db_register2 = None, id = 2, is_permission = True

    @pytest.mark.parametrize('id, is_permission', [
        (0, True),
        (1, True),
        (2, True),
        (3, True),
        (4, True),
        (5, True),
        (6, True),
    ])
    def test_index_acl(client, users, db_register2, id, is_permission):
        login(client=client, email=users[id]['email'])
        url = url_for('weko_workflow.index',_external=True)
>       res = client.get(url)

tests/test_views.py:86: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/werkzeug/test.py:1029: in get
    return self.open(*args, **kw)
.tox/c1/lib/python3.6/site-packages/flask/testing.py:196: in open
    follow_redirects=follow_redirects
.tox/c1/lib/python3.6/site-packages/werkzeug/test.py:993: in open
    response = self.run_wsgi_app(environ.copy(), buffered=buffered)
.tox/c1/lib/python3.6/site-packages/werkzeug/test.py:884: in run_wsgi_app
    rv = run_wsgi_app(self.application, environ, buffered=buffered)
.tox/c1/lib/python3.6/site-packages/werkzeug/test.py:1119: in run_wsgi_app
    app_rv = app(environ, start_response)
.tox/c1/lib/python3.6/site-packages/flask/app.py:2334: in __call__
    return self.wsgi_app(environ, start_response)
.tox/c1/lib/python3.6/site-packages/flask/app.py:2320: in wsgi_app
    response = self.handle_exception(e)
.tox/c1/lib/python3.6/site-packages/flask/app.py:1766: in handle_exception
    reraise(exc_type, exc_value, tb)
.tox/c1/lib/python3.6/site-packages/flask/_compat.py:36: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/flask/app.py:2317: in wsgi_app
    response = self.full_dispatch_request()
.tox/c1/lib/python3.6/site-packages/flask/app.py:1840: in full_dispatch_request
    rv = self.handle_user_exception(e)
.tox/c1/lib/python3.6/site-packages/flask/app.py:1743: in handle_user_exception
    reraise(exc_type, exc_value, tb)
.tox/c1/lib/python3.6/site-packages/flask/_compat.py:36: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/flask/app.py:1838: in full_dispatch_request
    rv = self.dispatch_request()
.tox/c1/lib/python3.6/site-packages/flask/app.py:1824: in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
.tox/c1/lib/python3.6/site-packages/flask_login/utils.py:261: in decorated_view
    return func(*args, **kwargs)
weko_workflow/views.py:279: in index
    **ctx
.tox/c1/lib/python3.6/site-packages/flask/templating.py:135: in render_template
    context, ctx.app)
.tox/c1/lib/python3.6/site-packages/flask/templating.py:117: in _render
    rv = template.render(context)
.tox/c1/lib/python3.6/site-packages/jinja2/asyncsupport.py:76: in render
    return original_render(self, *args, **kwargs)
.tox/c1/lib/python3.6/site-packages/jinja2/environment.py:1008: in render
    return self.environment.handle_exception(exc_info, True)
.tox/c1/lib/python3.6/site-packages/jinja2/environment.py:780: in handle_exception
    reraise(exc_type, exc_value, tb)
.tox/c1/lib/python3.6/site-packages/jinja2/_compat.py:37: in reraise
    raise value.with_traceback(tb)
weko_workflow/templates/weko_workflow/activity_list.html:22: in top-level template code
    {%- from "invenio_communities/macros.html" import community_header %}
../weko-theme/weko_theme/templates/weko_theme/page.html:20: in top-level template code
    {%- extends config.THEME_BODY_TEMPLATE %}
../weko-theme/weko_theme/templates/weko_theme/body.html:21: in top-level template code
    {%- extends "weko_theme/base.html" %}
../weko-theme/weko_theme/templates/weko_theme/base.html:13: in top-level template code
    {%- block head %}
../weko-theme/weko_theme/templates/weko_theme/base.html:62: in block "head"
    {%- block css %}
weko_workflow/templates/weko_workflow/activity_list.html:25: in block "css"
    {{ super() }}
../weko-theme/weko_theme/templates/weko_theme/base.html:63: in block "css"
    {% assets "weko_theme_css" %}
.tox/c1/lib/python3.6/site-packages/webassets/ext/jinja2.py:186: in _render_assets
    urls = bundle.urls()
.tox/c1/lib/python3.6/site-packages/webassets/bundle.py:806: in urls
    urls.extend(bundle._urls(new_ctx, extra_filters, *args, **kwargs))
.tox/c1/lib/python3.6/site-packages/webassets/bundle.py:765: in _urls
    *args, **kwargs)
.tox/c1/lib/python3.6/site-packages/webassets/bundle.py:619: in _build
    force, disable_cache=disable_cache, extra_filters=extra_filters)
.tox/c1/lib/python3.6/site-packages/webassets/bundle.py:543: in _merge_and_apply
    kwargs=item_data)
.tox/c1/lib/python3.6/site-packages/webassets/merge.py:276: in apply
    return self._wrap_cache(key, func)
.tox/c1/lib/python3.6/site-packages/webassets/merge.py:213: in _wrap_cache
    content = self.cache.get(key)
.tox/c1/lib/python3.6/site-packages/webassets/cache.py:183: in get
    filename = path.join(self.directory, '%s' % make_md5(self.V, key))
.tox/c1/lib/python3.6/site-packages/webassets/cache.py:84: in make_md5
    for d in walk(data):
.tox/c1/lib/python3.6/site-packages/webassets/cache.py:61: in walk
    for d in walk(item): yield d
.tox/c1/lib/python3.6/site-packages/webassets/cache.py:61: in walk
    for d in walk(item): yield d
.tox/c1/lib/python3.6/site-packages/webassets/cache.py:67: in walk
    yield obj.data().encode('utf-8')
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <FileHunk /code/modules/weko-workflow/static/css/weko_theme/theme.scss>

    def data(self):
>       f = open(self.filename, 'r', encoding='utf-8')
E       FileNotFoundError: [Errno 2] No such file or directory: '/code/modules/weko-workflow/static/css/weko_theme/theme.scss'

.tox/c1/lib/python3.6/site-packages/webassets/merge.py:77: FileNotFoundError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
____________________________ test_index_acl[3-True] ____________________________

client = <FlaskClient <Flask 'testapp'>>
users = [{'email': 'contributor@test.org', 'id': 2, 'obj': <User 2>}, {'email': 'repoadmin@test.org', 'id': 4, 'obj': <User 4>...eneraluser@test.org', 'id': 6, 'obj': <User 6>}, {'email': 'originalroleuser@test.org', 'id': 7, 'obj': <User 7>}, ...]
db_register2 = None, id = 3, is_permission = True

    @pytest.mark.parametrize('id, is_permission', [
        (0, True),
        (1, True),
        (2, True),
        (3, True),
        (4, True),
        (5, True),
        (6, True),
    ])
    def test_index_acl(client, users, db_register2, id, is_permission):
        login(client=client, email=users[id]['email'])
        url = url_for('weko_workflow.index',_external=True)
>       res = client.get(url)

tests/test_views.py:86: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/werkzeug/test.py:1029: in get
    return self.open(*args, **kw)
.tox/c1/lib/python3.6/site-packages/flask/testing.py:196: in open
    follow_redirects=follow_redirects
.tox/c1/lib/python3.6/site-packages/werkzeug/test.py:993: in open
    response = self.run_wsgi_app(environ.copy(), buffered=buffered)
.tox/c1/lib/python3.6/site-packages/werkzeug/test.py:884: in run_wsgi_app
    rv = run_wsgi_app(self.application, environ, buffered=buffered)
.tox/c1/lib/python3.6/site-packages/werkzeug/test.py:1119: in run_wsgi_app
    app_rv = app(environ, start_response)
.tox/c1/lib/python3.6/site-packages/flask/app.py:2334: in __call__
    return self.wsgi_app(environ, start_response)
.tox/c1/lib/python3.6/site-packages/flask/app.py:2320: in wsgi_app
    response = self.handle_exception(e)
.tox/c1/lib/python3.6/site-packages/flask/app.py:1766: in handle_exception
    reraise(exc_type, exc_value, tb)
.tox/c1/lib/python3.6/site-packages/flask/_compat.py:36: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/flask/app.py:2317: in wsgi_app
    response = self.full_dispatch_request()
.tox/c1/lib/python3.6/site-packages/flask/app.py:1840: in full_dispatch_request
    rv = self.handle_user_exception(e)
.tox/c1/lib/python3.6/site-packages/flask/app.py:1743: in handle_user_exception
    reraise(exc_type, exc_value, tb)
.tox/c1/lib/python3.6/site-packages/flask/_compat.py:36: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/flask/app.py:1838: in full_dispatch_request
    rv = self.dispatch_request()
.tox/c1/lib/python3.6/site-packages/flask/app.py:1824: in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
.tox/c1/lib/python3.6/site-packages/flask_login/utils.py:261: in decorated_view
    return func(*args, **kwargs)
weko_workflow/views.py:279: in index
    **ctx
.tox/c1/lib/python3.6/site-packages/flask/templating.py:135: in render_template
    context, ctx.app)
.tox/c1/lib/python3.6/site-packages/flask/templating.py:117: in _render
    rv = template.render(context)
.tox/c1/lib/python3.6/site-packages/jinja2/asyncsupport.py:76: in render
    return original_render(self, *args, **kwargs)
.tox/c1/lib/python3.6/site-packages/jinja2/environment.py:1008: in render
    return self.environment.handle_exception(exc_info, True)
.tox/c1/lib/python3.6/site-packages/jinja2/environment.py:780: in handle_exception
    reraise(exc_type, exc_value, tb)
.tox/c1/lib/python3.6/site-packages/jinja2/_compat.py:37: in reraise
    raise value.with_traceback(tb)
weko_workflow/templates/weko_workflow/activity_list.html:22: in top-level template code
    {%- from "invenio_communities/macros.html" import community_header %}
../weko-theme/weko_theme/templates/weko_theme/page.html:20: in top-level template code
    {%- extends config.THEME_BODY_TEMPLATE %}
../weko-theme/weko_theme/templates/weko_theme/body.html:21: in top-level template code
    {%- extends "weko_theme/base.html" %}
../weko-theme/weko_theme/templates/weko_theme/base.html:13: in top-level template code
    {%- block head %}
../weko-theme/weko_theme/templates/weko_theme/base.html:62: in block "head"
    {%- block css %}
weko_workflow/templates/weko_workflow/activity_list.html:25: in block "css"
    {{ super() }}
../weko-theme/weko_theme/templates/weko_theme/base.html:63: in block "css"
    {% assets "weko_theme_css" %}
.tox/c1/lib/python3.6/site-packages/webassets/ext/jinja2.py:186: in _render_assets
    urls = bundle.urls()
.tox/c1/lib/python3.6/site-packages/webassets/bundle.py:806: in urls
    urls.extend(bundle._urls(new_ctx, extra_filters, *args, **kwargs))
.tox/c1/lib/python3.6/site-packages/webassets/bundle.py:765: in _urls
    *args, **kwargs)
.tox/c1/lib/python3.6/site-packages/webassets/bundle.py:619: in _build
    force, disable_cache=disable_cache, extra_filters=extra_filters)
.tox/c1/lib/python3.6/site-packages/webassets/bundle.py:543: in _merge_and_apply
    kwargs=item_data)
.tox/c1/lib/python3.6/site-packages/webassets/merge.py:276: in apply
    return self._wrap_cache(key, func)
.tox/c1/lib/python3.6/site-packages/webassets/merge.py:213: in _wrap_cache
    content = self.cache.get(key)
.tox/c1/lib/python3.6/site-packages/webassets/cache.py:183: in get
    filename = path.join(self.directory, '%s' % make_md5(self.V, key))
.tox/c1/lib/python3.6/site-packages/webassets/cache.py:84: in make_md5
    for d in walk(data):
.tox/c1/lib/python3.6/site-packages/webassets/cache.py:61: in walk
    for d in walk(item): yield d
.tox/c1/lib/python3.6/site-packages/webassets/cache.py:61: in walk
    for d in walk(item): yield d
.tox/c1/lib/python3.6/site-packages/webassets/cache.py:67: in walk
    yield obj.data().encode('utf-8')
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <FileHunk /code/modules/weko-workflow/static/css/weko_theme/theme.scss>

    def data(self):
>       f = open(self.filename, 'r', encoding='utf-8')
E       FileNotFoundError: [Errno 2] No such file or directory: '/code/modules/weko-workflow/static/css/weko_theme/theme.scss'

.tox/c1/lib/python3.6/site-packages/webassets/merge.py:77: FileNotFoundError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
____________________________ test_index_acl[4-True] ____________________________

client = <FlaskClient <Flask 'testapp'>>
users = [{'email': 'contributor@test.org', 'id': 2, 'obj': <User 2>}, {'email': 'repoadmin@test.org', 'id': 4, 'obj': <User 4>...eneraluser@test.org', 'id': 6, 'obj': <User 6>}, {'email': 'originalroleuser@test.org', 'id': 7, 'obj': <User 7>}, ...]
db_register2 = None, id = 4, is_permission = True

    @pytest.mark.parametrize('id, is_permission', [
        (0, True),
        (1, True),
        (2, True),
        (3, True),
        (4, True),
        (5, True),
        (6, True),
    ])
    def test_index_acl(client, users, db_register2, id, is_permission):
        login(client=client, email=users[id]['email'])
        url = url_for('weko_workflow.index',_external=True)
>       res = client.get(url)

tests/test_views.py:86: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/werkzeug/test.py:1029: in get
    return self.open(*args, **kw)
.tox/c1/lib/python3.6/site-packages/flask/testing.py:196: in open
    follow_redirects=follow_redirects
.tox/c1/lib/python3.6/site-packages/werkzeug/test.py:993: in open
    response = self.run_wsgi_app(environ.copy(), buffered=buffered)
.tox/c1/lib/python3.6/site-packages/werkzeug/test.py:884: in run_wsgi_app
    rv = run_wsgi_app(self.application, environ, buffered=buffered)
.tox/c1/lib/python3.6/site-packages/werkzeug/test.py:1119: in run_wsgi_app
    app_rv = app(environ, start_response)
.tox/c1/lib/python3.6/site-packages/flask/app.py:2334: in __call__
    return self.wsgi_app(environ, start_response)
.tox/c1/lib/python3.6/site-packages/flask/app.py:2320: in wsgi_app
    response = self.handle_exception(e)
.tox/c1/lib/python3.6/site-packages/flask/app.py:1766: in handle_exception
    reraise(exc_type, exc_value, tb)
.tox/c1/lib/python3.6/site-packages/flask/_compat.py:36: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/flask/app.py:2317: in wsgi_app
    response = self.full_dispatch_request()
.tox/c1/lib/python3.6/site-packages/flask/app.py:1840: in full_dispatch_request
    rv = self.handle_user_exception(e)
.tox/c1/lib/python3.6/site-packages/flask/app.py:1743: in handle_user_exception
    reraise(exc_type, exc_value, tb)
.tox/c1/lib/python3.6/site-packages/flask/_compat.py:36: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/flask/app.py:1838: in full_dispatch_request
    rv = self.dispatch_request()
.tox/c1/lib/python3.6/site-packages/flask/app.py:1824: in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
.tox/c1/lib/python3.6/site-packages/flask_login/utils.py:261: in decorated_view
    return func(*args, **kwargs)
weko_workflow/views.py:279: in index
    **ctx
.tox/c1/lib/python3.6/site-packages/flask/templating.py:135: in render_template
    context, ctx.app)
.tox/c1/lib/python3.6/site-packages/flask/templating.py:117: in _render
    rv = template.render(context)
.tox/c1/lib/python3.6/site-packages/jinja2/asyncsupport.py:76: in render
    return original_render(self, *args, **kwargs)
.tox/c1/lib/python3.6/site-packages/jinja2/environment.py:1008: in render
    return self.environment.handle_exception(exc_info, True)
.tox/c1/lib/python3.6/site-packages/jinja2/environment.py:780: in handle_exception
    reraise(exc_type, exc_value, tb)
.tox/c1/lib/python3.6/site-packages/jinja2/_compat.py:37: in reraise
    raise value.with_traceback(tb)
weko_workflow/templates/weko_workflow/activity_list.html:22: in top-level template code
    {%- from "invenio_communities/macros.html" import community_header %}
../weko-theme/weko_theme/templates/weko_theme/page.html:20: in top-level template code
    {%- extends config.THEME_BODY_TEMPLATE %}
../weko-theme/weko_theme/templates/weko_theme/body.html:21: in top-level template code
    {%- extends "weko_theme/base.html" %}
../weko-theme/weko_theme/templates/weko_theme/base.html:13: in top-level template code
    {%- block head %}
../weko-theme/weko_theme/templates/weko_theme/base.html:62: in block "head"
    {%- block css %}
weko_workflow/templates/weko_workflow/activity_list.html:25: in block "css"
    {{ super() }}
../weko-theme/weko_theme/templates/weko_theme/base.html:63: in block "css"
    {% assets "weko_theme_css" %}
.tox/c1/lib/python3.6/site-packages/webassets/ext/jinja2.py:186: in _render_assets
    urls = bundle.urls()
.tox/c1/lib/python3.6/site-packages/webassets/bundle.py:806: in urls
    urls.extend(bundle._urls(new_ctx, extra_filters, *args, **kwargs))
.tox/c1/lib/python3.6/site-packages/webassets/bundle.py:765: in _urls
    *args, **kwargs)
.tox/c1/lib/python3.6/site-packages/webassets/bundle.py:619: in _build
    force, disable_cache=disable_cache, extra_filters=extra_filters)
.tox/c1/lib/python3.6/site-packages/webassets/bundle.py:543: in _merge_and_apply
    kwargs=item_data)
.tox/c1/lib/python3.6/site-packages/webassets/merge.py:276: in apply
    return self._wrap_cache(key, func)
.tox/c1/lib/python3.6/site-packages/webassets/merge.py:213: in _wrap_cache
    content = self.cache.get(key)
.tox/c1/lib/python3.6/site-packages/webassets/cache.py:183: in get
    filename = path.join(self.directory, '%s' % make_md5(self.V, key))
.tox/c1/lib/python3.6/site-packages/webassets/cache.py:84: in make_md5
    for d in walk(data):
.tox/c1/lib/python3.6/site-packages/webassets/cache.py:61: in walk
    for d in walk(item): yield d
.tox/c1/lib/python3.6/site-packages/webassets/cache.py:61: in walk
    for d in walk(item): yield d
.tox/c1/lib/python3.6/site-packages/webassets/cache.py:67: in walk
    yield obj.data().encode('utf-8')
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <FileHunk /code/modules/weko-workflow/static/css/weko_theme/theme.scss>

    def data(self):
>       f = open(self.filename, 'r', encoding='utf-8')
E       FileNotFoundError: [Errno 2] No such file or directory: '/code/modules/weko-workflow/static/css/weko_theme/theme.scss'

.tox/c1/lib/python3.6/site-packages/webassets/merge.py:77: FileNotFoundError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
____________________________ test_index_acl[5-True] ____________________________

client = <FlaskClient <Flask 'testapp'>>
users = [{'email': 'contributor@test.org', 'id': 2, 'obj': <User 2>}, {'email': 'repoadmin@test.org', 'id': 4, 'obj': <User 4>...eneraluser@test.org', 'id': 6, 'obj': <User 6>}, {'email': 'originalroleuser@test.org', 'id': 7, 'obj': <User 7>}, ...]
db_register2 = None, id = 5, is_permission = True

    @pytest.mark.parametrize('id, is_permission', [
        (0, True),
        (1, True),
        (2, True),
        (3, True),
        (4, True),
        (5, True),
        (6, True),
    ])
    def test_index_acl(client, users, db_register2, id, is_permission):
        login(client=client, email=users[id]['email'])
        url = url_for('weko_workflow.index',_external=True)
>       res = client.get(url)

tests/test_views.py:86: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/werkzeug/test.py:1029: in get
    return self.open(*args, **kw)
.tox/c1/lib/python3.6/site-packages/flask/testing.py:196: in open
    follow_redirects=follow_redirects
.tox/c1/lib/python3.6/site-packages/werkzeug/test.py:993: in open
    response = self.run_wsgi_app(environ.copy(), buffered=buffered)
.tox/c1/lib/python3.6/site-packages/werkzeug/test.py:884: in run_wsgi_app
    rv = run_wsgi_app(self.application, environ, buffered=buffered)
.tox/c1/lib/python3.6/site-packages/werkzeug/test.py:1119: in run_wsgi_app
    app_rv = app(environ, start_response)
.tox/c1/lib/python3.6/site-packages/flask/app.py:2334: in __call__
    return self.wsgi_app(environ, start_response)
.tox/c1/lib/python3.6/site-packages/flask/app.py:2320: in wsgi_app
    response = self.handle_exception(e)
.tox/c1/lib/python3.6/site-packages/flask/app.py:1766: in handle_exception
    reraise(exc_type, exc_value, tb)
.tox/c1/lib/python3.6/site-packages/flask/_compat.py:36: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/flask/app.py:2317: in wsgi_app
    response = self.full_dispatch_request()
.tox/c1/lib/python3.6/site-packages/flask/app.py:1840: in full_dispatch_request
    rv = self.handle_user_exception(e)
.tox/c1/lib/python3.6/site-packages/flask/app.py:1743: in handle_user_exception
    reraise(exc_type, exc_value, tb)
.tox/c1/lib/python3.6/site-packages/flask/_compat.py:36: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/flask/app.py:1838: in full_dispatch_request
    rv = self.dispatch_request()
.tox/c1/lib/python3.6/site-packages/flask/app.py:1824: in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
.tox/c1/lib/python3.6/site-packages/flask_login/utils.py:261: in decorated_view
    return func(*args, **kwargs)
weko_workflow/views.py:279: in index
    **ctx
.tox/c1/lib/python3.6/site-packages/flask/templating.py:135: in render_template
    context, ctx.app)
.tox/c1/lib/python3.6/site-packages/flask/templating.py:117: in _render
    rv = template.render(context)
.tox/c1/lib/python3.6/site-packages/jinja2/asyncsupport.py:76: in render
    return original_render(self, *args, **kwargs)
.tox/c1/lib/python3.6/site-packages/jinja2/environment.py:1008: in render
    return self.environment.handle_exception(exc_info, True)
.tox/c1/lib/python3.6/site-packages/jinja2/environment.py:780: in handle_exception
    reraise(exc_type, exc_value, tb)
.tox/c1/lib/python3.6/site-packages/jinja2/_compat.py:37: in reraise
    raise value.with_traceback(tb)
weko_workflow/templates/weko_workflow/activity_list.html:22: in top-level template code
    {%- from "invenio_communities/macros.html" import community_header %}
../weko-theme/weko_theme/templates/weko_theme/page.html:20: in top-level template code
    {%- extends config.THEME_BODY_TEMPLATE %}
../weko-theme/weko_theme/templates/weko_theme/body.html:21: in top-level template code
    {%- extends "weko_theme/base.html" %}
../weko-theme/weko_theme/templates/weko_theme/base.html:13: in top-level template code
    {%- block head %}
../weko-theme/weko_theme/templates/weko_theme/base.html:62: in block "head"
    {%- block css %}
weko_workflow/templates/weko_workflow/activity_list.html:25: in block "css"
    {{ super() }}
../weko-theme/weko_theme/templates/weko_theme/base.html:63: in block "css"
    {% assets "weko_theme_css" %}
.tox/c1/lib/python3.6/site-packages/webassets/ext/jinja2.py:186: in _render_assets
    urls = bundle.urls()
.tox/c1/lib/python3.6/site-packages/webassets/bundle.py:806: in urls
    urls.extend(bundle._urls(new_ctx, extra_filters, *args, **kwargs))
.tox/c1/lib/python3.6/site-packages/webassets/bundle.py:765: in _urls
    *args, **kwargs)
.tox/c1/lib/python3.6/site-packages/webassets/bundle.py:619: in _build
    force, disable_cache=disable_cache, extra_filters=extra_filters)
.tox/c1/lib/python3.6/site-packages/webassets/bundle.py:543: in _merge_and_apply
    kwargs=item_data)
.tox/c1/lib/python3.6/site-packages/webassets/merge.py:276: in apply
    return self._wrap_cache(key, func)
.tox/c1/lib/python3.6/site-packages/webassets/merge.py:213: in _wrap_cache
    content = self.cache.get(key)
.tox/c1/lib/python3.6/site-packages/webassets/cache.py:183: in get
    filename = path.join(self.directory, '%s' % make_md5(self.V, key))
.tox/c1/lib/python3.6/site-packages/webassets/cache.py:84: in make_md5
    for d in walk(data):
.tox/c1/lib/python3.6/site-packages/webassets/cache.py:61: in walk
    for d in walk(item): yield d
.tox/c1/lib/python3.6/site-packages/webassets/cache.py:61: in walk
    for d in walk(item): yield d
.tox/c1/lib/python3.6/site-packages/webassets/cache.py:67: in walk
    yield obj.data().encode('utf-8')
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <FileHunk /code/modules/weko-workflow/static/css/weko_theme/theme.scss>

    def data(self):
>       f = open(self.filename, 'r', encoding='utf-8')
E       FileNotFoundError: [Errno 2] No such file or directory: '/code/modules/weko-workflow/static/css/weko_theme/theme.scss'

.tox/c1/lib/python3.6/site-packages/webassets/merge.py:77: FileNotFoundError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
____________________________ test_index_acl[6-True] ____________________________

client = <FlaskClient <Flask 'testapp'>>
users = [{'email': 'contributor@test.org', 'id': 2, 'obj': <User 2>}, {'email': 'repoadmin@test.org', 'id': 4, 'obj': <User 4>...eneraluser@test.org', 'id': 6, 'obj': <User 6>}, {'email': 'originalroleuser@test.org', 'id': 7, 'obj': <User 7>}, ...]
db_register2 = None, id = 6, is_permission = True

    @pytest.mark.parametrize('id, is_permission', [
        (0, True),
        (1, True),
        (2, True),
        (3, True),
        (4, True),
        (5, True),
        (6, True),
    ])
    def test_index_acl(client, users, db_register2, id, is_permission):
        login(client=client, email=users[id]['email'])
        url = url_for('weko_workflow.index',_external=True)
>       res = client.get(url)

tests/test_views.py:86: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/werkzeug/test.py:1029: in get
    return self.open(*args, **kw)
.tox/c1/lib/python3.6/site-packages/flask/testing.py:196: in open
    follow_redirects=follow_redirects
.tox/c1/lib/python3.6/site-packages/werkzeug/test.py:993: in open
    response = self.run_wsgi_app(environ.copy(), buffered=buffered)
.tox/c1/lib/python3.6/site-packages/werkzeug/test.py:884: in run_wsgi_app
    rv = run_wsgi_app(self.application, environ, buffered=buffered)
.tox/c1/lib/python3.6/site-packages/werkzeug/test.py:1119: in run_wsgi_app
    app_rv = app(environ, start_response)
.tox/c1/lib/python3.6/site-packages/flask/app.py:2334: in __call__
    return self.wsgi_app(environ, start_response)
.tox/c1/lib/python3.6/site-packages/flask/app.py:2320: in wsgi_app
    response = self.handle_exception(e)
.tox/c1/lib/python3.6/site-packages/flask/app.py:1766: in handle_exception
    reraise(exc_type, exc_value, tb)
.tox/c1/lib/python3.6/site-packages/flask/_compat.py:36: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/flask/app.py:2317: in wsgi_app
    response = self.full_dispatch_request()
.tox/c1/lib/python3.6/site-packages/flask/app.py:1840: in full_dispatch_request
    rv = self.handle_user_exception(e)
.tox/c1/lib/python3.6/site-packages/flask/app.py:1743: in handle_user_exception
    reraise(exc_type, exc_value, tb)
.tox/c1/lib/python3.6/site-packages/flask/_compat.py:36: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/flask/app.py:1838: in full_dispatch_request
    rv = self.dispatch_request()
.tox/c1/lib/python3.6/site-packages/flask/app.py:1824: in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
.tox/c1/lib/python3.6/site-packages/flask_login/utils.py:261: in decorated_view
    return func(*args, **kwargs)
weko_workflow/views.py:279: in index
    **ctx
.tox/c1/lib/python3.6/site-packages/flask/templating.py:135: in render_template
    context, ctx.app)
.tox/c1/lib/python3.6/site-packages/flask/templating.py:117: in _render
    rv = template.render(context)
.tox/c1/lib/python3.6/site-packages/jinja2/asyncsupport.py:76: in render
    return original_render(self, *args, **kwargs)
.tox/c1/lib/python3.6/site-packages/jinja2/environment.py:1008: in render
    return self.environment.handle_exception(exc_info, True)
.tox/c1/lib/python3.6/site-packages/jinja2/environment.py:780: in handle_exception
    reraise(exc_type, exc_value, tb)
.tox/c1/lib/python3.6/site-packages/jinja2/_compat.py:37: in reraise
    raise value.with_traceback(tb)
weko_workflow/templates/weko_workflow/activity_list.html:22: in top-level template code
    {%- from "invenio_communities/macros.html" import community_header %}
../weko-theme/weko_theme/templates/weko_theme/page.html:20: in top-level template code
    {%- extends config.THEME_BODY_TEMPLATE %}
../weko-theme/weko_theme/templates/weko_theme/body.html:21: in top-level template code
    {%- extends "weko_theme/base.html" %}
../weko-theme/weko_theme/templates/weko_theme/base.html:13: in top-level template code
    {%- block head %}
../weko-theme/weko_theme/templates/weko_theme/base.html:62: in block "head"
    {%- block css %}
weko_workflow/templates/weko_workflow/activity_list.html:25: in block "css"
    {{ super() }}
../weko-theme/weko_theme/templates/weko_theme/base.html:63: in block "css"
    {% assets "weko_theme_css" %}
.tox/c1/lib/python3.6/site-packages/webassets/ext/jinja2.py:186: in _render_assets
    urls = bundle.urls()
.tox/c1/lib/python3.6/site-packages/webassets/bundle.py:806: in urls
    urls.extend(bundle._urls(new_ctx, extra_filters, *args, **kwargs))
.tox/c1/lib/python3.6/site-packages/webassets/bundle.py:765: in _urls
    *args, **kwargs)
.tox/c1/lib/python3.6/site-packages/webassets/bundle.py:619: in _build
    force, disable_cache=disable_cache, extra_filters=extra_filters)
.tox/c1/lib/python3.6/site-packages/webassets/bundle.py:543: in _merge_and_apply
    kwargs=item_data)
.tox/c1/lib/python3.6/site-packages/webassets/merge.py:276: in apply
    return self._wrap_cache(key, func)
.tox/c1/lib/python3.6/site-packages/webassets/merge.py:213: in _wrap_cache
    content = self.cache.get(key)
.tox/c1/lib/python3.6/site-packages/webassets/cache.py:183: in get
    filename = path.join(self.directory, '%s' % make_md5(self.V, key))
.tox/c1/lib/python3.6/site-packages/webassets/cache.py:84: in make_md5
    for d in walk(data):
.tox/c1/lib/python3.6/site-packages/webassets/cache.py:61: in walk
    for d in walk(item): yield d
.tox/c1/lib/python3.6/site-packages/webassets/cache.py:61: in walk
    for d in walk(item): yield d
.tox/c1/lib/python3.6/site-packages/webassets/cache.py:67: in walk
    yield obj.data().encode('utf-8')
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <FileHunk /code/modules/weko-workflow/static/css/weko_theme/theme.scss>

    def data(self):
>       f = open(self.filename, 'r', encoding='utf-8')
E       FileNotFoundError: [Errno 2] No such file or directory: '/code/modules/weko-workflow/static/css/weko_theme/theme.scss'

.tox/c1/lib/python3.6/site-packages/webassets/merge.py:77: FileNotFoundError
------------------------------ Captured log setup ------------------------------
WARNING  flask.app:ext.py:255 JSONSCHEMAS_HOST is set to localhost
=============================== warnings summary ===============================
../invenio-indexer/invenio_indexer/cli.py:108
  /code/modules/invenio-indexer/invenio_indexer/cli.py:108: DeprecationWarning: 'resultcallback' has been renamed to 'result_callback'. The old name will be removed in Click 8.1.
    @queue.resultcallback()

.tox/c1/lib/python3.6/site-packages/flask_oauthlib/contrib/cache.py:3
  /code/modules/weko-workflow/.tox/c1/lib/python3.6/site-packages/flask_oauthlib/contrib/cache.py:3: DeprecationWarning: 'werkzeug.contrib.cache' is deprecated as of version 0.15 and will be removed in version 1.0. It has moved to https://github.com/pallets/cachelib.
    from werkzeug.contrib.cache import NullCache, SimpleCache, FileSystemCache

.tox/c1/lib/python3.6/site-packages/past/translation/__init__.py:35
  /code/modules/weko-workflow/.tox/c1/lib/python3.6/site-packages/past/translation/__init__.py:35: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
    import imp

tests/test_admin.py: 572 warnings
tests/test_api.py: 156 warnings
tests/test_cli.py: 52 warnings
tests/test_romeo.py: 78 warnings
tests/test_sessions.py: 26 warnings
tests/test_tasks.py: 26 warnings
tests/test_utils.py: 2782 warnings
tests/test_views.py: 7930 warnings
  /code/modules/weko-workflow/.tox/c1/lib/python3.6/site-packages/invenio_admin/ext.py:73: PendingDeprecationWarning: Usage of model and modelview kwargs are deprecated in favor of view_class, args and kwargs.
    PendingDeprecationWarning

tests/test_admin.py: 22 warnings
tests/test_api.py: 6 warnings
tests/test_cli.py: 2 warnings
tests/test_romeo.py: 3 warnings
tests/test_sessions.py: 1 warning
tests/test_tasks.py: 1 warning
tests/test_utils.py: 107 warnings
tests/test_views.py: 305 warnings
  /code/modules/weko-workflow/.tox/c1/lib/python3.6/site-packages/flask_admin/model/base.py:1416: UserWarning: Fields missing from ruleset: created_userId,created_date,updated_userId,updated_date
    warnings.warn(text)

tests/test_admin.py: 22 warnings
tests/test_api.py: 6 warnings
tests/test_cli.py: 2 warnings
tests/test_romeo.py: 3 warnings
tests/test_sessions.py: 1 warning
tests/test_tasks.py: 1 warning
tests/test_utils.py: 107 warnings
tests/test_views.py: 305 warnings
  /code/modules/invenio-oaiserver/invenio_oaiserver/ext.py:138: UserWarning: Please specify the OAISERVER_ID_PREFIX configuration.default value is: oai:63ee5d1d2822:recid/
    app.config.get('OAISERVER_ID_PREFIX')))

tests/test_admin.py: 15 warnings
tests/test_api.py: 2 warnings
tests/test_cli.py: 1 warning
tests/test_sessions.py: 1 warning
tests/test_utils.py: 14 warnings
tests/test_views.py: 231 warnings
  /code/modules/weko-workflow/.tox/c1/lib/python3.6/site-packages/sqlalchemy/orm/session.py:2455: SAWarning: Usage of the 'Session.add()' operation is not currently supported within the execution stage of the flush process. Results may not be consistent.  Consider using alternative event listeners or connection-level operations instead.
    "event listeners or connection-level operations instead." % method

-- Docs: https://docs.pytest.org/en/stable/warnings.html

---------- coverage: platform linux, python 3.6.15-final-0 -----------
Name                                  Stmts   Miss Branch BrPart  Cover
-----------------------------------------------------------------------
weko_workflow/__init__.py                 4      0      0      0   100%
weko_workflow/admin.py                  223    101     72      8    52%
weko_workflow/api.py                   1215    878    414     38    26%
weko_workflow/bundles.py                 14      0      0      0   100%
weko_workflow/cli.py                    109     22     42     15    74%
weko_workflow/config.py                  90      0      0      0   100%
weko_workflow/errors.py                  18      0     10      0   100%
weko_workflow/ext.py                     21      0     10      2    94%
weko_workflow/models.py                 310     20     76     12    91%
weko_workflow/romeo.py                   22      0      0      0   100%
weko_workflow/schema/marshmallow.py      87      0     56      0   100%
weko_workflow/schema/utils.py            22     16     14      1    19%
weko_workflow/scopes.py                   6      0      0      0   100%
weko_workflow/sessions.py                13      6      4      0    41%
weko_workflow/tasks.py                    7      0      0      0   100%
weko_workflow/utils.py                 1855   1171    812     20    36%
weko_workflow/version.py                  2      0      0      0   100%
weko_workflow/views.py                 1329   1078    472      9    15%
-----------------------------------------------------------------------
TOTAL                                  5347   3292   1982    105    36%
Coverage HTML written to dir htmlcov

=========================== short test summary info ============================
FAILED tests/test_admin.py::TestFlowSettingView::test_flow_detail_acl[1-200]
FAILED tests/test_admin.py::TestFlowSettingView::test_update_flow - Attribute...
FAILED tests/test_admin.py::TestFlowSettingView::test_new_flow - AttributeErr...
FAILED tests/test_admin.py::TestFlowSettingView::test_del_flow - AttributeErr...
FAILED tests/test_admin.py::TestFlowSettingView::test_get_actions - Assertion...
FAILED tests/test_admin.py::TestFlowSettingView::test_upt_flow_action - Attri...
FAILED tests/test_admin.py::TestWorkFlowSettingView::test_index_acl[1-200] - ...
FAILED tests/test_admin.py::TestWorkFlowSettingView::test_update_workflow_acl[1-200]
FAILED tests/test_admin.py::TestWorkFlowSettingView::test_save_workflow_role
FAILED tests/test_admin.py::TestWorkFlowSettingView::test_get_language_workflows
FAILED tests/test_cli.py::test_init_workflow_tables - assert ("(sqlite3.Integ...
FAILED tests/test_utils.py::test_get_index_id - BaseException
FAILED tests/test_views.py::test_regex_replace - TypeError: sanitize_html() t...
FAILED tests/test_views.py::test_index_acl[0-True] - FileNotFoundError: [Errn...
FAILED tests/test_views.py::test_index_acl[1-True] - FileNotFoundError: [Errn...
FAILED tests/test_views.py::test_index_acl[2-True] - FileNotFoundError: [Errn...
FAILED tests/test_views.py::test_index_acl[3-True] - FileNotFoundError: [Errn...
FAILED tests/test_views.py::test_index_acl[4-True] - FileNotFoundError: [Errn...
FAILED tests/test_views.py::test_index_acl[5-True] - FileNotFoundError: [Errn...
FAILED tests/test_views.py::test_index_acl[6-True] - FileNotFoundError: [Errn...
ERROR tests/test_api.py::test_WorkActivity_get_all_activity_list - KeyError: ...
ERROR tests/test_api.py::test_WorkActivity_get_activity_index_search - KeyErr...
ERROR tests/test_api.py::test_WorkActivity_upt_activity_detail - KeyError: 'i...
ERROR tests/test_api.py::test_WorkActivity_get_corresponding_usage_activities
ERROR tests/test_sessions.py::test_upt_activity_item - KeyError: 'invenio-ind...
ERROR tests/test_utils.py::test_saving_doi_pidstore - KeyError: 'invenio-inde...
ERROR tests/test_utils.py::test_register_hdl - KeyError: 'invenio-indexer'
ERROR tests/test_utils.py::test_register_hdl_by_item_id - KeyError: 'invenio-...
ERROR tests/test_utils.py::test_register_hdl_by_handle - KeyError: 'invenio-i...
ERROR tests/test_utils.py::test_item_metadata_validation - KeyError: 'invenio...
ERROR tests/test_utils.py::test_validation_item_property - KeyError: 'invenio...
ERROR tests/test_utils.py::test_handle_check_required_data - KeyError: 'inven...
ERROR tests/test_utils.py::test_handle_check_required_pattern_and_either - Ke...
ERROR tests/test_utils.py::test_get_activity_id_of_record_without_version - K...
ERROR tests/test_utils.py::test_MappingData__init__ - KeyError: 'invenio-inde...
ERROR tests/test_utils.py::test_MappingData_get_data_by_mapping - KeyError: '...
ERROR tests/test_utils.py::test_MappingData_get_first_data_by_mapping - KeyEr...
ERROR tests/test_utils.py::test_MappingData_get_first_property_by_mapping - K...
ERROR tests/test_utils.py::test_IdentifierHandle___init__ - KeyError: 'inveni...
ERROR tests/test_utils.py::test_IdentifierHandle_get_pidstore - KeyError: 'in...
ERROR tests/test_utils.py::test_IdentifierHandle_check_pidstore_exist - KeyEr...
ERROR tests/test_utils.py::test_IdentifierHandle_register_pidstore - KeyError...
ERROR tests/test_utils.py::test_IdentifierHandle_delete_pidstore_doi - KeyErr...
ERROR tests/test_utils.py::test_IdentifierHandle_remove_idt_registration_metadata
ERROR tests/test_utils.py::test_IdentifierHandle_update_idt_registration_metadata
ERROR tests/test_utils.py::test_IdentifierHandle_get_idt_registration_data - ...
ERROR tests/test_utils.py::test_IdentifierHandle_commit - KeyError: 'invenio-...
ERROR tests/test_utils.py::test_delete_bucket - KeyError: 'invenio-indexer'
ERROR tests/test_utils.py::test_merge_buckets_by_records[True] - KeyError: 'i...
ERROR tests/test_utils.py::test_merge_buckets_by_records[False] - KeyError: '...
ERROR tests/test_utils.py::test_merge_buckets_by_records_error - KeyError: 'i...
ERROR tests/test_utils.py::test_set_bucket_default_size - KeyError: 'invenio-...
ERROR tests/test_utils.py::test_get_parent_pid_with_type - KeyError: 'invenio...
ERROR tests/test_utils.py::test_convert_record_to_item_metadata - KeyError: '...
ERROR tests/test_utils.py::test_prepare_edit_workflow - KeyError: 'invenio-in...
ERROR tests/test_utils.py::test_handle_finish_workflow - KeyError: 'invenio-i...
ERROR tests/test_utils.py::test_check_existed_doi - KeyError: 'invenio-indexer'
ERROR tests/test_utils.py::test_get_record_by_root_ver - KeyError: 'invenio-i...
ERROR tests/test_utils.py::test_get_disptype_and_ver_in_metainfo - KeyError: ...
ERROR tests/test_utils.py::test_set_files_display_type - KeyError: 'invenio-i...
ERROR tests/test_utils.py::test_get_thumbnails - KeyError: 'invenio-indexer'
ERROR tests/test_utils.py::test_get_allow_multi_thumbnail - KeyError: 'inveni...
ERROR tests/test_utils.py::test_is_usage_application_item_type - KeyError: 'i...
ERROR tests/test_utils.py::test_is_usage_application - KeyError: 'invenio-ind...
ERROR tests/test_utils.py::test_register_info - KeyError: 'invenio-indexer'
ERROR tests/test_utils.py::test_get_item_info - KeyError: 'invenio-indexer'
ERROR tests/test_utils.py::test_set_mail_info - KeyError: 'invenio-indexer'
ERROR tests/test_utils.py::test_process_send_reminder_mail - KeyError: 'inven...
ERROR tests/test_utils.py::test_process_send_notification_mail - KeyError: 'i...
ERROR tests/test_utils.py::test_get_application_and_approval_date - KeyError:...
ERROR tests/test_utils.py::test_get_workflow_item_type_names - KeyError: 'inv...
ERROR tests/test_utils.py::test_create_usage_report - KeyError: 'invenio-inde...
ERROR tests/test_utils.py::test_create_record_metadata - KeyError: 'invenio-i...
ERROR tests/test_utils.py::test_modify_item_metadata - KeyError: 'invenio-ind...
ERROR tests/test_utils.py::test_update_activity_action - KeyError: 'invenio-i...
ERROR tests/test_utils.py::test_check_continue - KeyError: 'invenio-indexer'
ERROR tests/test_utils.py::test_init_activity_for_guest_user - KeyError: 'inv...
ERROR tests/test_utils.py::test_get_activity_display_info - KeyError: 'inveni...
ERROR tests/test_utils.py::test___init_activity_detail_data_for_guest - KeyEr...
ERROR tests/test_utils.py::test_prepare_data_for_guest_activity - KeyError: '...
ERROR tests/test_utils.py::test_cancel_expired_usage_reports - KeyError: 'inv...
ERROR tests/test_utils.py::test_process_send_approval_mails - KeyError: 'inve...
ERROR tests/test_utils.py::test_get_usage_data - KeyError: 'invenio-indexer'
ERROR tests/test_utils.py::test_update_approval_date - KeyError: 'invenio-ind...
ERROR tests/test_utils.py::test_create_record_metadata_for_user - KeyError: '...
ERROR tests/test_utils.py::test_update_system_data_for_item_metadata - KeyErr...
ERROR tests/test_utils.py::test_update_approval_date_for_deposit - KeyError: ...
ERROR tests/test_utils.py::test_update_system_data_for_activity - KeyError: '...
ERROR tests/test_utils.py::test_check_authority_by_admin - KeyError: 'invenio...
ERROR tests/test_utils.py::test_get_record_first_version - KeyError: 'invenio...
ERROR tests/test_utils.py::test_get_files_and_thumbnail - KeyError: 'invenio-...
ERROR tests/test_utils.py::test_get_pid_and_record - KeyError: 'invenio-indexer'
ERROR tests/test_utils.py::test_get_items_metadata_by_activity_detail - KeyEr...
ERROR tests/test_utils.py::test_get_main_record_detail - KeyError: 'invenio-i...
ERROR tests/test_utils.py::test_prepare_doi_link_workflow - KeyError: 'inveni...
ERROR tests/test_utils.py::test_get_pid_value_by_activity_detail - KeyError: ...
ERROR tests/test_utils.py::test_make_activitylog_tsv - KeyError: 'invenio-ind...
ERROR tests/test_views.py::test_iframe_success - KeyError: 'invenio-indexer'
ERROR tests/test_views.py::test_init_activity_acl[0-200] - KeyError: 'invenio...
ERROR tests/test_views.py::test_init_activity_acl[1-200] - KeyError: 'invenio...
ERROR tests/test_views.py::test_init_activity_acl[2-200] - KeyError: 'invenio...
ERROR tests/test_views.py::test_init_activity_acl[3-200] - KeyError: 'invenio...
ERROR tests/test_views.py::test_init_activity_acl[4-200] - KeyError: 'invenio...
ERROR tests/test_views.py::test_init_activity_acl[5-200] - KeyError: 'invenio...
ERROR tests/test_views.py::test_init_activity_acl[6-200] - KeyError: 'invenio...
ERROR tests/test_views.py::test_init_activity[0-200] - KeyError: 'invenio-ind...
ERROR tests/test_views.py::test_init_activity[1-200] - KeyError: 'invenio-ind...
ERROR tests/test_views.py::test_init_activity[2-200] - KeyError: 'invenio-ind...
ERROR tests/test_views.py::test_init_activity[3-200] - KeyError: 'invenio-ind...
ERROR tests/test_views.py::test_init_activity[4-200] - KeyError: 'invenio-ind...
ERROR tests/test_views.py::test_init_activity[5-200] - KeyError: 'invenio-ind...
ERROR tests/test_views.py::test_init_activity[6-200] - KeyError: 'invenio-ind...
ERROR tests/test_views.py::test_save_feedback_maillist_users[0-200] - KeyErro...
ERROR tests/test_views.py::test_save_feedback_maillist_users[1-200] - KeyErro...
ERROR tests/test_views.py::test_save_feedback_maillist_users[2-200] - KeyErro...
ERROR tests/test_views.py::test_save_feedback_maillist_users[3-200] - KeyErro...
ERROR tests/test_views.py::test_save_feedback_maillist_users[4-200] - KeyErro...
ERROR tests/test_views.py::test_save_feedback_maillist_users[5-200] - KeyErro...
ERROR tests/test_views.py::test_save_feedback_maillist_users[6-200] - KeyErro...
ERROR tests/test_views.py::test_previous_action_acl_users[0-403-False] - KeyE...
ERROR tests/test_views.py::test_previous_action_acl_users[1-403-True] - KeyEr...
ERROR tests/test_views.py::test_previous_action_acl_users[2-403-True] - KeyEr...
ERROR tests/test_views.py::test_previous_action_acl_users[3-403-True] - KeyEr...
ERROR tests/test_views.py::test_previous_action_acl_users[4-403-False] - KeyE...
ERROR tests/test_views.py::test_previous_action_acl_users[5-403-False] - KeyE...
ERROR tests/test_views.py::test_previous_action_acl_users[6-403-True] - KeyEr...
ERROR tests/test_views.py::test_previous_action[0-200] - KeyError: 'invenio-i...
ERROR tests/test_views.py::test_previous_action[1-200] - KeyError: 'invenio-i...
ERROR tests/test_views.py::test_previous_action[2-200] - KeyError: 'invenio-i...
ERROR tests/test_views.py::test_previous_action[3-200] - KeyError: 'invenio-i...
ERROR tests/test_views.py::test_previous_action[4-200] - KeyError: 'invenio-i...
ERROR tests/test_views.py::test_previous_action[5-200] - KeyError: 'invenio-i...
ERROR tests/test_views.py::test_previous_action[6-200] - KeyError: 'invenio-i...
ERROR tests/test_views.py::test_next_action_acl_nologin - KeyError: 'invenio-...
ERROR tests/test_views.py::test_next_action_acl_users[0-403-False] - KeyError...
ERROR tests/test_views.py::test_next_action_acl_users[1-403-True] - KeyError:...
ERROR tests/test_views.py::test_next_action_acl_users[2-403-True] - KeyError:...
ERROR tests/test_views.py::test_next_action_acl_users[3-403-True] - KeyError:...
ERROR tests/test_views.py::test_next_action_acl_users[4-403-False] - KeyError...
ERROR tests/test_views.py::test_next_action_acl_users[5-403-False] - KeyError...
ERROR tests/test_views.py::test_next_action_acl_users[6-403-True] - KeyError:...
ERROR tests/test_views.py::test_next_action_acl_guestlogin - KeyError: 'inven...
ERROR tests/test_views.py::test_next_action[0-200] - KeyError: 'invenio-indexer'
ERROR tests/test_views.py::test_next_action[1-200] - KeyError: 'invenio-indexer'
ERROR tests/test_views.py::test_next_action[2-200] - KeyError: 'invenio-indexer'
ERROR tests/test_views.py::test_next_action[3-200] - KeyError: 'invenio-indexer'
ERROR tests/test_views.py::test_next_action[4-200] - KeyError: 'invenio-indexer'
ERROR tests/test_views.py::test_next_action[5-200] - KeyError: 'invenio-indexer'
ERROR tests/test_views.py::test_next_action[6-200] - KeyError: 'invenio-indexer'
ERROR tests/test_views.py::test_cancel_action_acl_users[0-403-False] - KeyErr...
ERROR tests/test_views.py::test_cancel_action_acl_users[1-403-True] - KeyErro...
ERROR tests/test_views.py::test_cancel_action_acl_users[2-403-True] - KeyErro...
ERROR tests/test_views.py::test_cancel_action_acl_users[3-403-True] - KeyErro...
ERROR tests/test_views.py::test_cancel_action_acl_users[4-403-False] - KeyErr...
ERROR tests/test_views.py::test_cancel_action_acl_users[5-403-False] - KeyErr...
ERROR tests/test_views.py::test_cancel_action_acl_users[6-403-True] - KeyErro...
ERROR tests/test_views.py::test_cancel_action_acl_guestlogin - KeyError: 'inv...
ERROR tests/test_views.py::test_cancel_action[0-200] - KeyError: 'invenio-ind...
ERROR tests/test_views.py::test_cancel_action[1-200] - KeyError: 'invenio-ind...
ERROR tests/test_views.py::test_cancel_action[2-200] - KeyError: 'invenio-ind...
ERROR tests/test_views.py::test_cancel_action[3-200] - KeyError: 'invenio-ind...
ERROR tests/test_views.py::test_cancel_action[4-200] - KeyError: 'invenio-ind...
ERROR tests/test_views.py::test_cancel_action[5-200] - KeyError: 'invenio-ind...
ERROR tests/test_views.py::test_cancel_action[6-200] - KeyError: 'invenio-ind...
ERROR tests/test_views.py::test_cancel_action_guest - KeyError: 'invenio-inde...
ERROR tests/test_views.py::test_lock_activity[0-200] - KeyError: 'invenio-ind...
ERROR tests/test_views.py::test_lock_activity[1-200] - KeyError: 'invenio-ind...
ERROR tests/test_views.py::test_lock_activity[2-200] - KeyError: 'invenio-ind...
ERROR tests/test_views.py::test_lock_activity[3-200] - KeyError: 'invenio-ind...
ERROR tests/test_views.py::test_lock_activity[4-200] - KeyError: 'invenio-ind...
ERROR tests/test_views.py::test_lock_activity[5-200] - KeyError: 'invenio-ind...
ERROR tests/test_views.py::test_lock_activity[6-200] - KeyError: 'invenio-ind...
ERROR tests/test_views.py::test_unlock_activity[0-200] - KeyError: 'invenio-i...
ERROR tests/test_views.py::test_unlock_activity[1-200] - KeyError: 'invenio-i...
ERROR tests/test_views.py::test_unlock_activity[2-200] - KeyError: 'invenio-i...
ERROR tests/test_views.py::test_unlock_activity[3-200] - KeyError: 'invenio-i...
ERROR tests/test_views.py::test_unlock_activity[4-200] - KeyError: 'invenio-i...
ERROR tests/test_views.py::test_unlock_activity[5-200] - KeyError: 'invenio-i...
ERROR tests/test_views.py::test_unlock_activity[6-200] - KeyError: 'invenio-i...
ERROR tests/test_views.py::test_check_approval[0-200] - KeyError: 'invenio-in...
ERROR tests/test_views.py::test_check_approval[1-200] - KeyError: 'invenio-in...
ERROR tests/test_views.py::test_check_approval[2-200] - KeyError: 'invenio-in...
ERROR tests/test_views.py::test_check_approval[3-200] - KeyError: 'invenio-in...
ERROR tests/test_views.py::test_check_approval[4-200] - KeyError: 'invenio-in...
ERROR tests/test_views.py::test_check_approval[5-200] - KeyError: 'invenio-in...
ERROR tests/test_views.py::test_check_approval[6-200] - KeyError: 'invenio-in...
ERROR tests/test_views.py::test_get_feedback_maillist[0-200] - KeyError: 'inv...
ERROR tests/test_views.py::test_get_feedback_maillist[1-200] - KeyError: 'inv...
ERROR tests/test_views.py::test_get_feedback_maillist[2-200] - KeyError: 'inv...
ERROR tests/test_views.py::test_get_feedback_maillist[3-200] - KeyError: 'inv...
ERROR tests/test_views.py::test_get_feedback_maillist[4-200] - KeyError: 'inv...
ERROR tests/test_views.py::test_get_feedback_maillist[5-200] - KeyError: 'inv...
ERROR tests/test_views.py::test_get_feedback_maillist[6-200] - KeyError: 'inv...
ERROR tests/test_views.py::test_save_activity[0-200] - KeyError: 'invenio-ind...
ERROR tests/test_views.py::test_save_activity[1-200] - KeyError: 'invenio-ind...
ERROR tests/test_views.py::test_save_activity[2-200] - KeyError: 'invenio-ind...
ERROR tests/test_views.py::test_save_activity[3-200] - KeyError: 'invenio-ind...
ERROR tests/test_views.py::test_save_activity[4-200] - KeyError: 'invenio-ind...
ERROR tests/test_views.py::test_save_activity[5-200] - KeyError: 'invenio-ind...
ERROR tests/test_views.py::test_save_activity[6-200] - KeyError: 'invenio-ind...
ERROR tests/test_views.py::test_display_activity_users[0-200] - KeyError: 'in...
ERROR tests/test_views.py::test_display_activity_users[1-200] - KeyError: 'in...
ERROR tests/test_views.py::test_display_activity_users[2-200] - KeyError: 'in...
ERROR tests/test_views.py::test_display_activity_users[3-200] - KeyError: 'in...
ERROR tests/test_views.py::test_display_activity_users[4-200] - KeyError: 'in...
ERROR tests/test_views.py::test_display_activity_users[5-200] - KeyError: 'in...
ERROR tests/test_views.py::test_display_activity_users[6-200] - KeyError: 'in...
ERROR tests/test_views.py::test_display_activity[0-200] - KeyError: 'invenio-...
ERROR tests/test_views.py::test_display_activity[1-200] - KeyError: 'invenio-...
ERROR tests/test_views.py::test_display_activity[2-200] - KeyError: 'invenio-...
ERROR tests/test_views.py::test_display_activity[3-200] - KeyError: 'invenio-...
ERROR tests/test_views.py::test_display_activity[4-200] - KeyError: 'invenio-...
ERROR tests/test_views.py::test_display_activity[5-200] - KeyError: 'invenio-...
ERROR tests/test_views.py::test_display_activity[6-200] - KeyError: 'invenio-...
ERROR tests/test_views.py::test_withdraw_confirm_users[0-403-False] - KeyErro...
ERROR tests/test_views.py::test_withdraw_confirm_users[1-403-True] - KeyError...
ERROR tests/test_views.py::test_withdraw_confirm_users[2-403-True] - KeyError...
ERROR tests/test_views.py::test_withdraw_confirm_users[3-403-True] - KeyError...
ERROR tests/test_views.py::test_withdraw_confirm_users[4-403-False] - KeyErro...
ERROR tests/test_views.py::test_withdraw_confirm_users[5-403-False] - KeyErro...
ERROR tests/test_views.py::test_withdraw_confirm_users[6-403-True] - KeyError...
ERROR tests/test_views.py::test_withdraw_confirm_guestlogin - KeyError: 'inve...
ERROR tests/test_views.py::test_withdraw_confirm_exception1[0] - KeyError: 'i...
ERROR tests/test_views.py::test_withdraw_confirm_exception1[1] - KeyError: 'i...
ERROR tests/test_views.py::test_withdraw_confirm_exception1[2] - KeyError: 'i...
ERROR tests/test_views.py::test_withdraw_confirm_exception1[3] - KeyError: 'i...
ERROR tests/test_views.py::test_withdraw_confirm_exception1[4] - KeyError: 'i...
ERROR tests/test_views.py::test_withdraw_confirm_exception1[5] - KeyError: 'i...
ERROR tests/test_views.py::test_withdraw_confirm_exception1[6] - KeyError: 'i...
ERROR tests/test_views.py::test_withdraw_confirm_exception1_guestlogin - KeyE...
ERROR tests/test_views.py::test_withdraw_confirm_exception2[0-input_data0-500--1-{'passwd': ['Missing data for required field.']}]
ERROR tests/test_views.py::test_withdraw_confirm_exception2[0-input_data1-500--1-{'passwd': ['Field may not be null.']}]
ERROR tests/test_views.py::test_withdraw_confirm_exception2[0-input_data2-500--1-bad identifier data]
ERROR tests/test_views.py::test_withdraw_confirm_exception2[0-input_data3-500--1-Invalid password]
ERROR tests/test_views.py::test_withdraw_confirm_exception2[1-input_data0-500--1-{'passwd': ['Missing data for required field.']}]
ERROR tests/test_views.py::test_withdraw_confirm_exception2[1-input_data1-500--1-{'passwd': ['Field may not be null.']}]
ERROR tests/test_views.py::test_withdraw_confirm_exception2[1-input_data2-500--1-bad identifier data]
ERROR tests/test_views.py::test_withdraw_confirm_exception2[1-input_data3-500--1-Invalid password]
ERROR tests/test_views.py::test_withdraw_confirm_exception2[2-input_data0-500--1-{'passwd': ['Missing data for required field.']}]
ERROR tests/test_views.py::test_withdraw_confirm_exception2[2-input_data1-500--1-{'passwd': ['Field may not be null.']}]
ERROR tests/test_views.py::test_withdraw_confirm_exception2[2-input_data2-500--1-bad identifier data]
ERROR tests/test_views.py::test_withdraw_confirm_exception2[2-input_data3-500--1-Invalid password]
ERROR tests/test_views.py::test_withdraw_confirm_exception2[3-input_data0-500--1-{'passwd': ['Missing data for required field.']}]
ERROR tests/test_views.py::test_withdraw_confirm_exception2[3-input_data1-500--1-{'passwd': ['Field may not be null.']}]
ERROR tests/test_views.py::test_withdraw_confirm_exception2[3-input_data2-500--1-bad identifier data]
ERROR tests/test_views.py::test_withdraw_confirm_exception2[3-input_data3-500--1-Invalid password]
ERROR tests/test_views.py::test_withdraw_confirm_exception2[4-input_data0-500--1-{'passwd': ['Missing data for required field.']}]
ERROR tests/test_views.py::test_withdraw_confirm_exception2[4-input_data1-500--1-{'passwd': ['Field may not be null.']}]
ERROR tests/test_views.py::test_withdraw_confirm_exception2[4-input_data2-500--1-bad identifier data]
ERROR tests/test_views.py::test_withdraw_confirm_exception2[4-input_data3-500--1-Invalid password]
ERROR tests/test_views.py::test_withdraw_confirm_exception2[5-input_data0-500--1-{'passwd': ['Missing data for required field.']}]
ERROR tests/test_views.py::test_withdraw_confirm_exception2[5-input_data1-500--1-{'passwd': ['Field may not be null.']}]
ERROR tests/test_views.py::test_withdraw_confirm_exception2[5-input_data2-500--1-bad identifier data]
ERROR tests/test_views.py::test_withdraw_confirm_exception2[5-input_data3-500--1-Invalid password]
ERROR tests/test_views.py::test_withdraw_confirm_exception2[6-input_data0-500--1-{'passwd': ['Missing data for required field.']}]
ERROR tests/test_views.py::test_withdraw_confirm_exception2[6-input_data1-500--1-{'passwd': ['Field may not be null.']}]
ERROR tests/test_views.py::test_withdraw_confirm_exception2[6-input_data2-500--1-bad identifier data]
ERROR tests/test_views.py::test_withdraw_confirm_exception2[6-input_data3-500--1-Invalid password]
ERROR tests/test_views.py::test_withdraw_confirm_exception2_guestlogin[input_data0-500--1-{'passwd': ['Missing data for required field.']}]
ERROR tests/test_views.py::test_withdraw_confirm_exception2_guestlogin[input_data1-500--1-{'passwd': ['Field may not be null.']}]
ERROR tests/test_views.py::test_withdraw_confirm_exception2_guestlogin[input_data2-500--1-bad identifier data]
ERROR tests/test_views.py::test_withdraw_confirm_exception2_guestlogin[input_data3-500--1-Invalid password]
ERROR tests/test_views.py::test_withdraw_confirm_passwd_delete[0-success-200-0-success]
ERROR tests/test_views.py::test_withdraw_confirm_passwd_delete[1-success-200-0-success]
ERROR tests/test_views.py::test_withdraw_confirm_passwd_delete[2-success-200-0-success]
ERROR tests/test_views.py::test_withdraw_confirm_passwd_delete[3-success-200-0-success]
ERROR tests/test_views.py::test_withdraw_confirm_passwd_delete[4-success-200-0-success]
ERROR tests/test_views.py::test_withdraw_confirm_passwd_delete[5-success-200-0-success]
ERROR tests/test_views.py::test_withdraw_confirm_passwd_delete[6-success-200-0-success]
ERROR tests/test_views.py::test_withdraw_confirm_passwd_delete_guestlogin[success-200-0-success]
ERROR tests/test_views.py::test_download_activitylog_1[0-403] - KeyError: 'in...
ERROR tests/test_views.py::test_download_activitylog_1[1-200] - KeyError: 'in...
ERROR tests/test_views.py::test_download_activitylog_1[2-200] - KeyError: 'in...
ERROR tests/test_views.py::test_download_activitylog_1[3-403] - KeyError: 'in...
ERROR tests/test_views.py::test_download_activitylog_1[4-403] - KeyError: 'in...
ERROR tests/test_views.py::test_download_activitylog_1[5-403] - KeyError: 'in...
ERROR tests/test_views.py::test_download_activitylog_1[6-200] - KeyError: 'in...
ERROR tests/test_views.py::test_download_activitylog_2[1-200] - KeyError: 'in...
ERROR tests/test_views.py::test_download_activitylog_2[2-200] - KeyError: 'in...
ERROR tests/test_views.py::test_download_activitylog_2[6-200] - KeyError: 'in...
ERROR tests/test_views.py::test_clear_activitylog_1[0-403] - KeyError: 'inven...
ERROR tests/test_views.py::test_clear_activitylog_1[1-200] - KeyError: 'inven...
ERROR tests/test_views.py::test_clear_activitylog_1[2-200] - KeyError: 'inven...
ERROR tests/test_views.py::test_clear_activitylog_1[3-403] - KeyError: 'inven...
ERROR tests/test_views.py::test_clear_activitylog_1[4-403] - KeyError: 'inven...
ERROR tests/test_views.py::test_clear_activitylog_1[5-403] - KeyError: 'inven...
ERROR tests/test_views.py::test_clear_activitylog_1[6-200] - KeyError: 'inven...
ERROR tests/test_views.py::test_clear_activitylog_2[1-200] - KeyError: 'inven...
ERROR tests/test_views.py::test_clear_activitylog_2[2-200] - KeyError: 'inven...
ERROR tests/test_views.py::test_clear_activitylog_2[6-200] - KeyError: 'inven...
ERROR tests/test_views.py::test_clear_activitylog_3[1-200] - KeyError: 'inven...
ERROR tests/test_views.py::test_clear_activitylog_3[2-200] - KeyError: 'inven...
ERROR tests/test_views.py::test_clear_activitylog_3[6-200] - KeyError: 'inven...
ERROR tests/test_views.py::test_clear_activitylog_4[1-200] - KeyError: 'inven...
ERROR tests/test_views.py::test_clear_activitylog_4[2-200] - KeyError: 'inven...
ERROR tests/test_views.py::test_clear_activitylog_4[6-200] - KeyError: 'inven...
ERROR tests/test_views.py::test_clear_activitylog_5[0-403] - KeyError: 'inven...
ERROR tests/test_views.py::test_clear_activitylog_5[1-200] - KeyError: 'inven...
ERROR tests/test_views.py::test_clear_activitylog_5[2-200] - KeyError: 'inven...
ERROR tests/test_views.py::test_clear_activitylog_5[3-403] - KeyError: 'inven...
ERROR tests/test_views.py::test_clear_activitylog_5[4-403] - KeyError: 'inven...
ERROR tests/test_views.py::test_clear_activitylog_5[5-403] - KeyError: 'inven...
ERROR tests/test_views.py::test_clear_activitylog_5[6-200] - KeyError: 'inven...
ERROR tests/test_views.py::test_clear_activitylog_6[1-200] - KeyError: 'inven...
ERROR tests/test_views.py::test_clear_activitylog_6[2-200] - KeyError: 'inven...
ERROR tests/test_views.py::test_clear_activitylog_6[6-200] - KeyError: 'inven...
ERROR tests/test_views.py::test_clear_activitylog_7[1-200] - KeyError: 'inven...
ERROR tests/test_views.py::test_clear_activitylog_7[2-200] - KeyError: 'inven...
ERROR tests/test_views.py::test_clear_activitylog_7[6-200] - KeyError: 'inven...
ERROR tests/test_views.py::test_clear_activitylog_8[1-200] - KeyError: 'inven...
ERROR tests/test_views.py::test_clear_activitylog_8[2-200] - KeyError: 'inven...
ERROR tests/test_views.py::test_clear_activitylog_8[6-200] - KeyError: 'inven...
ERROR tests/test_views.py::test_clear_activitylog_9[0-403] - KeyError: 'inven...
ERROR tests/test_views.py::test_clear_activitylog_9[1-200] - KeyError: 'inven...
ERROR tests/test_views.py::test_clear_activitylog_9[2-200] - KeyError: 'inven...
ERROR tests/test_views.py::test_clear_activitylog_9[3-403] - KeyError: 'inven...
ERROR tests/test_views.py::test_clear_activitylog_9[4-403] - KeyError: 'inven...
ERROR tests/test_views.py::test_clear_activitylog_9[5-403] - KeyError: 'inven...
ERROR tests/test_views.py::test_clear_activitylog_9[6-200] - KeyError: 'inven...
=== 20 failed, 150 passed, 12783 warnings, 299 errors in 7549.54s (2:05:49) ====
ERROR: InvocationError for command /code/modules/weko-workflow/.tox/c1/bin/pytest --cov=weko_workflow tests -v -s -vv --cov-branch --cov-report=term --cov-report=html --cov-config=tox.ini --basetemp=/code/modules/weko-workflow/.tox/c1/tmp (exited with code 1)
___________________________________ summary ____________________________________
ERROR:   c1: commands failed
