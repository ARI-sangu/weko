GLOB sdist-make: /code/modules/weko-gridlayout/setup.py
c1 recreate: /code/modules/weko-gridlayout/.tox/c1
c1 installdeps: pytest>=3, pytest-cov, -rrequirements2.txt
c1 inst: /code/modules/weko-gridlayout/.tox/.tmp/package/1/weko-gridlayout-1.0.0.dev20190000.zip
c1 installed: alabaster==0.7.13,alembic==0.9.6,amqp==2.6.0,angular-gettext-babel==0.3,aniso8601==8.0.0,arrow==0.12.1,asn1crypto==0.23.0,atomicwrites==1.4.1,attrs==17.4.0,b2handle==1.1.2,Babel==2.5.1,bagit==1.7.0,beautifulsoup4==4.9.3,bibtexparser==1.0.1,billiard==3.6.3.0,binaryornot==0.4.4,bleach==3.1.0,blinker==1.4,boto3==1.7.84,botocore==1.10.84,cachelib==0.1,cachetools==4.2.4,cchardet==2.1.1,celery==4.4.4,certifi==2017.11.5,cffi==1.11.2,chardet==3.0.4,citeproc-py==0.5.1,citeproc-py-styles==0.1.2,click==6.7,cookiecutter==1.6.0,counter-robots==2018.6,coverage==6.2,cryptography==2.1.4,datacite==1.0.1,DateTime==4.9,decorator==4.1.2,defusedxml==0.5.0,dictdiffer==0.7.0,distlib==0.3.6,dnspython==2.2.1,docutils==0.18.1,dojson==1.3.2,elasticsearch==6.1.1,elasticsearch-dsl==6.4.0,elementpath==1.0.6,email-validator==1.0.5,entrypoints==0.2.3,feedgen==0.7.0,filelock==3.4.1,Flask==1.1.0,Flask-Admin==1.5.3,Flask-Alembic==2.0.1,Flask-Assets==0.12,Flask-BabelEx==0.9.4,Flask-Breadcrumbs==0.5.0,Flask-Caching==1.10.1,Flask-CeleryExt==0.3.4,Flask-Collect==1.2.2,Flask-Cors==3.0.3,Flask-DebugToolbar==0.13.1,Flask-IIIF==0.6.1,Flask-KVSession==0.6.2,Flask-Limiter==1.1.0,Flask-Login==0.4.1,Flask-Mail==0.9.1,flask-marshmallow==0.14.0,Flask-Menu==0.6.0,-e git+https://github.com/RCOSDP/flask-oauthlib.git@83148ee01e9da37a8a1134febe83bc32b95bac6e#egg=Flask_OAuthlib,Flask-Plugins==1.6.1,Flask-Principal==0.4.0,Flask-RESTful==0.3.8,Flask-Security==3.0.0,flask-shell-ipython==0.4.1,Flask-Sitemap==0.4.0,Flask-SQLAlchemy==2.3.2,flask-talisman==0.4.1,Flask-WTF==0.14.3,-e git+https://github.com/RCOSDP/pyfpdf.git@f9b032148283d535cabc7789858081c80de36fef#egg=fpdf,frozendict==2.3.8,fs==0.5.4,ftfy==4.4.3,future==0.16.0,github3.py==1.1.0,html5lib==1.0.1,idna==2.6,iiif-prezi==0.3.0,imagesize==1.4.1,importlib-metadata==4.8.3,importlib-resources==5.4.0,infinity==1.4,intervals==0.8.0,invenio-access==1.1.0,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@4354c223a93c57314dba6d9a94c9eb42aa72c458#egg=invenio_accounts&subdirectory=modules/invenio-accounts,invenio-admin==1.1.2,invenio-app==1.1.0,invenio-assets==1.0.0,invenio-base==1.0.2,invenio-cache==1.0.0,invenio-celery==1.1.3,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@4354c223a93c57314dba6d9a94c9eb42aa72c458#egg=invenio_communities&subdirectory=modules/invenio-communities,invenio-config==1.0.0,invenio-csl-rest==1.0.0a1,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@4354c223a93c57314dba6d9a94c9eb42aa72c458#egg=invenio_db&subdirectory=modules/invenio-db,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@4354c223a93c57314dba6d9a94c9eb42aa72c458#egg=invenio_deposit&subdirectory=modules/invenio-deposit,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@4354c223a93c57314dba6d9a94c9eb42aa72c458#egg=invenio_files_rest&subdirectory=modules/invenio-files-rest,invenio-formatter==1.0.0b3,invenio-i18n==1.0.0,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@4354c223a93c57314dba6d9a94c9eb42aa72c458#egg=invenio_iiif&subdirectory=modules/invenio-iiif,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@4354c223a93c57314dba6d9a94c9eb42aa72c458#egg=invenio_indexer&subdirectory=modules/invenio-indexer,invenio-jsonschemas==1.0.0,invenio-logging==1.0.0b3,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@4354c223a93c57314dba6d9a94c9eb42aa72c458#egg=invenio_mail&subdirectory=modules/invenio-mail,invenio-marc21==1.0.0a8,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@4354c223a93c57314dba6d9a94c9eb42aa72c458#egg=invenio_oaiharvester&subdirectory=modules/invenio-oaiharvester,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@4354c223a93c57314dba6d9a94c9eb42aa72c458#egg=invenio_oaiserver&subdirectory=modules/invenio-oaiserver,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@4354c223a93c57314dba6d9a94c9eb42aa72c458#egg=invenio_oauth2server&subdirectory=modules/invenio-oauth2server,invenio-oauthclient==1.0.0,invenio-pidrelations==1.0.0a4,invenio-pidstore==1.0.0,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@4354c223a93c57314dba6d9a94c9eb42aa72c458#egg=invenio_previewer&subdirectory=modules/invenio-previewer,invenio-query-parser==0.6.0,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@4354c223a93c57314dba6d9a94c9eb42aa72c458#egg=invenio_queues&subdirectory=modules/invenio-queues,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@4354c223a93c57314dba6d9a94c9eb42aa72c458#egg=invenio_records&subdirectory=modules/invenio-records,invenio-records-files==1.0.0a10,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@4354c223a93c57314dba6d9a94c9eb42aa72c458#egg=invenio_records_rest&subdirectory=modules/invenio-records-rest,invenio-records-ui==1.0.0,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@4354c223a93c57314dba6d9a94c9eb42aa72c458#egg=invenio_resourcesyncclient&subdirectory=modules/invenio-resourcesyncclient,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@4354c223a93c57314dba6d9a94c9eb42aa72c458#egg=invenio_resourcesyncserver&subdirectory=modules/invenio-resourcesyncserver,invenio-rest==1.1.2,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@4354c223a93c57314dba6d9a94c9eb42aa72c458#egg=invenio_s3&subdirectory=modules/invenio-s3,-e git+https://github.com/RCOSDP/invenio-search.git@cff9744c5dc651893a9c51672c5b8da9adc21e16#egg=invenio_search,-e git+https://github.com/RCOSDP/invenio-search-ui.git@74bd3b2990ff27b39e01b6b31be9a0b5fda3dd0f#egg=invenio_search_ui,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@4354c223a93c57314dba6d9a94c9eb42aa72c458#egg=invenio_stats&subdirectory=modules/invenio-stats,invenio-theme==1.0.0b4,ipaddress==1.0.19,ipython==6.2.1,ipython-genutils==0.2.0,itsdangerous==0.24,jedi==0.11.0,Jinja2==2.10.1,jinja2-cli==0.6.0,jinja2-time==0.2.0,jmespath==0.10.0,jsmin==2.2.2,jsonpatch==1.21,jsonpath-ng==1.5.2,jsonpointer==1.14,jsonref==0.1,jsonresolver==0.2.1,jsonschema==2.6.0,jupyter-client==5.2.2,jupyter-core==4.4.0,-e git+https://github.com/RCOSDP/kombu.git@f204fdf078d5e94393c86693f545e2d011f620f5#egg=kombu,limits==1.2.1,lxml==4.1.1,Mako==1.0.7,MarkupSafe==1.1.1,marshmallow==2.20.1,marshmallow-sqlalchemy==0.23.1,maxminddb==1.5.2,maxminddb-geolite2==2017.803,mistune==0.8.3,mock==5.0.2,more-itertools==8.10.0,msgpack==0.6.2,nbconvert==5.3.1,nbformat==4.4.0,netaddr==0.8.0,node-semver==0.1.1,numpy==1.16.1,oauthlib==2.1.0,ordereddict==1.1,packaging==21.3,pandocfilters==1.4.2,parso==0.1.0,passlib==1.7.1,pbr==5.11.1,pexpect==4.3.0,pickleshare==0.7.4,Pillow==5.4.1,platformdirs==2.4.0,pluggy==0.13.1,ply==3.11,poyo==0.4.1,prompt-toolkit==1.0.15,psycopg2==2.7.3.2,ptyprocess==0.5.2,py==1.11.0,pycparser==2.18,Pygments==2.2.0,PyJWT==1.5.3,PyLD==2.0.3,pyparsing==3.1.0,-e git+https://github.com/RCOSDP/PyPDF2.git@fefc684a3a74aff6f99e5dff24f9b4dd1c95169d#egg=PyPDF2,pyPEG2==2.15.2,pytest==4.2.0,pytest-cov==2.9.0,python-dateutil==2.6.1,python-editor==1.0.3,python-geoip==1.2,pytz==2017.3,pyzmq==17.0.0,redis==2.10.6,requests==2.18.4,requests-oauthlib==1.1.0,resync==1.0.9,s3fs==0.1.6,s3transfer==0.1.13,selenium==3.141.0,Sickle==0.6.4,simplegeneric==0.8.1,simplejson==3.12.0,simplekv==0.11.2,six==1.16.0,snowballstemmer==2.2.0,soupsieve==2.3.2.post1,speaklater==1.3,Sphinx==1.8.4,sphinxcontrib-serializinghtml==1.1.5,sphinxcontrib-websupport==1.2.4,SQLAlchemy==1.2.19,SQLAlchemy-Continuum==1.3.6,SQLAlchemy-Utils==0.35.0,stevedore==3.5.2,sword3common==0.1.1,testpath==0.3.1,toml==0.10.2,tornado==4.5.3,tox==3.28.0,traitlets==4.3.2,typing_extensions==4.1.1,ua-parser==0.7.3,uritemplate==4.1.1,uritools==2.1.0,urllib3==1.22,uWSGI==2.0.21,uwsgitop==0.11,validators==0.12.0,vine==1.3.0,virtualenv==20.17.1,virtualenv-clone==0.5.7,virtualenvwrapper==4.8.4,Wand==0.6.1,wcwidth==0.1.7,webargs==5.5.2,webassets==0.12.1,webencodings==0.5.1,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@4354c223a93c57314dba6d9a94c9eb42aa72c458#egg=weko_accounts&subdirectory=modules/weko-accounts,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@4354c223a93c57314dba6d9a94c9eb42aa72c458#egg=weko_admin&subdirectory=modules/weko-admin,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@4354c223a93c57314dba6d9a94c9eb42aa72c458#egg=weko_authors&subdirectory=modules/weko-authors,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@4354c223a93c57314dba6d9a94c9eb42aa72c458#egg=weko_bulkupdate&subdirectory=modules/weko-bulkupdate,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@4354c223a93c57314dba6d9a94c9eb42aa72c458#egg=weko_deposit&subdirectory=modules/weko-deposit,weko-gridlayout @ file:///code/modules/weko-gridlayout/.tox/.tmp/package/1/weko-gridlayout-1.0.0.dev20190000.zip,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@4354c223a93c57314dba6d9a94c9eb42aa72c458#egg=weko_groups&subdirectory=modules/weko-groups,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@4354c223a93c57314dba6d9a94c9eb42aa72c458#egg=weko_handle&subdirectory=modules/weko-handle,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@4354c223a93c57314dba6d9a94c9eb42aa72c458#egg=weko_index_tree&subdirectory=modules/weko-index-tree,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@4354c223a93c57314dba6d9a94c9eb42aa72c458#egg=weko_indextree_journal&subdirectory=modules/weko-indextree-journal,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@4354c223a93c57314dba6d9a94c9eb42aa72c458#egg=weko_items_autofill&subdirectory=modules/weko-items-autofill,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@4354c223a93c57314dba6d9a94c9eb42aa72c458#egg=weko_items_ui&subdirectory=modules/weko-items-ui,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@4354c223a93c57314dba6d9a94c9eb42aa72c458#egg=weko_itemtypes_ui&subdirectory=modules/weko-itemtypes-ui,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@4354c223a93c57314dba6d9a94c9eb42aa72c458#egg=weko_logging&subdirectory=modules/weko-logging,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@4354c223a93c57314dba6d9a94c9eb42aa72c458#egg=weko_records&subdirectory=modules/weko-records,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@4354c223a93c57314dba6d9a94c9eb42aa72c458#egg=weko_records_ui&subdirectory=modules/weko-records-ui,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@4354c223a93c57314dba6d9a94c9eb42aa72c458#egg=weko_redis&subdirectory=modules/weko-redis,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@4354c223a93c57314dba6d9a94c9eb42aa72c458#egg=weko_schema_ui&subdirectory=modules/weko-schema-ui,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@4354c223a93c57314dba6d9a94c9eb42aa72c458#egg=weko_search_ui&subdirectory=modules/weko-search-ui,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@4354c223a93c57314dba6d9a94c9eb42aa72c458#egg=weko_sitemap&subdirectory=modules/weko-sitemap,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@4354c223a93c57314dba6d9a94c9eb42aa72c458#egg=weko_swordserver&subdirectory=modules/weko-swordserver,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@4354c223a93c57314dba6d9a94c9eb42aa72c458#egg=weko_theme&subdirectory=modules/weko-theme,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@4354c223a93c57314dba6d9a94c9eb42aa72c458#egg=weko_user_profiles&subdirectory=modules/weko-user-profiles,-e git+https://mhaya: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@github.com/RCOSDP/weko.git@4354c223a93c57314dba6d9a94c9eb42aa72c458#egg=weko_workflow&subdirectory=modules/weko-workflow,Werkzeug==0.15.2,whichcraft==0.4.1,WTForms==2.1,WTForms-Alchemy==0.16.5,WTForms-Components==0.10.3,xmlschema==0.9.30,xmltodict==0.12.0,zipp==3.6.0,zope.interface==5.5.2
c1 run-test-pre: PYTHONHASHSEED='4177149832'
c1 run-test: commands[0] | pytest --cov=weko_gridlayout tests -v --cov-branch --cov-report=term --cov-report=xml --basetemp=/code/modules/weko-gridlayout/.tox/c1/tmp
============================= test session starts ==============================
platform linux -- Python 3.6.15, pytest-4.2.0, py-1.11.0, pluggy-0.13.1 -- /code/modules/weko-gridlayout/.tox/c1/bin/python
cachedir: .tox/c1/.pytest_cache
rootdir: /code/modules/weko-gridlayout, inifile:
plugins: celery-4.4.4, cov-2.9.0
collecting ... collected 228 items

tests/test_admin.py::test_index_view_can_delete[True] ERROR              [  0%]
tests/test_admin.py::test_index_view_can_delete[False] ERROR             [  0%]
tests/test_admin.py::test_index_view_can_delete[None] ERROR              [  1%]
tests/test_admin.py::test_index_view_sort_column[1] ERROR                [  1%]
tests/test_admin.py::test_index_view_sort_column[None] ERROR             [  2%]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data] ERROR [  2%]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data] ERROR [  3%]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data] ERROR [  3%]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data] ERROR [  3%]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count] ERROR [  4%]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count] ERROR [  4%]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count] ERROR [  5%]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count] ERROR [  5%]
tests/test_admin.py::test_pager_url[1] ERROR                             [  6%]
tests/test_admin.py::test_pager_url[2] ERROR                             [  6%]
tests/test_admin.py::test_sort_url[1-False-1] ERROR                      [  7%]
tests/test_admin.py::test_sort_url[1-False-0] ERROR                      [  7%]
tests/test_admin.py::test_sort_url[1-False-None] ERROR                   [  7%]
tests/test_admin.py::test_sort_url[1-True-1] ERROR                       [  8%]
tests/test_admin.py::test_sort_url[1-True-0] ERROR                       [  8%]
tests/test_admin.py::test_sort_url[1-True-None] ERROR                    [  9%]
tests/test_admin.py::test_sort_url[0-False-1] ERROR                      [  9%]
tests/test_admin.py::test_sort_url[0-False-0] ERROR                      [ 10%]
tests/test_admin.py::test_sort_url[0-False-None] ERROR                   [ 10%]
tests/test_admin.py::test_sort_url[0-True-1] ERROR                       [ 10%]
tests/test_admin.py::test_sort_url[0-True-0] ERROR                       [ 11%]
tests/test_admin.py::test_sort_url[0-True-None] ERROR                    [ 11%]
tests/test_admin.py::test_sort_url[None-False-1] ERROR                   [ 12%]
tests/test_admin.py::test_sort_url[None-False-0] ERROR                   [ 12%]
tests/test_admin.py::test_sort_url[None-False-None] ERROR                [ 13%]
tests/test_admin.py::test_sort_url[None-True-1] ERROR                    [ 13%]
tests/test_admin.py::test_sort_url[None-True-0] ERROR                    [ 14%]
tests/test_admin.py::test_sort_url[None-True-None] ERROR                 [ 14%]
tests/test_admin.py::test_page_size_url[20] ERROR                        [ 14%]
tests/test_admin.py::test_page_size_url[0] ERROR                         [ 15%]
tests/test_admin.py::test_page_size_url[None] ERROR                      [ 15%]
tests/test_admin.py::test_get_label_display_to_list_without_register_languages ERROR [ 16%]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None] ERROR [ 16%]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None] ERROR [ 17%]
tests/test_admin.py::test_get_label_display_to_list[1-for test] ERROR    [ 17%]
tests/test_admin.py::test_get_label_display_to_list[2-for test2] ERROR   [ 17%]
tests/test_admin.py::test_get_label_display_to_list[3-None] ERROR        [ 18%]
tests/test_admin.py::test_search_placeholder ERROR                       [ 18%]
tests/test_admin.py::test_index_view_WidgetSettingView ERROR             [ 19%]
tests/test_admin.py::test_create_view_WidgetSettingView ERROR            [ 19%]
tests/test_admin.py::test_edit_view_WidgetSettingView ERROR              [ 20%]
tests/test_admin.py::test_get_detail_value_WidgetSettingView ERROR       [ 20%]
tests/test_admin.py::test_details_view_WidgetSettingView ERROR           [ 21%]
tests/test_admin.py::test_action_delete_WidgetSettingView ERROR          [ 21%]
tests/test_admin.py::test_get_count_query_WidgetSettingView ERROR        [ 21%]
tests/test_admin.py::test_delete_model_WidgetSettingView ERROR           [ 22%]
tests/test_api.py::test_build_general_data FAILED                        [ 22%]
tests/test_api.py::test_build_settings_data PASSED                       [ 23%]
tests/test_api.py::test_build_object PASSED                              [ 23%]
tests/test_api.py::test_create FAILED                                    [ 24%]
tests/test_api.py::test_update PASSED                                    [ 24%]
tests/test_api.py::test_update_by_id PASSED                              [ 25%]
tests/test_api.py::test_delete ERROR                                     [ 25%]
tests/test_api.py::test_get_all_widget_items ERROR                       [ 25%]
tests/test_api.py::test_validate_exist_multi_language PASSED             [ 26%]
tests/test_api.py::test_is_existed ERROR                                 [ 26%]
tests/test_api.py::test_get_account_role ERROR                           [ 27%]
tests/test_api.py::test_get_account_role_2 FAILED                        [ 27%]
tests/test_api.py::test_parse_result PASSED                              [ 28%]
tests/test_models.py::test_WidgetType_create ERROR                       [ 28%]
tests/test_models.py::test_WidgetType_create_2 FAILED                    [ 28%]
tests/test_models.py::test_get_id_by_repository_and_type ERROR           [ 29%]
tests/test_models.py::test_get_sequence ERROR                            [ 29%]
tests/test_models.py::test_update_by_id ERROR                            [ 30%]
tests/test_models.py::test_update_setting_by_id ERROR                    [ 30%]
tests/test_models.py::test_delete_by_id ERROR                            [ 31%]
tests/test_models.py::test_get_by_id ERROR                               [ 31%]
tests/test_models.py::test_update_by_id_WidgetMultiLangData ERROR        [ 32%]
tests/test_models.py::test_delete_by_widget_id ERROR                     [ 32%]
tests/test_models.py::test_select_all ERROR                              [ 32%]
tests/test_models.py::test_update_WidgetDesignSetting ERROR              [ 33%]
tests/test_models.py::test_create_WidgetDesignSetting ERROR              [ 33%]
tests/test_models.py::test_create_or_update ERROR                        [ 34%]
tests/test_models.py::test_delete_WidgetDesignPage ERROR                 [ 34%]
tests/test_models.py::test_update_settings_by_repository_id ERROR        [ 35%]
tests/test_services.py::test_get_widget_by_id ERROR                      [ 35%]
tests/test_services.py::test_save_command FAILED                         [ 35%]
tests/test_services.py::test_get_by_id PASSED                            [ 36%]
tests/test_services.py::test_create[widget_data0-Widget data is empty!] ERROR [ 36%]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty] ERROR [ 37%]
tests/test_services.py::test_create[widget_data2-] ERROR                 [ 37%]
tests/test_services.py::test_create_exception ERROR                      [ 38%]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!] ERROR [ 38%]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!] ERROR [ 39%]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!] ERROR [ 39%]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty] ERROR [ 39%]
tests/test_services.py::test_update_by_id[1-widget_data4-] ERROR         [ 40%]
tests/test_services.py::test_update_by_id_exception ERROR                [ 40%]
tests/test_services.py::test_delete_by_id PASSED                         [ 41%]
tests/test_services.py::test_load_edit_pack ERROR                        [ 41%]
tests/test_services.py::test_get_locked_widget_info ERROR                [ 42%]
tests/test_services.py::test_lock_widget ERROR                           [ 42%]
tests/test_services.py::test_unlock_widget PASSED                        [ 42%]
tests/test_services.py::test_get_repository_list ERROR                   [ 43%]
tests/test_services.py::test_get_repository_list_2 PASSED                [ 43%]
tests/test_services.py::test_get_widget_list ERROR                       [ 44%]
tests/test_services.py::test_get_widget_preview ERROR                    [ 44%]
tests/test_services.py::test_get_widget_design_setting_2 PASSED          [ 45%]
tests/test_services.py::test__get_setting PASSED                         [ 45%]
tests/test_services.py::test__get_design_base_on_current_language PASSED [ 46%]
tests/test_services.py::test_update_widget_design_setting PASSED         [ 46%]
tests/test_services.py::test_update_item_in_preview_widget_item PASSED   [ 46%]
tests/test_services.py::test_handle_change_item_in_preview_widget_item FAILED [ 47%]
tests/test_services.py::test_is_used_in_widget_design PASSED             [ 47%]
tests/test_services.py::test_get_widget_design_setting PASSED            [ 48%]
tests/test_services.py::test_add_or_update_page PASSED                   [ 48%]
tests/test_services.py::test__update_main_layout_id_for_widget ERROR     [ 49%]
tests/test_services.py::test__update_main_layout_page_id_for_widget_design FAILED [ 49%]
tests/test_services.py::test__update_page_id_for_widget_design_setting PASSED [ 50%]
tests/test_services.py::test__update_page_id_for_widget_item_setting PASSED [ 50%]
tests/test_services.py::test_delete_page PASSED                          [ 50%]
tests/test_services.py::test_get_page_list PASSED                        [ 51%]
tests/test_services.py::test_get_page PASSED                             [ 51%]
tests/test_services.py::test_get_new_arrivals_data ERROR                 [ 52%]
tests/test_services.py::test_get_arrivals_rss PASSED                     [ 52%]
tests/test_services.py::test_get_widget_page_endpoints ERROR             [ 53%]
tests/test_utils.py::test_get_widget_type_list ERROR                     [ 53%]
tests/test_utils.py::test_delete_item_in_preview_widget_item PASSED      [ 53%]
tests/test_utils.py::test_convert_popular_data PASSED                    [ 54%]
tests/test_utils.py::test_update_general_item PASSED                     [ 54%]
tests/test_utils.py::test_update_menu_item PASSED                        [ 55%]
tests/test_utils.py::test_update_access_counter_item PASSED              [ 55%]
tests/test_utils.py::test_update_new_arrivals_item PASSED                [ 56%]
tests/test_utils.py::test_get_default_language ERROR                     [ 56%]
tests/test_utils.py::test_get_unregister_language ERROR                  [ 57%]
tests/test_utils.py::test_get_register_language ERROR                    [ 57%]
tests/test_utils.py::test_get_system_language ERROR                      [ 57%]
tests/test_utils.py::test_get_system_language_2 PASSED                   [ 58%]
tests/test_utils.py::test_build_data PASSED                              [ 58%]
tests/test_utils.py::test__escape_html_multi_lang_setting PASSED         [ 59%]
tests/test_utils.py::test_build_data_setting PASSED                      [ 59%]
tests/test_utils.py::test__build_access_counter_setting_data PASSED      [ 60%]
tests/test_utils.py::test__build_new_arrivals_setting_data PASSED        [ 60%]
tests/test_utils.py::test__build_notice_setting_data PASSED              [ 60%]
tests/test_utils.py::test__build_header_setting_data PASSED              [ 61%]
tests/test_utils.py::test_build_multi_lang_data PASSED                   [ 61%]
tests/test_utils.py::test_convert_widget_data_to_dict PASSED             [ 62%]
tests/test_utils.py::test_convert_widget_multi_lang_to_dict PASSED       [ 62%]
tests/test_utils.py::test_convert_data_to_design_pack PASSED             [ 63%]
tests/test_utils.py::test_convert_data_to_edit_pack PASSED               [ 63%]
tests/test_utils.py::test_build_rss_xml ERROR                            [ 64%]
tests/test_utils.py::test_find_rss_value[title] ERROR                    [ 64%]
tests/test_utils.py::test_find_rss_value[link] ERROR                     [ 64%]
tests/test_utils.py::test_find_rss_value[seeAlso] ERROR                  [ 65%]
tests/test_utils.py::test_find_rss_value[creator] ERROR                  [ 65%]
tests/test_utils.py::test_find_rss_value[publisher] ERROR                [ 66%]
tests/test_utils.py::test_find_rss_value[sourceTitle] ERROR              [ 66%]
tests/test_utils.py::test_find_rss_value[issn] ERROR                     [ 67%]
tests/test_utils.py::test_find_rss_value[volume] ERROR                   [ 67%]
tests/test_utils.py::test_find_rss_value[issue] ERROR                    [ 67%]
tests/test_utils.py::test_find_rss_value[pageStart] ERROR                [ 68%]
tests/test_utils.py::test_find_rss_value[pageEnd] ERROR                  [ 68%]
tests/test_utils.py::test_find_rss_value[date] ERROR                     [ 69%]
tests/test_utils.py::test_find_rss_value[description] ERROR              [ 69%]
tests/test_utils.py::test_find_rss_value[_updated] ERROR                 [ 70%]
tests/test_utils.py::test_get_rss_data_source PASSED                     [ 70%]
tests/test_utils.py::test_get_elasticsearch_result_by_date PASSED        [ 71%]
tests/test_utils.py::test_validate_main_widget_insertion ERROR           [ 71%]
tests/test_utils.py::test_get_widget_design_page_with_main PASSED        [ 71%]
tests/test_utils.py::test_main_design_has_main_widget ERROR              [ 72%]
tests/test_utils.py::TestWidgetBucket::test_get_file ERROR               [ 72%]
tests/test_views.py::test_unlocked_widget_login[0-403] ERROR             [ 73%]
tests/test_views.py::test_unlocked_widget_login[1-403] ERROR             [ 73%]
tests/test_views.py::test_unlocked_widget_login[2-200] ERROR             [ 74%]
tests/test_views.py::test_unlocked_widget_login[3-200] ERROR             [ 74%]
tests/test_views.py::test_unlocked_widget_login[4-200] ERROR             [ 75%]
tests/test_views.py::test_unlocked_widget_guest ERROR                    [ 75%]
tests/test_views.py::test_save_widget_layout_setting_login[0-403] ERROR  [ 75%]
tests/test_views.py::test_save_widget_layout_setting_login[1-403] ERROR  [ 76%]
tests/test_views.py::test_save_widget_layout_setting_login[2-200] ERROR  [ 76%]
tests/test_views.py::test_save_widget_layout_setting_login[3-200] ERROR  [ 77%]
tests/test_views.py::test_save_widget_layout_setting_login[4-200] ERROR  [ 77%]
tests/test_views.py::test_save_widget_layout_setting_guest ERROR         [ 78%]
tests/test_views.py::test_save_widget_item_login[0-403] ERROR            [ 78%]
tests/test_views.py::test_save_widget_item_login[1-403] ERROR            [ 78%]
tests/test_views.py::test_save_widget_item_login[2-200] ERROR            [ 79%]
tests/test_views.py::test_save_widget_item_login[3-200] ERROR            [ 79%]
tests/test_views.py::test_save_widget_item_login[4-200] ERROR            [ 80%]
tests/test_views.py::test_save_widget_item_guest ERROR                   [ 80%]
tests/test_views.py::test_save_widget_design_page_login[0-403] ERROR     [ 81%]
tests/test_views.py::test_save_widget_design_page_login[1-403] ERROR     [ 81%]
tests/test_views.py::test_save_widget_design_page_login[2-200] ERROR     [ 82%]
tests/test_views.py::test_save_widget_design_page_login[3-200] ERROR     [ 82%]
tests/test_views.py::test_save_widget_design_page_login[4-200] ERROR     [ 82%]
tests/test_views.py::test_save_widget_design_page_guest ERROR            [ 83%]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403] ERROR [ 83%]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403] ERROR [ 84%]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200] ERROR [ 84%]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200] ERROR [ 85%]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200] ERROR [ 85%]
tests/test_views.py::test_load_widget_list_design_setting_guest ERROR    [ 85%]
tests/test_views.py::test_load_widget_design_setting_login[0-200] ERROR  [ 86%]
tests/test_views.py::test_load_widget_design_setting_login[1-200] ERROR  [ 86%]
tests/test_views.py::test_load_widget_design_setting_login[2-200] ERROR  [ 87%]
tests/test_views.py::test_load_widget_design_setting_login[3-200] ERROR  [ 87%]
tests/test_views.py::test_load_widget_design_setting_login[4-200] ERROR  [ 88%]
tests/test_views.py::test_load_widget_design_setting_guest ERROR         [ 88%]
tests/test_views.py::test_load_widget_design_pages_login[0-403] ERROR    [ 89%]
tests/test_views.py::test_load_widget_design_pages_login[1-403] ERROR    [ 89%]
tests/test_views.py::test_load_widget_design_pages_login[2-200] ERROR    [ 89%]
tests/test_views.py::test_load_widget_design_pages_login[3-200] ERROR    [ 90%]
tests/test_views.py::test_load_widget_design_pages_login[4-200] ERROR    [ 90%]
tests/test_views.py::test_load_widget_design_pages_guest ERROR           [ 91%]
tests/test_views.py::test_load_widget_design_page_login[0-403] ERROR     [ 91%]
tests/test_views.py::test_load_widget_design_page_login[1-403] ERROR     [ 92%]
tests/test_views.py::test_load_widget_design_page_login[2-200] ERROR     [ 92%]
tests/test_views.py::test_load_widget_design_page_login[3-200] ERROR     [ 92%]
tests/test_views.py::test_load_widget_design_page_login[4-200] ERROR     [ 93%]
tests/test_views.py::test_load_widget_design_page_guest ERROR            [ 93%]
tests/test_views.py::test_delete_widget_item_login[0-403] ERROR          [ 94%]
tests/test_views.py::test_delete_widget_item_login[1-403] ERROR          [ 94%]
tests/test_views.py::test_delete_widget_item_login[2-200] ERROR          [ 95%]
tests/test_views.py::test_delete_widget_item_login[3-200] ERROR          [ 95%]
tests/test_views.py::test_delete_widget_item_login[4-200] ERROR          [ 96%]
tests/test_views.py::test_delete_widget_item_guest ERROR                 [ 96%]
tests/test_views.py::test_delete_widget_design_page_login[0-403] ERROR   [ 96%]
tests/test_views.py::test_delete_widget_design_page_login[1-403] ERROR   [ 97%]
tests/test_views.py::test_delete_widget_design_page_login[2-200] ERROR   [ 97%]
tests/test_views.py::test_delete_widget_design_page_login[3-200] ERROR   [ 98%]
tests/test_views.py::test_delete_widget_design_page_login[4-200] ERROR   [ 98%]
tests/test_views.py::test_delete_widget_design_page_guest ERROR          [ 99%]
tests/test_weko_gridlayout.py::test_version PASSED                       [ 99%]
tests/test_weko_gridlayout.py::test_init PASSED                          [100%]

==================================== ERRORS ====================================
______________ ERROR at setup of test_index_view_can_delete[True] ______________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5e11af00b8>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddedf6e48>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5e11af00b8>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddedb6f60>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddedb6f60>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5e11af00b8>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5e11af00b8>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5e11af00b8>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddedb6f60>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5e11af00b8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5e11af00b8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_____________ ERROR at setup of test_index_view_can_delete[False] ______________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddf9b27b8>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddf5e5a58>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddf9b27b8>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddecb1a20>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddecb1a20>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddf9b27b8>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddf9b27b8>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddf9b27b8>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddecb1a20>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddf9b27b8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddf9b27b8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
______________ ERROR at setup of test_index_view_can_delete[None] ______________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5de1944400>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5de19443c8>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5de1944400>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddebe6e48>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddebe6e48>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5de1944400>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5de1944400>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5de1944400>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddebe6e48>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5de1944400>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5de1944400>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_______________ ERROR at setup of test_index_view_sort_column[1] _______________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddf5cab38>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dde6f5e10>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddf5cab38>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde2ffcc0>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde2ffcc0>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddf5cab38>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddf5cab38>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddf5cab38>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde2ffcc0>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddf5cab38>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddf5cab38>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_____________ ERROR at setup of test_index_view_sort_column[None] ______________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde6f2f60>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dde6f8c88>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde6f2f60>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde7252e8>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde7252e8>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde6f2f60>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde6f2f60>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde6f2f60>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde7252e8>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde6f2f60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde6f2f60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_ ERROR at setup of test_index_view_editable_list_page_size_data[with list-with data] _

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde323ef0>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dde3180b8>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde323ef0>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde2f69b0>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde2f69b0>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde323ef0>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde323ef0>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde323ef0>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde2f69b0>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde323ef0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde323ef0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_ ERROR at setup of test_index_view_editable_list_page_size_data[with list-without data] _

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddeca6da0>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddeca5dd8>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddeca6da0>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddec87550>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddec87550>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddeca6da0>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddeca6da0>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddeca6da0>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddec87550>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddeca6da0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddeca6da0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_ ERROR at setup of test_index_view_editable_list_page_size_data[without list-with data] _

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde3f9dd8>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dde425f28>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde3f9dd8>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde41d780>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde41d780>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde3f9dd8>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde3f9dd8>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde3f9dd8>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde41d780>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde3f9dd8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde3f9dd8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_ ERROR at setup of test_index_view_editable_list_page_size_data[without list-without data] _

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dded3ef60>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dddfcef28>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dded3ef60>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dded68e48>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dded68e48>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dded3ef60>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dded3ef60>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dded3ef60>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dded68e48>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dded3ef60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dded3ef60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_ ERROR at setup of test_index_view_editable_list_page_size_data[with page_size-with count] _

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde6c5ac8>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dde6c5208>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde6c5ac8>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde967550>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde967550>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde6c5ac8>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde6c5ac8>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde6c5ac8>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde967550>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde6c5ac8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde6c5ac8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_ ERROR at setup of test_index_view_editable_list_page_size_data[with page_size-without count] _

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde390f28>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dde6b6278>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde390f28>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde3970f0>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde3970f0>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde390f28>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde390f28>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde390f28>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde3970f0>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde390f28>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde390f28>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_ ERROR at setup of test_index_view_editable_list_page_size_data[without page_size-with count] _

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde56df60>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dde3903c8>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde56df60>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde8f0320>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde8f0320>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde56df60>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde56df60>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde56df60>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde8f0320>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde56df60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde56df60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_ ERROR at setup of test_index_view_editable_list_page_size_data[without page_size-without count] _

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde256898>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dde268dd8>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde256898>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde259f28>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde259f28>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde256898>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde256898>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde256898>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde259f28>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde256898>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde256898>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_____________________ ERROR at setup of test_pager_url[1] ______________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde6c8f28>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddddf9860>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde6c8f28>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dddf710f0>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dddf710f0>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde6c8f28>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde6c8f28>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde6c8f28>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dddf710f0>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde6c8f28>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde6c8f28>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_____________________ ERROR at setup of test_pager_url[2] ______________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddde8bf60>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dddc8ccc0>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddde8bf60>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dddead7b8>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dddead7b8>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddde8bf60>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddde8bf60>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddde8bf60>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dddead7b8>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddde8bf60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddde8bf60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
__________________ ERROR at setup of test_sort_url[1-False-1] __________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddde779b0>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddde66dd8>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddde779b0>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddde62e80>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddde62e80>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddde779b0>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddde779b0>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddde779b0>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddde62e80>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddde779b0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddde779b0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
__________________ ERROR at setup of test_sort_url[1-False-0] __________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddde66860>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dddfcd2b0>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddde66860>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde052588>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde052588>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddde66860>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddde66860>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddde66860>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde052588>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddde66860>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddde66860>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
________________ ERROR at setup of test_sort_url[1-False-None] _________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde2c0160>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dde2c0438>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde2c0160>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde2dec50>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde2dec50>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde2c0160>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde2c0160>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde2c0160>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde2dec50>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde2c0160>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde2c0160>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
__________________ ERROR at setup of test_sort_url[1-True-1] ___________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde3e8dd8>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dde3e8ef0>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde3e8dd8>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddec587f0>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddec587f0>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde3e8dd8>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde3e8dd8>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde3e8dd8>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddec587f0>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde3e8dd8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde3e8dd8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
__________________ ERROR at setup of test_sort_url[1-True-0] ___________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddd889e8>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dde3e8a90>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddd889e8>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde593a20>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde593a20>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddd889e8>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddd889e8>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddd889e8>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde593a20>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddd889e8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddd889e8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_________________ ERROR at setup of test_sort_url[1-True-None] _________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde602f98>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dddafff98>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde602f98>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dddca4128>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dddca4128>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde602f98>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde602f98>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde602f98>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dddca4128>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde602f98>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde602f98>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
__________________ ERROR at setup of test_sort_url[0-False-1] __________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddcdedd8>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dddcdeef0>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddcdedd8>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dddcd7ba8>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dddcd7ba8>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddcdedd8>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddcdedd8>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddcdedd8>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dddcd7ba8>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddcdedd8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddcdedd8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
__________________ ERROR at setup of test_sort_url[0-False-0] __________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddde2bfd0>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dde229518>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddde2bfd0>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddde2beb8>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddde2beb8>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddde2bfd0>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddde2bfd0>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddde2bfd0>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddde2beb8>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddde2bfd0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddde2bfd0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
________________ ERROR at setup of test_sort_url[0-False-None] _________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddd76f60>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dddd84780>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddd76f60>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddddb05c0>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddddb05c0>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddd76f60>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddd76f60>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddd76f60>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddddb05c0>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddd76f60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddd76f60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
__________________ ERROR at setup of test_sort_url[0-True-1] ___________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde4e4f98>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddd871278>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde4e4f98>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde4d7c88>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde4d7c88>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde4e4f98>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde4e4f98>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde4e4f98>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde4d7c88>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde4e4f98>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde4e4f98>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
__________________ ERROR at setup of test_sort_url[0-True-0] ___________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd7b9518>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddd7b95c0>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd7b9518>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddda33390>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddda33390>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd7b9518>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd7b9518>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd7b9518>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddda33390>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd7b9518>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd7b9518>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_________________ ERROR at setup of test_sort_url[0-True-None] _________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde473d68>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dde473240>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde473d68>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde4a7a58>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde4a7a58>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde473d68>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde473d68>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde473d68>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde4a7a58>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde473d68>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde473d68>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
________________ ERROR at setup of test_sort_url[None-False-1] _________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd73ada0>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddda08dd8>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd73ada0>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd9f4160>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd9f4160>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd73ada0>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd73ada0>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd73ada0>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd9f4160>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd73ada0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd73ada0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
________________ ERROR at setup of test_sort_url[None-False-0] _________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd62ceb8>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddd62c6a0>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd62ceb8>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dddb73828>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dddb73828>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd62ceb8>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd62ceb8>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd62ceb8>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dddb73828>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd62ceb8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd62ceb8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_______________ ERROR at setup of test_sort_url[None-False-None] _______________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde84bf60>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddd5ae470>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde84bf60>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde844e48>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde844e48>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde84bf60>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde84bf60>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde84bf60>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde844e48>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde84bf60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde84bf60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_________________ ERROR at setup of test_sort_url[None-True-1] _________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde844668>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddd65dbe0>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde844668>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddebf4630>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddebf4630>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde844668>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde844668>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde844668>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddebf4630>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde844668>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde844668>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_________________ ERROR at setup of test_sort_url[None-True-0] _________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd5a4518>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddd58b198>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd5a4518>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde28bcc0>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde28bcc0>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd5a4518>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd5a4518>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd5a4518>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde28bcc0>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd5a4518>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd5a4518>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_______________ ERROR at setup of test_sort_url[None-True-None] ________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddc63f60>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddd66a128>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddc63f60>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dddc383c8>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dddc383c8>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddc63f60>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddc63f60>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddc63f60>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dddc383c8>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddc63f60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddc63f60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
___________________ ERROR at setup of test_page_size_url[20] ___________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd32c5f8>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dde782b38>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd32c5f8>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde781630>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde781630>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd32c5f8>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd32c5f8>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd32c5f8>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde781630>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd32c5f8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd32c5f8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
___________________ ERROR at setup of test_page_size_url[0] ____________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde782160>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddd4b7f28>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde782160>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd4e4198>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd4e4198>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde782160>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde782160>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde782160>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd4e4198>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde782160>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde782160>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
__________________ ERROR at setup of test_page_size_url[None] __________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd9d6f60>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddd3f3828>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd9d6f60>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd991860>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd991860>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd9d6f60>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd9d6f60>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd9d6f60>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd991860>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd9d6f60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd9d6f60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_ ERROR at setup of test_get_label_display_to_list_without_register_languages __

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd6ab080>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddd1ff4e0>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd6ab080>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dddaf0e48>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dddaf0e48>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd6ab080>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd6ab080>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd6ab080>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dddaf0e48>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd6ab080>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd6ab080>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
___ ERROR at setup of test_get_label_display_to_list_without_widget[1-None] ____

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddf080b8>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dddf08dd8>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddf080b8>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd63e550>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd63e550>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddf080b8>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddf080b8>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddf080b8>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd63e550>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddf080b8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddf080b8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
___ ERROR at setup of test_get_label_display_to_list_without_widget[2-None] ____

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd6da0b8>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddd799208>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd6da0b8>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd530cf8>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd530cf8>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd6da0b8>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd6da0b8>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd6da0b8>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd530cf8>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd6da0b8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd6da0b8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_________ ERROR at setup of test_get_label_display_to_list[1-for test] _________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddda77f60>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddd0bd860>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddda77f60>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dddaa6320>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dddaa6320>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddda77f60>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddda77f60>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddda77f60>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dddaa6320>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddda77f60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddda77f60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
________ ERROR at setup of test_get_label_display_to_list[2-for test2] _________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddce68710>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddce68a58>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddce68710>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd8d1e80>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd8d1e80>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddce68710>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddce68710>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddce68710>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd8d1e80>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddce68710>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddce68710>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
___________ ERROR at setup of test_get_label_display_to_list[3-None] ___________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde8fef28>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dde35ab70>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde8fef28>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde90c0f0>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde90c0f0>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde8fef28>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde8fef28>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde8fef28>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde90c0f0>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde8fef28>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde8fef28>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
__________________ ERROR at setup of test_search_placeholder ___________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd94bf60>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddd560240>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd94bf60>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd9677b8>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd9677b8>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd94bf60>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd94bf60>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd94bf60>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd9677b8>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd94bf60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd94bf60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_____________ ERROR at setup of test_index_view_WidgetSettingView ______________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd76bf60>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddd746f28>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd76bf60>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd75e6d8>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd75e6d8>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd76bf60>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd76bf60>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd76bf60>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd75e6d8>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd76bf60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd76bf60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_____________ ERROR at setup of test_create_view_WidgetSettingView _____________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddc25dd8>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dddc28f28>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddc25dd8>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dddbf5e10>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dddbf5e10>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddc25dd8>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddc25dd8>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddc25dd8>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dddbf5e10>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddc25dd8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddc25dd8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
______________ ERROR at setup of test_edit_view_WidgetSettingView ______________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd1bd0b8>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddd1bd3c8>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd1bd0b8>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd1bd240>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd1bd240>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd1bd0b8>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd1bd0b8>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd1bd0b8>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd1bd240>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd1bd0b8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd1bd0b8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
__________ ERROR at setup of test_get_detail_value_WidgetSettingView ___________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd814f60>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddd7f2f28>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd814f60>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd80e240>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd80e240>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd814f60>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd814f60>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd814f60>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd80e240>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd814f60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd814f60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
____________ ERROR at setup of test_details_view_WidgetSettingView _____________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddd1cf60>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dddd042b0>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddd1cf60>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dddd20f98>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dddd20f98>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddd1cf60>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddd1cf60>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddd1cf60>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dddd20f98>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddd1cf60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddd1cf60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
____________ ERROR at setup of test_action_delete_WidgetSettingView ____________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd5d4dd8>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddd5d4ef0>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd5d4dd8>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd22f5f8>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd22f5f8>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd5d4dd8>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd5d4dd8>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd5d4dd8>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd22f5f8>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd5d4dd8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd5d4dd8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
___________ ERROR at setup of test_get_count_query_WidgetSettingView ___________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcf8dfd0>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddcfa4f28>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcf8dfd0>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddcf71048>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddcf71048>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcf8dfd0>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcf8dfd0>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcf8dfd0>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddcf71048>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcf8dfd0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcf8dfd0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
____________ ERROR at setup of test_delete_model_WidgetSettingView _____________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcf8d940>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddcf8d7f0>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcf8d940>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddca20a20>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddca20a20>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcf8d940>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcf8d940>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcf8d940>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddca20a20>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcf8d940>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcf8d940>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
________________________ ERROR at setup of test_delete _________________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcda52e8>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddd093400>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcda52e8>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddcd7e3c8>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddcd7e3c8>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcda52e8>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcda52e8>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcda52e8>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddcd7e3c8>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcda52e8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcda52e8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_________________ ERROR at setup of test_get_all_widget_items __________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcd720f0>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddcec6f98>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcd720f0>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddcda50f0>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddcda50f0>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcd720f0>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcd720f0>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcd720f0>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddcda50f0>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcd720f0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcd720f0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
______________________ ERROR at setup of test_is_existed _______________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc82d358>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddcbc2f28>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc82d358>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddcbf0240>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddcbf0240>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc82d358>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc82d358>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc82d358>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddcbf0240>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc82d358>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc82d358>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
___________________ ERROR at setup of test_get_account_role ____________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd8a8f60>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddcbc2c50>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd8a8f60>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd890470>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd890470>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd8a8f60>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd8a8f60>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd8a8f60>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd890470>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd8a8f60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd8a8f60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
___________________ ERROR at setup of test_WidgetType_create ___________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc7299b0>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddc9c2d30>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc7299b0>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddcc68e80>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddcc68e80>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc7299b0>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc7299b0>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc7299b0>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddcc68e80>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc7299b0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc7299b0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_____________ ERROR at setup of test_get_id_by_repository_and_type _____________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddfb9f60>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dddfbcf60>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddfb9f60>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dddfed9b0>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dddfed9b0>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddfb9f60>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddfb9f60>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddfb9f60>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dddfed9b0>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddfb9f60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dddfb9f60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_____________________ ERROR at setup of test_get_sequence ______________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcacedd8>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddcaceef0>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcacedd8>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddcad73c8>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddcad73c8>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcacedd8>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcacedd8>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcacedd8>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddcad73c8>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcacedd8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcacedd8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_____________________ ERROR at setup of test_update_by_id ______________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc9a4f60>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddc977b70>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc9a4f60>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddc975e48>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddc975e48>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc9a4f60>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc9a4f60>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc9a4f60>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddc975e48>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc9a4f60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc9a4f60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_________________ ERROR at setup of test_update_setting_by_id __________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcf6bf60>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddc710978>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcf6bf60>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddc721828>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddc721828>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcf6bf60>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcf6bf60>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcf6bf60>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddc721828>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcf6bf60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcf6bf60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_____________________ ERROR at setup of test_delete_by_id ______________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd24bf60>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddd243f98>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd24bf60>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd255278>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd255278>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd24bf60>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd24bf60>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd24bf60>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd255278>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd24bf60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd24bf60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_______________________ ERROR at setup of test_get_by_id _______________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd366f60>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddd35f5f8>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd366f60>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd368a20>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd368a20>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd366f60>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd366f60>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd366f60>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd368a20>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd366f60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd366f60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
___________ ERROR at setup of test_update_by_id_WidgetMultiLangData ____________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde6aff28>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dde6af208>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde6aff28>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde6af0f0>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde6af0f0>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde6aff28>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde6aff28>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde6aff28>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dde6af0f0>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde6aff28>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dde6aff28>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
__________________ ERROR at setup of test_delete_by_widget_id __________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc761f60>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddc75ac50>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc761f60>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddc8e7080>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddc8e7080>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc761f60>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc761f60>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc761f60>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddc8e7080>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc761f60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc761f60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
______________________ ERROR at setup of test_select_all _______________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc5da5c0>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddc926dd8>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc5da5c0>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddc92f9e8>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddc92f9e8>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc5da5c0>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc5da5c0>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc5da5c0>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddc92f9e8>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc5da5c0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc5da5c0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
______________ ERROR at setup of test_update_WidgetDesignSetting _______________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc634c50>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddcb11dd8>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc634c50>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddc634940>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddc634940>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc634c50>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc634c50>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc634c50>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddc634940>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc634c50>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc634c50>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
______________ ERROR at setup of test_create_WidgetDesignSetting _______________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcfdae10>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddce75f28>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcfdae10>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddce7ed68>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddce7ed68>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcfdae10>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcfdae10>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcfdae10>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddce7ed68>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcfdae10>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddcfdae10>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
___________________ ERROR at setup of test_create_or_update ____________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd126f60>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddd108cc0>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd126f60>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd11e710>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd11e710>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd126f60>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd126f60>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd126f60>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd11e710>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd126f60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd126f60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
________________ ERROR at setup of test_delete_WidgetDesignPage ________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc6a2b38>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddc67bf28>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc6a2b38>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddc69f198>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddc69f198>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc6a2b38>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc6a2b38>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc6a2b38>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddc69f198>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc6a2b38>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc6a2b38>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
___________ ERROR at setup of test_update_settings_by_repository_id ____________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc4330f0>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddc433f28>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc4330f0>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddc43ddd8>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddc43ddd8>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc4330f0>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc4330f0>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc4330f0>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddc43ddd8>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc4330f0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc4330f0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
___________________ ERROR at setup of test_get_widget_by_id ____________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc038c88>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddc070f28>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc038c88>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddc06d588>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddc06d588>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc038c88>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc038c88>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc038c88>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddc06d588>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc038c88>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc038c88>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
______ ERROR at setup of test_create[widget_data0-Widget data is empty!] _______

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc0b8a58>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddcef3b00>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc0b8a58>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddc0e9e10>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddc0e9e10>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc0b8a58>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc0b8a58>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc0b8a58>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddc0e9e10>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc0b8a58>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc0b8a58>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_ ERROR at setup of test_create[widget_data1-Multiple language data is empty] __

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbcbe5c0>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddbcbedd8>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbcbe5c0>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddc94f978>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddc94f978>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbcbe5c0>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbcbe5c0>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbcbe5c0>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddc94f978>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbcbe5c0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbcbe5c0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_________________ ERROR at setup of test_create[widget_data2-] _________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc504518>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddc504668>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc504518>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddc94f4e0>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddc94f4e0>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc504518>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc504518>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc504518>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddc94f4e0>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc504518>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc504518>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
___________________ ERROR at setup of test_create_exception ____________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc94fef0>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddbc87908>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc94fef0>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddbd64860>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddbd64860>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc94fef0>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc94fef0>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc94fef0>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddbd64860>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc94fef0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc94fef0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_____ ERROR at setup of test_update_by_id[None-None-Widget data is empty!] _____

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc783f60>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddc783e48>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc783f60>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddbcbec88>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddbcbec88>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc783f60>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc783f60>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc783f60>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddbcbec88>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc783f60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc783f60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
______ ERROR at setup of test_update_by_id[1-None-Widget data is empty!] _______

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbf2ea20>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddbc0fdd8>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbf2ea20>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddbc1dbe0>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddbc1dbe0>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbf2ea20>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbf2ea20>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbf2ea20>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddbc1dbe0>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbf2ea20>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbf2ea20>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_ ERROR at setup of test_update_by_id[None-widget_data2-Widget data is empty!] _

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbb6a7f0>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddbf1eef0>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbb6a7f0>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddbf122b0>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddbf122b0>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbb6a7f0>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbb6a7f0>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbb6a7f0>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddbf122b0>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbb6a7f0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbb6a7f0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_ ERROR at setup of test_update_by_id[1-widget_data3-Multiple language data is empty] _

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbd9fda0>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddbf1e128>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbd9fda0>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddbdad940>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddbdad940>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbd9fda0>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbd9fda0>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbd9fda0>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddbdad940>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbd9fda0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbd9fda0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_____________ ERROR at setup of test_update_by_id[1-widget_data4-] _____________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbaa0f60>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddbc97dd8>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbaa0f60>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddbc824a8>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddbc824a8>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbaa0f60>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbaa0f60>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbaa0f60>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddbc824a8>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbaa0f60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbaa0f60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
________________ ERROR at setup of test_update_by_id_exception _________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbc82e80>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddb99f978>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbc82e80>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddbea66a0>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddbea66a0>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbc82e80>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbc82e80>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbc82e80>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddbea66a0>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbc82e80>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbc82e80>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
____________________ ERROR at setup of test_load_edit_pack _____________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc003eb8>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddb9d4f28>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc003eb8>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddb9baac8>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddb9baac8>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc003eb8>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc003eb8>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc003eb8>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddb9baac8>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc003eb8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc003eb8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
________________ ERROR at setup of test_get_locked_widget_info _________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbd6a630>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddbd5add8>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbd6a630>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddbd6ab38>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddbd6ab38>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbd6a630>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbd6a630>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbd6a630>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddbd6ab38>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbd6a630>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddbd6a630>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
______________________ ERROR at setup of test_lock_widget ______________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb848080>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddb9f6f28>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb848080>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddb9fda58>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddb9fda58>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb848080>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb848080>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb848080>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddb9fda58>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb848080>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb848080>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
__________________ ERROR at setup of test_get_repository_list __________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc320898>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddc320978>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc320898>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddc2fb208>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddc2fb208>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc320898>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc320898>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc320898>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddc2fb208>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc320898>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc320898>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
____________________ ERROR at setup of test_get_widget_list ____________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd0260f0>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddd002dd8>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd0260f0>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd0265f8>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd0265f8>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd0260f0>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd0260f0>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd0260f0>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddd0265f8>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd0260f0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddd0260f0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
__________________ ERROR at setup of test_get_widget_preview ___________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb8686d8>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddb83c0f0>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb8686d8>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddb86d550>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddb86d550>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb8686d8>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb8686d8>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb8686d8>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddb86d550>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb8686d8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb8686d8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
___________ ERROR at setup of test__update_main_layout_id_for_widget ___________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc412160>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddc412b00>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc412160>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddc4128d0>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddc4128d0>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc412160>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc412160>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc412160>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddc4128d0>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc412160>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddc412160>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_________________ ERROR at setup of test_get_new_arrivals_data _________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb3e7e48>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddb3e7e80>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb3e7e48>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddaf8ef60>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddaf8ef60>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb3e7e48>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb3e7e48>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb3e7e48>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddaf8ef60>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb3e7e48>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb3e7e48>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_______________ ERROR at setup of test_get_widget_page_endpoints _______________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb344da0>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddb341cf8>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb344da0>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddb347160>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddb347160>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb344da0>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb344da0>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb344da0>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddb347160>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb344da0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb344da0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_________________ ERROR at setup of test_get_widget_type_list __________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddacd3240>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddacd3358>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddacd3240>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddacdad30>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddacdad30>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddacd3240>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddacd3240>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddacd3240>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddacdad30>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddacd3240>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddacd3240>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_________________ ERROR at setup of test_get_default_language __________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb313d68>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddad76eb8>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb313d68>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddb313e48>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddb313e48>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb313d68>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb313d68>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb313d68>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddb313e48>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb313d68>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb313d68>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
________________ ERROR at setup of test_get_unregister_language ________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda932ba8>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dda932da0>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda932ba8>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dda8c25f8>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dda8c25f8>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda932ba8>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda932ba8>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda932ba8>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dda8c25f8>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda932ba8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda932ba8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_________________ ERROR at setup of test_get_register_language _________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb0664e0>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddb066668>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb0664e0>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddafc4048>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddafc4048>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb0664e0>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb0664e0>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb0664e0>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddafc4048>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb0664e0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb0664e0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
__________________ ERROR at setup of test_get_system_language __________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddaa9df60>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddab35320>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddaa9df60>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddaa9e908>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddaa9e908>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddaa9df60>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddaa9df60>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddaa9df60>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddaa9e908>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddaa9df60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddaa9df60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_____________________ ERROR at setup of test_build_rss_xml _____________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda7f9358>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dda7f9a20>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda7f9358>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dda7f99e8>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dda7f99e8>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda7f9358>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda7f9358>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda7f9358>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dda7f99e8>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda7f9358>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda7f9358>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_________________ ERROR at setup of test_find_rss_value[title] _________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb1bd358>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddad05b38>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb1bd358>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddaa5f668>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddaa5f668>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb1bd358>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb1bd358>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb1bd358>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddaa5f668>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb1bd358>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb1bd358>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_________________ ERROR at setup of test_find_rss_value[link] __________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddaa5f278>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddad055f8>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddaa5f278>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddaa32cf8>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddaa32cf8>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddaa5f278>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddaa5f278>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddaa5f278>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddaa32cf8>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddaa5f278>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddaa5f278>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
________________ ERROR at setup of test_find_rss_value[seeAlso] ________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb120898>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddaa5f3c8>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb120898>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dda2e1240>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dda2e1240>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb120898>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb120898>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb120898>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dda2e1240>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb120898>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb120898>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
________________ ERROR at setup of test_find_rss_value[creator] ________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda5ee908>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dda350dd8>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda5ee908>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dda35d400>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dda35d400>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda5ee908>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda5ee908>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda5ee908>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dda35d400>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda5ee908>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda5ee908>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_______________ ERROR at setup of test_find_rss_value[publisher] _______________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda42f4e0>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dda3f7ef0>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda42f4e0>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dda42f128>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dda42f128>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda42f4e0>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda42f4e0>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda42f4e0>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dda42f128>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda42f4e0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda42f4e0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
______________ ERROR at setup of test_find_rss_value[sourceTitle] ______________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda62fdd8>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dda62fef0>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda62fdd8>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dda6147f0>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dda6147f0>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda62fdd8>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda62fdd8>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda62fdd8>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dda6147f0>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda62fdd8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda62fdd8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_________________ ERROR at setup of test_find_rss_value[issn] __________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda3ed668>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dda172f60>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda3ed668>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dda3edb38>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dda3edb38>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda3ed668>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda3ed668>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda3ed668>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dda3edb38>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda3ed668>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda3ed668>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
________________ ERROR at setup of test_find_rss_value[volume] _________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda261b00>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dda9c5dd8>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda261b00>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dda9d1be0>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dda9d1be0>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda261b00>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda261b00>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda261b00>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dda9d1be0>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda261b00>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda261b00>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_________________ ERROR at setup of test_find_rss_value[issue] _________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb1e8f98>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddb1e8be0>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb1e8f98>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddb1e95f8>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddb1e95f8>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb1e8f98>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb1e8f98>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb1e8f98>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddb1e95f8>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb1e8f98>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddb1e8f98>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_______________ ERROR at setup of test_find_rss_value[pageStart] _______________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda2f28d0>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dda322f60>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda2f28d0>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dda2f25f8>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dda2f25f8>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda2f28d0>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda2f28d0>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda2f28d0>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dda2f25f8>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda2f28d0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda2f28d0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
________________ ERROR at setup of test_find_rss_value[pageEnd] ________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddaf63f60>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddaf5eeb8>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddaf63f60>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dda54c9b0>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dda54c9b0>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddaf63f60>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddaf63f60>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddaf63f60>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dda54c9b0>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddaf63f60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddaf63f60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_________________ ERROR at setup of test_find_rss_value[date] __________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda7316a0>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dda731f60>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda7316a0>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dda731ba8>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dda731ba8>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda7316a0>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda7316a0>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda7316a0>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dda731ba8>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda7316a0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda7316a0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
______________ ERROR at setup of test_find_rss_value[description] ______________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9f52dd8>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd9f52ef0>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9f52dd8>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9f64dd8>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9f64dd8>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9f52dd8>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9f52dd8>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9f52dd8>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9f64dd8>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9f52dd8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9f52dd8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_______________ ERROR at setup of test_find_rss_value[_updated] ________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9f14128>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd9f142e8>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9f14128>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9f54be0>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9f54be0>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9f14128>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9f14128>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9f14128>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9f54be0>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9f14128>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9f14128>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
____________ ERROR at setup of test_validate_main_widget_insertion _____________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddaba7fd0>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5ddab78f28>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddaba7fd0>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddab91588>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddab91588>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddaba7fd0>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddaba7fd0>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddaba7fd0>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5ddab91588>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddaba7fd0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5ddaba7fd0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
______________ ERROR at setup of test_main_design_has_main_widget ______________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda038f28>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dda1cf978>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda038f28>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dda1e2438>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dda1e2438>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda038f28>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda038f28>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda038f28>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dda1e2438>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda038f28>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda038f28>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_______________ ERROR at setup of TestWidgetBucket.test_get_file _______________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda1cf7f0>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dda714f60>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda1cf7f0>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9b21e48>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9b21e48>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda1cf7f0>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda1cf7f0>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda1cf7f0>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9b21e48>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda1cf7f0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda1cf7f0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_____________ ERROR at setup of test_unlocked_widget_login[0-403] ______________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9b598d0>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd9e27e48>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9b598d0>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9e143c8>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9e143c8>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9b598d0>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9b598d0>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9b598d0>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9e143c8>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9b598d0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9b598d0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_____________ ERROR at setup of test_unlocked_widget_login[1-403] ______________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9929400>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd9b2ddd8>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9929400>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9b4d5f8>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9b4d5f8>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9929400>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9929400>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9929400>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9b4d5f8>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9929400>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9929400>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_____________ ERROR at setup of test_unlocked_widget_login[2-200] ______________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9825ef0>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dda6f4e80>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9825ef0>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dda719e10>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dda719e10>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9825ef0>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9825ef0>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9825ef0>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dda719e10>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9825ef0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9825ef0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_____________ ERROR at setup of test_unlocked_widget_login[3-200] ______________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9bd9f60>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd9e90780>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9bd9f60>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9bcd518>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9bcd518>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9bd9f60>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9bd9f60>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9bd9f60>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9bcd518>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9bd9f60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9bd9f60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_____________ ERROR at setup of test_unlocked_widget_login[4-200] ______________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd989bdd8>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd989bef0>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd989bdd8>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd988d0b8>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd988d0b8>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd989bdd8>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd989bdd8>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd989bdd8>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd988d0b8>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd989bdd8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd989bdd8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_________________ ERROR at setup of test_unlocked_widget_guest _________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda086eb8>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dda08bf28>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda086eb8>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dda07e2e8>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dda07e2e8>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda086eb8>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda086eb8>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda086eb8>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dda07e2e8>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda086eb8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dda086eb8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
________ ERROR at setup of test_save_widget_layout_setting_login[0-403] ________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd992df60>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd9694cf8>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd992df60>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd98feb70>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd98feb70>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd992df60>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd992df60>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd992df60>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd98feb70>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd992df60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd992df60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
________ ERROR at setup of test_save_widget_layout_setting_login[1-403] ________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd979ee48>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd979efd0>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd979ee48>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd97aa0b8>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd97aa0b8>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd979ee48>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd979ee48>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd979ee48>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd97aa0b8>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd979ee48>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd979ee48>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
________ ERROR at setup of test_save_widget_layout_setting_login[2-200] ________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd96cd6d8>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd9d7af28>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd96cd6d8>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9d9f780>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9d9f780>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd96cd6d8>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd96cd6d8>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd96cd6d8>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9d9f780>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd96cd6d8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd96cd6d8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
________ ERROR at setup of test_save_widget_layout_setting_login[3-200] ________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd967af60>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd9677f28>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd967af60>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd96746d8>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd96746d8>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd967af60>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd967af60>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd967af60>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd96746d8>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd967af60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd967af60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
________ ERROR at setup of test_save_widget_layout_setting_login[4-200] ________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9421f60>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd9462da0>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9421f60>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9509550>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9509550>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9421f60>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9421f60>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9421f60>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9509550>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9421f60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9421f60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
___________ ERROR at setup of test_save_widget_layout_setting_guest ____________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9abe278>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd9abe400>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9abe278>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9addc18>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9addc18>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9abe278>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9abe278>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9abe278>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9addc18>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9abe278>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9abe278>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_____________ ERROR at setup of test_save_widget_item_login[0-403] _____________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9b8ef60>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd9b869e8>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9b8ef60>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9b78438>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9b78438>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9b8ef60>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9b8ef60>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9b8ef60>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9b78438>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9b8ef60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9b8ef60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_____________ ERROR at setup of test_save_widget_item_login[1-403] _____________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd92e0828>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd98d3dd8>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd92e0828>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd98c9e80>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd98c9e80>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd92e0828>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd92e0828>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd92e0828>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd98c9e80>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd92e0828>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd92e0828>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_____________ ERROR at setup of test_save_widget_item_login[2-200] _____________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9827f28>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd98c92b0>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9827f28>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd97fc0f0>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd97fc0f0>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9827f28>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9827f28>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9827f28>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd97fc0f0>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9827f28>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9827f28>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_____________ ERROR at setup of test_save_widget_item_login[3-200] _____________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9640f60>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd9634f60>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9640f60>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd963f7b8>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd963f7b8>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9640f60>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9640f60>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9640f60>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd963f7b8>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9640f60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9640f60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_____________ ERROR at setup of test_save_widget_item_login[4-200] _____________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd99c3f98>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd99b8dd8>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd99c3f98>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd99e4748>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd99e4748>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd99c3f98>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd99c3f98>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd99c3f98>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd99e4748>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd99c3f98>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd99c3f98>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
________________ ERROR at setup of test_save_widget_item_guest _________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd99c3e10>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd9202f28>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd99c3e10>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd920c828>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd920c828>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd99c3e10>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd99c3e10>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd99c3e10>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd920c828>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd99c3e10>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd99c3e10>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_________ ERROR at setup of test_save_widget_design_page_login[0-403] __________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd923f160>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd923f438>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd923f160>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9233c50>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9233c50>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd923f160>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd923f160>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd923f160>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9233c50>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd923f160>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd923f160>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_________ ERROR at setup of test_save_widget_design_page_login[1-403] __________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd928ff98>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd9272dd8>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd928ff98>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9284358>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9284358>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd928ff98>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd928ff98>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd928ff98>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9284358>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd928ff98>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd928ff98>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_________ ERROR at setup of test_save_widget_design_page_login[2-200] __________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9de3fd0>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd8f1c080>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9de3fd0>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9de39e8>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9de39e8>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9de3fd0>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9de3fd0>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9de3fd0>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9de39e8>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9de3fd0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9de3fd0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_________ ERROR at setup of test_save_widget_design_page_login[3-200] __________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd931cf60>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd95488d0>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd931cf60>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9307128>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9307128>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd931cf60>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd931cf60>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd931cf60>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9307128>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd931cf60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd931cf60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_________ ERROR at setup of test_save_widget_design_page_login[4-200] __________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8fb8dd8>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd8fb8ef0>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8fb8dd8>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8fc4240>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8fc4240>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8fb8dd8>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8fb8dd8>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8fb8dd8>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8fc4240>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8fb8dd8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8fb8dd8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_____________ ERROR at setup of test_save_widget_design_page_guest _____________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8ea6fd0>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd8dd6470>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8ea6fd0>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8ea6eb8>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8ea6eb8>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8ea6fd0>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8ea6fd0>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8ea6fd0>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8ea6eb8>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8ea6fd0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8ea6fd0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_____ ERROR at setup of test_load_widget_list_design_setting_login[0-403] ______

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8e64198>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd8e4c0f0>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8e64198>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8e69588>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8e69588>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8e64198>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8e64198>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8e64198>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8e69588>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8e64198>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8e64198>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_____ ERROR at setup of test_load_widget_list_design_setting_login[1-403] ______

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9433dd8>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd9433ef0>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9433dd8>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd946a128>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd946a128>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9433dd8>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9433dd8>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9433dd8>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd946a128>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9433dd8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9433dd8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_____ ERROR at setup of test_load_widget_list_design_setting_login[2-200] ______

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8d0f4e0>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd8d0f9b0>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8d0f4e0>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8e4f390>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8e4f390>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8d0f4e0>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8d0f4e0>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8d0f4e0>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8e4f390>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8d0f4e0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8d0f4e0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_____ ERROR at setup of test_load_widget_list_design_setting_login[3-200] ______

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8cbc2e8>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd8cbc9e8>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8cbc2e8>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9bffac8>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9bffac8>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8cbc2e8>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8cbc2e8>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8cbc2e8>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9bffac8>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8cbc2e8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8cbc2e8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_____ ERROR at setup of test_load_widget_list_design_setting_login[4-200] ______

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9086dd8>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd9086ef0>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9086dd8>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd907c5f8>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd907c5f8>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9086dd8>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9086dd8>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9086dd8>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd907c5f8>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9086dd8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd9086dd8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_________ ERROR at setup of test_load_widget_list_design_setting_guest _________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8c3e748>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd8df9f28>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8c3e748>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8e23898>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8e23898>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8c3e748>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8c3e748>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8c3e748>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8e23898>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8c3e748>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8c3e748>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
________ ERROR at setup of test_load_widget_design_setting_login[0-200] ________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd93e4b70>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd8a1cf28>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd93e4b70>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd93e0e48>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd93e0e48>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd93e4b70>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd93e4b70>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd93e4b70>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd93e0e48>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd93e4b70>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd93e4b70>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
________ ERROR at setup of test_load_widget_design_setting_login[1-200] ________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8b94828>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd8b94d30>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8b94828>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd97bb5f8>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd97bb5f8>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8b94828>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8b94828>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8b94828>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd97bb5f8>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8b94828>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8b94828>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
________ ERROR at setup of test_load_widget_design_setting_login[2-200] ________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd94eef60>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd94b3f28>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd94eef60>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd94bc198>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd94bc198>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd94eef60>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd94eef60>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd94eef60>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd94bc198>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd94eef60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd94eef60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
________ ERROR at setup of test_load_widget_design_setting_login[3-200] ________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd89921d0>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd8ada438>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd89921d0>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8b323c8>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8b323c8>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd89921d0>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd89921d0>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd89921d0>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8b323c8>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd89921d0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd89921d0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
________ ERROR at setup of test_load_widget_design_setting_login[4-200] ________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd88ca278>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd9054dd8>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd88ca278>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9049a90>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9049a90>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd88ca278>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd88ca278>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd88ca278>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9049a90>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd88ca278>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd88ca278>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
___________ ERROR at setup of test_load_widget_design_setting_guest ____________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd986a0b8>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd986a6a0>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd986a0b8>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dda77a198>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dda77a198>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd986a0b8>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd986a0b8>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd986a0b8>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dda77a198>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd986a0b8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd986a0b8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_________ ERROR at setup of test_load_widget_design_pages_login[0-403] _________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8acbf60>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd8abbf60>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8acbf60>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8ac6cf8>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8ac6cf8>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8acbf60>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8acbf60>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8acbf60>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8ac6cf8>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8acbf60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8acbf60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_________ ERROR at setup of test_load_widget_design_pages_login[1-403] _________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd870edd8>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd870ec88>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd870edd8>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8dba160>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8dba160>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd870edd8>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd870edd8>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd870edd8>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8dba160>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd870edd8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd870edd8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_________ ERROR at setup of test_load_widget_design_pages_login[2-200] _________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd99f4198>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd99f4978>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd99f4198>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8a34630>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8a34630>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd99f4198>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd99f4198>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd99f4198>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8a34630>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd99f4198>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd99f4198>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_________ ERROR at setup of test_load_widget_design_pages_login[3-200] _________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8613080>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd8613208>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8613080>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8f20cf8>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8f20cf8>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8613080>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8613080>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8613080>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8f20cf8>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8613080>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8613080>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_________ ERROR at setup of test_load_widget_design_pages_login[4-200] _________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8717dd8>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd8717ef0>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8717dd8>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8706898>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8706898>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8717dd8>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8717dd8>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8717dd8>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8706898>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8717dd8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8717dd8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
____________ ERROR at setup of test_load_widget_design_pages_guest _____________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd882b390>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd87181d0>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd882b390>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9e31ac8>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9e31ac8>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd882b390>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd882b390>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd882b390>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd9e31ac8>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd882b390>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd882b390>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_________ ERROR at setup of test_load_widget_design_page_login[0-403] __________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd87a8f60>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd8787ef0>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd87a8f60>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd877c470>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd877c470>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd87a8f60>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd87a8f60>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd87a8f60>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd877c470>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd87a8f60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd87a8f60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_________ ERROR at setup of test_load_widget_design_page_login[1-403] __________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd87870b8>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd8cc4d30>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd87870b8>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8cbb908>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8cbb908>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd87870b8>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd87870b8>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd87870b8>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8cbb908>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd87870b8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd87870b8>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_________ ERROR at setup of test_load_widget_design_page_login[2-200] __________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd867ab00>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd869ff28>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd867ab00>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd86805f8>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd86805f8>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd867ab00>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd867ab00>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd867ab00>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd86805f8>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd867ab00>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd867ab00>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_________ ERROR at setup of test_load_widget_design_page_login[3-200] __________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8447128>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd8f384a8>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8447128>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8c29668>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8c29668>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8447128>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8447128>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8447128>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8c29668>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8447128>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8447128>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_________ ERROR at setup of test_load_widget_design_page_login[4-200] __________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd83bdef0>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd83bdda0>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd83bdef0>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd83bfd30>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd83bfd30>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd83bdef0>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd83bdef0>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd83bdef0>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd83bfd30>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd83bdef0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd83bdef0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_____________ ERROR at setup of test_load_widget_design_page_guest _____________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd824a160>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd824ab00>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd824a160>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd84af550>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd84af550>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd824a160>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd824a160>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd824a160>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd84af550>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd824a160>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd824a160>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
____________ ERROR at setup of test_delete_widget_item_login[0-403] ____________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8ec6f98>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd8ec6f60>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8ec6f98>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8eb6f60>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8eb6f60>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8ec6f98>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8ec6f98>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8ec6f98>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8eb6f60>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8ec6f98>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8ec6f98>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
____________ ERROR at setup of test_delete_widget_item_login[1-403] ____________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd814ac18>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd89ccdd8>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd814ac18>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd89df710>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd89df710>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd814ac18>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd814ac18>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd814ac18>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd89df710>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd814ac18>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd814ac18>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
____________ ERROR at setup of test_delete_widget_item_login[2-200] ____________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd804e160>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd8761f28>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd804e160>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd87438d0>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd87438d0>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd804e160>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd804e160>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd804e160>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd87438d0>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd804e160>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd804e160>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
____________ ERROR at setup of test_delete_widget_item_login[3-200] ____________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd864ff60>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd8665f60>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd864ff60>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8638860>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8638860>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd864ff60>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd864ff60>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd864ff60>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8638860>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd864ff60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd864ff60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
____________ ERROR at setup of test_delete_widget_item_login[4-200] ____________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd80bb240>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd80bbfd0>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd80bb240>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd857a6a0>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd857a6a0>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd80bb240>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd80bb240>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd80bb240>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd857a6a0>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd80bb240>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd80bb240>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
_______________ ERROR at setup of test_delete_widget_item_guest ________________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd898df60>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd8979fd0>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd898df60>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd897d080>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd897d080>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd898df60>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd898df60>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd898df60>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd897d080>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd898df60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd898df60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
________ ERROR at setup of test_delete_widget_design_page_login[0-403] _________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8139f60>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd898d198>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8139f60>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8159470>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8159470>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8139f60>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8139f60>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8139f60>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd8159470>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8139f60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8139f60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
________ ERROR at setup of test_delete_widget_design_page_login[1-403] _________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd81aeef0>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd81aedd8>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd81aeef0>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd88e35c0>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd88e35c0>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd81aeef0>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd81aeef0>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd81aeef0>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd88e35c0>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd81aeef0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd81aeef0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
________ ERROR at setup of test_delete_widget_design_page_login[2-200] _________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd85281d0>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd8528e80>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd85281d0>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd84f6208>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd84f6208>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd85281d0>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd85281d0>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd85281d0>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd84f6208>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd85281d0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd85281d0>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
________ ERROR at setup of test_delete_widget_design_page_login[3-200] _________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8890f60>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd7d81160>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8890f60>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd88acda0>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd88acda0>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8890f60>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8890f60>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8890f60>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd88acda0>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8890f60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd8890f60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
________ ERROR at setup of test_delete_widget_design_page_login[4-200] _________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd85cef60>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd85b4f60>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd85cef60>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd85c3710>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd85c3710>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd85cef60>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd85cef60>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd85cef60>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd85c3710>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd85cef60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd85cef60>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
____________ ERROR at setup of test_delete_widget_design_page_guest ____________

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd7c13208>
create = <sqlalchemy.sql.ddl.CreateTable object at 0x7f5dd7e99f28>

    def visit_create_table(self, create):
        table = create.element
        preparer = self.preparer
    
        text = "\nCREATE "
        if table._prefixes:
            text += " ".join(table._prefixes) + " "
        text += "TABLE " + preparer.format_table(table) + " "
    
        create_table_suffix = self.create_table_suffix(table)
        if create_table_suffix:
            text += create_table_suffix + " "
    
        text += "("
    
        separator = "\n"
    
        # if only one primary key, specify it along with the column
        first_pk = False
        for create_column in create.columns:
            column = create_column.element
            try:
                processed = self.process(
>                   create_column, first_pk=column.primary_key and not first_pk
                )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd7c13208>
obj = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd7e916d8>
kwargs = {'first_pk': False}

    def process(self, obj, **kwargs):
>       return obj._compiler_dispatch(self, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd7e916d8>
visitor = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd7c13208>
kw = {'first_pk': False}
meth = <bound method DDLCompiler.visit_create_column of <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd7c13208>>

    def _compiler_dispatch(self, visitor, **kw):
        try:
            meth = getter(visitor)
        except AttributeError:
            raise exc.UnsupportedCompilationError(visitor, cls)
        else:
>           return meth(self, **kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd7c13208>
create = <sqlalchemy.sql.ddl.CreateColumn object at 0x7f5dd7e916d8>
first_pk = False

    def visit_create_column(self, create, first_pk=False):
        column = create.element
    
        if column.system:
            return None
    
>       text = self.get_column_specification(column, first_pk=first_pk)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd7c13208>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError

The above exception was the direct cause of the following exception:

app = <Flask 'testapp'>

    @pytest.fixture()
    def db(app):
        """Database fixture."""
        if not database_exists(str(db_.engine.url)):
            create_database(str(db_.engine.url))
>       db_.create_all()

tests/conftest.py:163: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:963: in create_all
    self._execute_for_all_tables(app, bind, 'create_all')
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:955: in _execute_for_all_tables
    op(bind=self.get_engine(app, bind), **extra)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/schema.py:4200: in create_all
    ddl.SchemaGenerator, self, checkfirst=checkfirst, tables=tables
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:2011: in _run_visitor
    conn._run_visitor(visitorcallable, element, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1599: in _run_visitor
    visitorcallable(self.dialect, self, **kwargs).traverse_single(element)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:779: in visit_metadata
    _is_metadata_operation=True,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:130: in traverse_single
    return meth(obj, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:824: in visit_table
    include_foreign_key_constraints,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:72: in _execute_on_connection
    return connection._execute_ddl(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1035: in _execute_ddl
    else None,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:448: in compile
    return self._compiler(dialect, bind=bind, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/ddl.py:29: in _compiler
    return dialect.ddl_compiler(dialect, self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:310: in __init__
    self.string = self.process(self.statement, **compile_kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2812: in visit_create_table
    % (table.description, column.name, ce.args[0])
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2800: in visit_create_table
    create_column, first_pk=column.primary_key and not first_pk
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:341: in process
    return obj._compiler_dispatch(self, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/visitors.py:90: in _compiler_dispatch
    return meth(self, **kw)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/compiler.py:2832: in visit_create_column
    text = self.get_column_specification(column, first_pk=first_pk)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.base.SQLiteDDLCompiler object at 0x7f5dd7c13208>
column = Column('organization_no', Integer(), table=<sitelicense_ip_address>, primary_key=True, nullable=False)
kwargs = {'first_pk': False}, coltype = 'INTEGER'
colspec = 'organization_no INTEGER NOT NULL', default = None

    def get_column_specification(self, column, **kwargs):
        coltype = self.dialect.type_compiler.process(
            column.type, type_expression=column
        )
        colspec = self.preparer.format_column(column) + " " + coltype
        default = self.get_column_default_string(column)
        if default is not None:
            if isinstance(column.server_default.arg, ColumnElement):
                default = "(" + default + ")"
            colspec += " DEFAULT " + default
    
        if not column.nullable:
            colspec += " NOT NULL"
    
        if column.primary_key:
            if (
                column.autoincrement is True
                and len(column.table.primary_key.columns) != 1
            ):
                raise exc.CompileError(
>                   "SQLite does not support autoincrement for "
                    "composite primary keys"
                )
E               sqlalchemy.exc.CompileError: (in table 'sitelicense_ip_address', column 'organization_no'): SQLite does not support autoincrement for composite primary keys

.tox/c1/lib/python3.6/site-packages/sqlalchemy/dialects/sqlite/base.py:925: CompileError
=================================== FAILURES ===================================
___________________________ test_build_general_data ____________________________

cls = <class 'weko_gridlayout.api.WidgetItems'>, data_object = 'data_object'
widget_items = {'browsing_role': ['browsing_role'], 'edit_role': ['edit_role'], 'enable': 'enable', 'repository': 'repository', ...}
is_update = False

    @classmethod
    def build_general_data(cls, data_object, widget_items, is_update=False):
        """Build general data of object.
    
        :param data_object: object data
        :param widget_items: widget item
        :param is_update: Update flag
        """
        try:
>           data_object["repository_id"] = widget_items.get('repository')
E           TypeError: 'str' object does not support item assignment

weko_gridlayout/api.py:44: TypeError

During handling of the above exception, another exception occurred:

    def test_build_general_data():
>       test.test_build_general_data()

tests/test_api.py:217: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_api.py:41: in test_build_general_data
    assert not WidgetItems.build_general_data("data_object", widget_items)
weko_gridlayout/api.py:58: in build_general_data
    current_app.logger.debug(ex)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:348: in __getattr__
    return getattr(self._get_current_object(), name)
.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: in _get_current_object
    return self.__local()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _find_app():
        top = _app_ctx_stack.top
        if top is None:
>           raise RuntimeError(_app_ctx_err_msg)
E           RuntimeError: Working outside of application context.
E           
E           This typically means that you attempted to use functionality that needed
E           to interface with the current application object in some way. To solve
E           this, set up an application context with app.app_context().  See the
E           documentation for more information.

.tox/c1/lib/python3.6/site-packages/flask/globals.py:52: RuntimeError
_________________________________ test_create __________________________________

self = <sqlalchemy.util._collections.ScopedRegistry object at 0x7f5e0bcbf2b0>

    def __call__(self):
        key = self.scopefunc()
        try:
>           return self.registry[key]
E           KeyError: 140042021107520

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/_collections.py:1005: KeyError

During handling of the above exception, another exception occurred:

cls = <class 'weko_gridlayout.api.WidgetItems'>
widget_items = {'background_color': 'background_color', 'browsing_role': 'browsing_role', 'edit_role': 'edit_role', 'enable': 'enable', ...}

    @classmethod
    def create(cls, widget_items=None):
        """Create the widget_items.
    
        :param widget_items: the widget item information.
        :returns: The :class:`widget item` instance lists or None.
        """
        def _add_widget_item(widget_setting):
            with db.session.begin_nested():
                widget_item = WidgetItem(**widget_setting)
                db.session.add(widget_item)
            db.session.commit()
    
        if not isinstance(widget_items, dict):
            return
    
        data = cls.build_object(widget_items)
        is_ok = True
        try:
>           _add_widget_item(data)

weko_gridlayout/api.py:117: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

widget_setting = {'browsing_role': 'browsing_role', 'edit_role': 'edit_role', 'is_enabled': 'enable', 'repository_id': 'repository', ...}

    def _add_widget_item(widget_setting):
>       with db.session.begin_nested():

weko_gridlayout/api.py:106: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.orm.scoping.scoped_session object at 0x7f5e0bcbf358>
args = (), kwargs = {}

    def do(self, *args, **kwargs):
>       return getattr(self.registry(), name)(*args, **kwargs)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/orm/scoping.py:162: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.util._collections.ScopedRegistry object at 0x7f5e0bcbf2b0>

    def __call__(self):
        key = self.scopefunc()
        try:
            return self.registry[key]
        except KeyError:
>           return self.registry.setdefault(key, self.createfunc())

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/_collections.py:1007: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = sessionmaker(class_='SignallingSession', db=<SQLAlchemy engine=None>, query_cls=<class 'flask_sqlalchemy.BaseQuery'>, bind=None, autoflush=True, autocommit=False, expire_on_commit=True)
local_kw = {'autocommit': False, 'autoflush': True, 'bind': None, 'db': <SQLAlchemy engine=None>, ...}
k = 'expire_on_commit', v = True

    def __call__(self, **local_kw):
        """Produce a new :class:`.Session` object using the configuration
        established in this :class:`.sessionmaker`.
    
        In Python, the ``__call__`` method is invoked on an object when
        it is "called" in the same way as a function::
    
            Session = sessionmaker()
            session = Session()  # invokes sessionmaker.__call__()
    
        """
        for k, v in self.kw.items():
            if k == "info" and "info" in local_kw:
                d = v.copy()
                d.update(local_kw["info"])
                local_kw["info"] = d
            else:
                local_kw.setdefault(k, v)
>       return self.class_(**local_kw)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/orm/session.py:3181: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.orm.session.SignallingSession object at 0x7f5ddcb6f240>
db = <SQLAlchemy engine=None>, autocommit = False, autoflush = True
options = {'bind': None, 'expire_on_commit': True, 'query_cls': <class 'flask_sqlalchemy.BaseQuery'>}

    def __init__(self, db, autocommit=False, autoflush=True, **options):
        #: The application that this session belongs to.
>       self.app = app = db.get_app()

.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:141: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <SQLAlchemy engine=None>, reference_app = None

    def get_app(self, reference_app=None):
        """Helper method that implements the logic to look up an
        application."""
    
        if reference_app is not None:
            return reference_app
    
        if current_app:
            return current_app._get_current_object()
    
        if self.app is not None:
            return self.app
    
        raise RuntimeError(
>           'No application found. Either work inside a view function or push'
            ' an application context. See'
            ' http://flask-sqlalchemy.pocoo.org/contexts/.'
        )
E       RuntimeError: No application found. Either work inside a view function or push an application context. See http://flask-sqlalchemy.pocoo.org/contexts/.

.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:912: RuntimeError

During handling of the above exception, another exception occurred:

cls = <class 'weko_gridlayout.api.WidgetItems'>
widget_items = {'background_color': 'background_color', 'browsing_role': 'browsing_role', 'edit_role': 'edit_role', 'enable': 'enable', ...}

    @classmethod
    def create(cls, widget_items=None):
        """Create the widget_items.
    
        :param widget_items: the widget item information.
        :returns: The :class:`widget item` instance lists or None.
        """
        def _add_widget_item(widget_setting):
            with db.session.begin_nested():
                widget_item = WidgetItem(**widget_setting)
                db.session.add(widget_item)
            db.session.commit()
    
        if not isinstance(widget_items, dict):
            return
    
        data = cls.build_object(widget_items)
        is_ok = True
        try:
            _add_widget_item(data)
        except Exception as ex:
            is_ok = False
>           current_app.logger.debug(ex)

weko_gridlayout/api.py:120: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <LocalProxy unbound>, name = 'logger'

    def __getattr__(self, name):
        if name == "__members__":
            return dir(self._get_current_object())
>       return getattr(self._get_current_object(), name)

.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:348: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <LocalProxy unbound>

    def _get_current_object(self):
        """Return the current object.  This is useful if you want the real
        object behind the proxy at a time for performance reasons or because
        you want to pass the object into a different context.
        """
        if not hasattr(self.__local, "__release_local__"):
>           return self.__local()

.tox/c1/lib/python3.6/site-packages/werkzeug/local.py:307: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

    def _find_app():
        top = _app_ctx_stack.top
        if top is None:
>           raise RuntimeError(_app_ctx_err_msg)
E           RuntimeError: Working outside of application context.
E           
E           This typically means that you attempted to use functionality that needed
E           to interface with the current application object in some way. To solve
E           this, set up an application context with app.app_context().  See the
E           documentation for more information.

.tox/c1/lib/python3.6/site-packages/flask/globals.py:52: RuntimeError

During handling of the above exception, another exception occurred:

self = <sqlalchemy.util._collections.ScopedRegistry object at 0x7f5e0bcbf2b0>

    def __call__(self):
        key = self.scopefunc()
        try:
>           return self.registry[key]
E           KeyError: 140042021107520

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/_collections.py:1005: KeyError

During handling of the above exception, another exception occurred:

    def test_create():
>       test.test_create()

tests/test_api.py:223: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_api.py:89: in test_create
    assert not WidgetItems.create(widget_items)
weko_gridlayout/api.py:124: in create
    db.session.rollback()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/orm/scoping.py:162: in do
    return getattr(self.registry(), name)(*args, **kwargs)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/_collections.py:1007: in __call__
    return self.registry.setdefault(key, self.createfunc())
.tox/c1/lib/python3.6/site-packages/sqlalchemy/orm/session.py:3181: in __call__
    return self.class_(**local_kw)
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:141: in __init__
    self.app = app = db.get_app()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <SQLAlchemy engine=None>, reference_app = None

    def get_app(self, reference_app=None):
        """Helper method that implements the logic to look up an
        application."""
    
        if reference_app is not None:
            return reference_app
    
        if current_app:
            return current_app._get_current_object()
    
        if self.app is not None:
            return self.app
    
        raise RuntimeError(
>           'No application found. Either work inside a view function or push'
            ' an application context. See'
            ' http://flask-sqlalchemy.pocoo.org/contexts/.'
        )
E       RuntimeError: No application found. Either work inside a view function or push an application context. See http://flask-sqlalchemy.pocoo.org/contexts/.

.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:912: RuntimeError
___________________________ test_get_account_role_2 ____________________________

self = <sqlalchemy.util._collections.ScopedRegistry object at 0x7f5e0bcbf2b0>

    def __call__(self):
        key = self.scopefunc()
        try:
>           return self.registry[key]
E           KeyError: 140042021107520

.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/_collections.py:1005: KeyError

During handling of the above exception, another exception occurred:

    def test_get_account_role_2():
>       test.test_get_account_role_2()

tests/test_api.py:239: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/test_api.py:188: in test_get_account_role_2
    assert WidgetItems.get_account_role()
weko_gridlayout/api.py:240: in get_account_role
    with db.session.no_autoflush:
.tox/c1/lib/python3.6/site-packages/sqlalchemy/orm/scoping.py:176: in get
    return getattr(self.registry(), name)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/_collections.py:1007: in __call__
    return self.registry.setdefault(key, self.createfunc())
.tox/c1/lib/python3.6/site-packages/sqlalchemy/orm/session.py:3181: in __call__
    return self.class_(**local_kw)
.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:141: in __init__
    self.app = app = db.get_app()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <SQLAlchemy engine=None>, reference_app = None

    def get_app(self, reference_app=None):
        """Helper method that implements the logic to look up an
        application."""
    
        if reference_app is not None:
            return reference_app
    
        if current_app:
            return current_app._get_current_object()
    
        if self.app is not None:
            return self.app
    
        raise RuntimeError(
>           'No application found. Either work inside a view function or push'
            ' an application context. See'
            ' http://flask-sqlalchemy.pocoo.org/contexts/.'
        )
E       RuntimeError: No application found. Either work inside a view function or push an application context. See http://flask-sqlalchemy.pocoo.org/contexts/.

.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:912: RuntimeError
___________________________ test_WidgetType_create_2 ___________________________

self = <sqlalchemy.engine.base.Connection object at 0x7f5ddc7b2048>
dialect = <sqlalchemy.dialects.sqlite.pysqlite.SQLiteDialect_pysqlite object at 0x7f5ddd364128>
constructor = <bound method DefaultExecutionContext._init_compiled of <class 'sqlalchemy.dialects.sqlite.base.SQLiteExecutionContext'>>
statement = 'INSERT INTO widget_type (type_id, type_name) VALUES (?, ?)'
parameters = (1, 'test')
args = (<sqlalchemy.dialects.sqlite.base.SQLiteCompiler object at 0x7f5ddc7b2128>, [{'type_id': 1, 'type_name': 'test'}])
conn = <sqlalchemy.pool._ConnectionFairy object at 0x7f5ddd3644e0>
context = <sqlalchemy.dialects.sqlite.base.SQLiteExecutionContext object at 0x7f5ddc7b20f0>

    def _execute_context(
        self, dialect, constructor, statement, parameters, *args
    ):
        """Create an :class:`.ExecutionContext` and execute, returning
        a :class:`.ResultProxy`."""
    
        try:
            try:
                conn = self.__connection
            except AttributeError:
                # escape "except AttributeError" before revalidating
                # to prevent misleading stacktraces in Py3K
                conn = None
            if conn is None:
                conn = self._revalidate_connection()
    
            context = constructor(dialect, self, conn, *args)
        except BaseException as e:
            self._handle_dbapi_exception(
                e, util.text_type(statement), parameters, None, None
            )
    
        if context.compiled:
            context.pre_exec()
    
        cursor, statement, parameters = (
            context.cursor,
            context.statement,
            context.parameters,
        )
    
        if not context.executemany:
            parameters = parameters[0]
    
        if self._has_events or self.engine._has_events:
            for fn in self.dispatch.before_cursor_execute:
                statement, parameters = fn(
                    self,
                    cursor,
                    statement,
                    parameters,
                    context,
                    context.executemany,
                )
    
        if self._echo:
            self.engine.logger.info(statement)
            self.engine.logger.info(
                "%r", sql_util._repr_params(parameters, batches=10)
            )
    
        evt_handled = False
        try:
            if context.executemany:
                if self.dialect._has_events:
                    for fn in self.dialect.dispatch.do_executemany:
                        if fn(cursor, statement, parameters, context):
                            evt_handled = True
                            break
                if not evt_handled:
                    self.dialect.do_executemany(
                        cursor, statement, parameters, context
                    )
            elif not parameters and context.no_parameters:
                if self.dialect._has_events:
                    for fn in self.dialect.dispatch.do_execute_no_params:
                        if fn(cursor, statement, context):
                            evt_handled = True
                            break
                if not evt_handled:
                    self.dialect.do_execute_no_params(
                        cursor, statement, context
                    )
            else:
                if self.dialect._has_events:
                    for fn in self.dialect.dispatch.do_execute:
                        if fn(cursor, statement, parameters, context):
                            evt_handled = True
                            break
                if not evt_handled:
                    self.dialect.do_execute(
>                       cursor, statement, parameters, context
                    )

.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1236: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.pysqlite.SQLiteDialect_pysqlite object at 0x7f5ddd364128>
cursor = <sqlite3.Cursor object at 0x7f5ddc9cd5e0>
statement = 'INSERT INTO widget_type (type_id, type_name) VALUES (?, ?)'
parameters = (1, 'test')
context = <sqlalchemy.dialects.sqlite.base.SQLiteExecutionContext object at 0x7f5ddc7b20f0>

    def do_execute(self, cursor, statement, parameters, context=None):
>       cursor.execute(statement, parameters)
E       sqlite3.OperationalError: no such table: widget_type

.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/default.py:536: OperationalError

The above exception was the direct cause of the following exception:

i18n_app = <Flask 'testapp'>

    def test_WidgetType_create_2(i18n_app):
        data = {
            "type_id": 1,
            "type_name": "test",
        }
    
        # Coverage for execption
>       assert WidgetType.create(data)

tests/test_models.py:31: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
weko_gridlayout/models.py:50: in create
    db.session.add(data_obj)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/orm/session.py:597: in __exit__
    self.rollback()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/sqlalchemy/orm/session.py:594: in __exit__
    self.commit()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/orm/session.py:487: in commit
    self._prepare_impl()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/orm/session.py:466: in _prepare_impl
    self.session.flush()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/orm/session.py:2446: in flush
    self._flush(objects)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/orm/session.py:2584: in _flush
    transaction.rollback(_capture_exception=True)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/langhelpers.py:67: in __exit__
    compat.reraise(exc_type, exc_value, exc_tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:277: in reraise
    raise value
.tox/c1/lib/python3.6/site-packages/sqlalchemy/orm/session.py:2544: in _flush
    flush_context.execute()
.tox/c1/lib/python3.6/site-packages/sqlalchemy/orm/unitofwork.py:416: in execute
    rec.execute(self)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/orm/unitofwork.py:583: in execute
    uow,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/orm/persistence.py:245: in save_obj
    insert,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/orm/persistence.py:1063: in _emit_insert_statements
    c = cached_connections[connection].execute(statement, multiparams)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:980: in execute
    return meth(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/sql/elements.py:273: in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1099: in _execute_clauseelement
    distilled_params,
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1240: in _execute_context
    e, statement, parameters, cursor, context
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1458: in _handle_dbapi_exception
    util.raise_from_cause(sqlalchemy_exception, exc_info)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:296: in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/util/compat.py:276: in reraise
    raise value.with_traceback(tb)
.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/base.py:1236: in _execute_context
    cursor, statement, parameters, context
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sqlalchemy.dialects.sqlite.pysqlite.SQLiteDialect_pysqlite object at 0x7f5ddd364128>
cursor = <sqlite3.Cursor object at 0x7f5ddc9cd5e0>
statement = 'INSERT INTO widget_type (type_id, type_name) VALUES (?, ?)'
parameters = (1, 'test')
context = <sqlalchemy.dialects.sqlite.base.SQLiteExecutionContext object at 0x7f5ddc7b20f0>

    def do_execute(self, cursor, statement, parameters, context=None):
>       cursor.execute(statement, parameters)
E       sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: widget_type [SQL: 'INSERT INTO widget_type (type_id, type_name) VALUES (?, ?)'] [parameters: (1, 'test')] (Background on this error at: http://sqlalche.me/e/e3q8)

.tox/c1/lib/python3.6/site-packages/sqlalchemy/engine/default.py:536: OperationalError
------------------------------ Captured log call -------------------------------
models.py                   54 ERROR    (sqlite3.OperationalError) no such table: widget_type [SQL: 'INSERT INTO widget_type (type_id, type_name) VALUES (?, ?)'] [parameters: (1, 'test')] (Background on this error at: http://sqlalche.me/e/e3q8)
______________________________ test_save_command _______________________________

i18n_app = <Flask 'testapp'>

    def test_save_command(i18n_app):
        data = {
            "data": 1,
            "flag_edit": False
        }
        return_data = {
            "message": "test",
            "success": "test"
        }
        return_data_2 = {
            "error": False,
        }
        with patch("weko_gridlayout.utils.build_data", return_value=""):
            with patch("weko_gridlayout.services.WidgetItemServices.create", return_value=return_data_2):
>               assert WidgetItemServices.save_command(data)

tests/test_services.py:44: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
weko_gridlayout/services.py:89: in save_command
    respond = cls.create(build_data(widget_data))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

data = 1

    def build_data(data):
        """Build data get from client to dictionary.
    
        Arguments:
            data {json} -- Client data
    
        Returns:
            dictionary -- server data
    
        """
        result = dict()
>       result['repository_id'] = data.get('repository')
E       AttributeError: 'int' object has no attribute 'get'

weko_gridlayout/utils.py:243: AttributeError
________________ test_handle_change_item_in_preview_widget_item ________________

i18n_app = <Flask 'testapp'>

    def test_handle_change_item_in_preview_widget_item(i18n_app):
        return_data = MagicMock()
        return_data.repository_id = "1"
        return_data.settings = "1"
        return_data.id = "1"
        widget_id = "1"
        data_result = MagicMock()
        with patch("weko_gridlayout.services.WidgetItemServices.get_widget_by_id", return_value=return_data):
            with patch("weko_gridlayout.models.WidgetDesignSetting.select_by_repository_id", return_value=return_data):
                with patch("weko_gridlayout.services.WidgetDesignPage.get_by_repository_id", return_value=[return_data]):
                    with patch("weko_gridlayout.services.WidgetDesignServices.update_item_in_preview_widget_item", return_value="test"):
                        with patch("weko_gridlayout.models.WidgetDesignPage.update_settings", return_value=False):
                            assert not WidgetDesignServices.handle_change_item_in_preview_widget_item(widget_id, data_result)
                        with patch("weko_gridlayout.models.WidgetDesignPage.update_settings", return_value=True):
                            with patch("weko_gridlayout.utils.delete_widget_cache", return_value="test"):
>                               assert WidgetDesignServices.handle_change_item_in_preview_widget_item(widget_id, data_result)
E                               AssertionError: assert False
E                                +  where False = <bound method WidgetDesignServices.handle_change_item_in_preview_widget_item of <class 'weko_gridlayout.services.WidgetDesignServices'>>('1', <MagicMock id='140041092753504'>)
E                                +    where <bound method WidgetDesignServices.handle_change_item_in_preview_widget_item of <class 'weko_gridlayout.services.WidgetDesignServices'>> = WidgetDesignServices.handle_change_item_in_preview_widget_item

tests/test_services.py:386: AssertionError
------------------------------ Captured log call -------------------------------
services.py                758 ERROR    local variable 'store' referenced before assignment
______________ test__update_main_layout_page_id_for_widget_design ______________

i18n_app = <Flask 'testapp'>

    def test__update_main_layout_page_id_for_widget_design(i18n_app):
        repository_id = "1"
        page_id = "1"
        return_data = {
            "settings": "test",
        }
        with patch("weko_gridlayout.services.WidgetDesignSetting.select_by_repository_id", return_value=return_data):
            # Doesn't return any value
>           assert not WidgetDesignPageServices._update_main_layout_page_id_for_widget_design(repository_id, page_id)

tests/test_services.py:464: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
weko_gridlayout/services.py:896: in _update_main_layout_page_id_for_widget_design
    if isinstance(widget_design.get('settings', '[]'), str) \
/usr/local/lib/python3.6/json/__init__.py:354: in loads
    return _default_decoder.decode(s)
/usr/local/lib/python3.6/json/decoder.py:339: in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <json.decoder.JSONDecoder object at 0x7f5e11a48438>, s = 'test', idx = 0

    def raw_decode(self, s, idx=0):
        """Decode a JSON document from ``s`` (a ``str`` beginning with
        a JSON document) and return a 2-tuple of the Python
        representation and the index in ``s`` where the document ended.
    
        This can be used to decode a JSON document from a string that may
        have extraneous data at the end.
    
        """
        try:
            obj, end = self.scan_once(s, idx)
        except StopIteration as err:
>           raise JSONDecodeError("Expecting value", s, err.value) from None
E           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)

/usr/local/lib/python3.6/json/decoder.py:357: JSONDecodeError
=============================== warnings summary ===============================
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_api.py::test_delete
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_is_existed
tests/test_api.py::test_get_account_role
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_sequence
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_select_all
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_or_update
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_update_settings_by_repository_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_save_command
tests/test_services.py::test_get_by_id
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create_exception
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_lock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test_delete_page
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_widget_page_endpoints
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_build_data
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_guest
  /code/modules/weko-gridlayout/.tox/c1/lib/python3.6/site-packages/flask_sqlalchemy/__init__.py:794: FSADeprecationWarning: SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and will be disabled by default in the future.  Set it to True or False to suppress this warning.
    'SQLALCHEMY_TRACK_MODIFICATIONS adds significant overhead and '

tests/test_admin.py::test_index_view_can_delete[True]
  /code/modules/weko-gridlayout/.tox/c1/lib/python3.6/site-packages/pkg_resources/_vendor/packaging/specifiers.py:276: DeprecationWarning: Creating a LegacyVersion has been deprecated and will be removed in the next major release
    DeprecationWarning,

tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[True]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[False]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_can_delete[None]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[1]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_sort_column[None]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-with data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without list-without data]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[with page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-with count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_index_view_editable_list_page_size_data[without page_size-without count]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[1]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_pager_url[2]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-1]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-0]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-False-None]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-1]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-0]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[1-True-None]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-1]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-0]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-False-None]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-1]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-0]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[0-True-None]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-1]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-0]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-False-None]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-1]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-0]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_sort_url[None-True-None]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[20]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[0]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_page_size_url[None]
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_register_languages
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[1-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list_without_widget[2-None]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[1-for test]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[2-for test2]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_get_label_display_to_list[3-None]
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_search_placeholder
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_index_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_create_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_edit_view_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_get_detail_value_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_details_view_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_action_delete_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_get_count_query_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_admin.py::test_delete_model_WidgetSettingView
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_delete
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_get_all_widget_items
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_is_existed
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_api.py::test_get_account_role
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_WidgetType_create_2
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_id_by_repository_and_type
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_get_sequence
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_update_setting_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_delete_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_get_by_id
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_update_by_id_WidgetMultiLangData
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_delete_by_widget_id
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_select_all
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_update_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_WidgetDesignSetting
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_create_or_update
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_delete_WidgetDesignPage
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_models.py::test_update_settings_by_repository_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_get_widget_by_id
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_save_command
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_get_by_id
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data0-Widget data is empty!]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data1-Multiple language data is empty]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create[widget_data2-]
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_create_exception
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-None-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[None-widget_data2-Widget data is empty!]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data3-Multiple language data is empty]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id[1-widget_data4-]
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_update_by_id_exception
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_delete_by_id
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_load_edit_pack
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_get_locked_widget_info
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_lock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_unlock_widget
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_repository_list_2
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_list
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_preview
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test_get_widget_design_setting_2
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_setting
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test__get_design_base_on_current_language
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_widget_design_setting
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_update_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_handle_change_item_in_preview_widget_item
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_is_used_in_widget_design
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_get_widget_design_setting
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test_add_or_update_page
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_id_for_widget
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_main_layout_page_id_for_widget_design
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_design_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test__update_page_id_for_widget_item_setting
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_delete_page
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page_list
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_page
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_new_arrivals_data
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_arrivals_rss
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_services.py::test_get_widget_page_endpoints
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_get_widget_type_list
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_delete_item_in_preview_widget_item
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_convert_popular_data
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_general_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_menu_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_access_counter_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_update_new_arrivals_item
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_default_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_unregister_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_register_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_get_system_language_2
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test_build_data
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test__escape_html_multi_lang_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test_build_data_setting
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_access_counter_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_new_arrivals_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_notice_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test__build_header_setting_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_build_multi_lang_data
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_data_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_widget_multi_lang_to_dict
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_design_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_convert_data_to_edit_pack
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_build_rss_xml
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[title]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[link]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[seeAlso]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[creator]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[publisher]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[sourceTitle]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[issn]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[volume]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[issue]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageStart]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[pageEnd]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[date]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[description]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_find_rss_value[_updated]
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_rss_data_source
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_get_elasticsearch_result_by_date
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_validate_main_widget_insertion
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_get_widget_design_page_with_main
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::test_main_design_has_main_widget
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_utils.py::TestWidgetBucket::test_get_file
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[0-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[1-403]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[2-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[3-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_login[4-200]
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_unlocked_widget_guest
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[0-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[1-403]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[2-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[3-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_login[4-200]
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_layout_setting_guest
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[0-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[1-403]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[2-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[3-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_login[4-200]
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_item_guest
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[0-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[1-403]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[2-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[3-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_login[4-200]
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_save_widget_design_page_guest
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[0-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[1-403]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[2-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[3-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_login[4-200]
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_list_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[0-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[1-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[2-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[3-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_login[4-200]
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_setting_guest
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[0-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[1-403]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[2-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[3-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_login[4-200]
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_pages_guest
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[0-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[1-403]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[2-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[3-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_login[4-200]
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_load_widget_design_page_guest
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[0-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[1-403]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[2-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[3-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_login[4-200]
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_item_guest
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[0-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[1-403]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[2-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[3-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_login[4-200]
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
tests/test_views.py::test_delete_widget_design_page_guest
  /code/modules/weko-gridlayout/.tox/c1/lib/python3.6/site-packages/pkg_resources/_vendor/packaging/version.py:114: DeprecationWarning: Creating a LegacyVersion has been deprecated and will be removed in the next major release
    DeprecationWarning,

-- Docs: https://docs.pytest.org/en/latest/warnings.html

---------- coverage: platform linux, python 3.6.15-final-0 -----------
Name                          Stmts   Miss Branch BrPart  Cover
---------------------------------------------------------------
weko_gridlayout/__init__.py       5      0      0      0   100%
weko_gridlayout/admin.py        194    141     74      0    21%
weko_gridlayout/api.py          138     34     46      4    70%
weko_gridlayout/bundles.py       16     16      0      0     0%
weko_gridlayout/cli.py           23     23      0      0     0%
weko_gridlayout/config.py        34      0      0      0   100%
weko_gridlayout/ext.py           24      1     12      2    92%
weko_gridlayout/models.py       313    194     84      5    34%
weko_gridlayout/services.py     595    294    236     31    46%
weko_gridlayout/utils.py        551    252    188     12    49%
weko_gridlayout/version.py        3      0      0      0   100%
weko_gridlayout/views.py        236    164     56      0    25%
---------------------------------------------------------------
TOTAL                          2132   1119    696     54    43%
Coverage XML written to file coverage.xml

======= 7 failed, 48 passed, 26258 warnings, 173 error in 299.96 seconds =======
ERROR: InvocationError for command /code/modules/weko-gridlayout/.tox/c1/bin/pytest --cov=weko_gridlayout tests -v --cov-branch --cov-report=term --cov-report=xml --basetemp=/code/modules/weko-gridlayout/.tox/c1/tmp (exited with code 1)
___________________________________ summary ____________________________________
ERROR:   c1: commands failed
